{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dist/templateCachePartials.js","bundle.ad8e0905.js","js/annotation_analysis/controllers/document-search-explore.js","js/annotation_analysis/controllers/document-search.js","js/annotation_analysis/directives/examples-in-span.js","js/annotation_analysis/directives/fs-types-in-span-table.js","js/annotation_analysis/directives/span-editor.js","js/annotation_analysis/index.js","js/app.js","js/common/controller/fs-instance-modal.js","js/common/directives/activity-indicator.js","js/common/directives/annotation-from-sofa.js","js/common/directives/feature-name.js","js/common/directives/feature-values.js","js/common/directives/fs-instance-id.js","js/common/directives/fs-instance-info.js","js/common/directives/highlighted-text.js","js/common/directives/index.js","js/common/directives/navbar-link.js","js/common/directives/navbar.js","js/common/directives/potential-cui.js","js/common/directives/system-name.js","js/common/directives/type-name.js","js/common/filters/start-at.js","js/common/index.js","js/common/services/cas-processing-index.js","js/common/services/es.js","js/common/services/feature-structure.js","js/common/services/index.js","js/common/services/pagination.js","js/common/services/sofa.js","js/common/services/type.js","js/systems/controllers/index.js","js/systems/controllers/system-builder.js","js/systems/controllers/system-task-progress.js","js/systems/controllers/system.js","js/systems/controllers/systems-list.js","js/systems/directives/boolean-primitive-feature.js","js/systems/directives/float-primitive-feature.js","js/systems/directives/index.js","js/systems/directives/instances-detail.js","js/systems/directives/int-primitive-feature.js","js/systems/directives/reference-features-detail.js","js/systems/directives/string-primitive-feature.js","js/systems/directives/system-types-list.js","js/systems/directives/type-info.js","js/systems/index.js","js/systems/services/system-indexing-tasks.js","js/type_system_analysis/controllers/analysis-builder.js","js/type_system_analysis/controllers/analysis-progress.js","js/type_system_analysis/controllers/analysis-results-explore.js","js/type_system_analysis/controllers/analysis-results.js","js/type_system_analysis/controllers/analysis.js","js/type_system_analysis/controllers/feature-examples-modal.js","js/type_system_analysis/controllers/index.js","js/type_system_analysis/controllers/type-selection-modal.js","js/type_system_analysis/directives/confusion-matrix-table.js","js/type_system_analysis/directives/cooccurring-examples-list.js","js/type_system_analysis/directives/cooccurring-examples-row.js","js/type_system_analysis/directives/feature-on.js","js/type_system_analysis/directives/feature-value-suggestion.js","js/type_system_analysis/directives/index.js","js/type_system_analysis/directives/sets-sorts-by.js","js/type_system_analysis/directives/unit-of-analysis-description.js","js/type_system_analysis/directives/unit-of-analysis.js","js/type_system_analysis/index.js","js/type_system_analysis/services/analysis-tasks.js","js/type_system_analysis/services/co-occurrence-matches.js","js/type_system_analysis/services/match-counts.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","angular","run","$templateCache","put",2,"controller","$scope","$routeParams","$location","$q","sofa","systems","casProcessingIndexes","map","obj","index","sofaIdentifier","sofaText","text","textSpan","begin","end","searchingAnnotatations","updateRanges","highlightedRange","outer","selectedAnnotationLocation","inner","$watch","search","replace","selectTypeInSystem","typeInSystem","selectedTypeInSystem","clearSelectedTypeInSystem","selectAnnotationLocation","annotationLocation","clearSelectedText","checkSelectedText","selection","window","getSelection","range","getRangeAt","startOffset","endOffset","removeAllRanges",3,"Sofa","nlptabConfig","pagination","page","itemsPerPage","queryString","q","fetching","escape","RegExp","remove","fetchSofas","removed","from","containingPhraseInText","instanceName","then","result","totalItems","total","ranges","sofas","idx","toLowerCase","indexOf","push","newVal","oldVal",4,"directive","templateUrl","restrict","FeatureStructure","fetchAssociatedFeatureStructure","withTypeInSystemAtLocation","type","systemIndex","featureStructure","primaryLocation","newValue","oldValue",5,"CasProcessingIndex","restorationPage","tpage","restorationTypeIndex","tindex","fetchAssociatedFsTypes","all","indexes","currentValue","getTypesInRange","typeInSystems",6,"transclude","scope","min","max","value","link","canDecrement","decrement","canIncrement","increment",7,"./controllers/document-search","./controllers/document-search-explore","./directives/examples-in-span","./directives/fs-types-in-span-table","./directives/span-editor",8,"deps","config","$routeProvider","when","isBio","reloadOnSearch","resolve","matchCounts","MatchCounts","$route","withId","current","params","matchCountsId","withSofaIdentifier","system","withIndexName","otherwise","redirectTo","../dist/templateCachePartials","./annotation_analysis/index","./common/index","./systems/index","./type_system_analysis/index",9,"$modalInstance","fsId","done","dismiss",10,"elem","attrs","opts","lines","spinnerLines","spinnerLength","width","spinnerWidth","radius","spinnerRadius","corners","spinnerCorners","rotate","spinnerRotate","direction","spinnerDirection","color","spinnerColor","speed","spinnerSpeed","trail","spinnerTrail","shadow","hwaccel","className","zIndex","top","left","spinner","Spinner","spin","get","style","height","position","appendChild","el",11,"documentIdentifier","minDistance","documentLocations","distance","substringStart","Math","substringEnd","preText","substring","annotationText","postText",12,"template","element","name","splits","split","shortenedName","url",13,"feature","fetch","termsAndMissingForFeature","mapToEsFeature","values","count",14,"$modal","open","size",15,"isEmpty","object","equals",16,"redraw","pre","preOuter","highlighted","postOuter","post",17,"./activity-indicator","./annotation-from-sofa","./feature-name","./feature-values","./fs-instance-id","./fs-instance-info","./highlighted-text","./navbar","./navbar-link","./potential-cui","./system-name","./type-name",18,"navbarCtrl","navbarLink","selectedLink","addClass",19,"this",20,"cui","isCui","test",21,"unlinked","getSystemNameForIndex","systemName",22,23,"filter","input","slice",24,"./controller/fs-instance-modal","./directives/index","./filters/start-at","./services/index",25,"service","Es","$http","systemNameCache","indexName","deferred","defer","casProcessingIndex","error","reject","promise","body","query","match","hits","_source","multi_match","operator","fields","term","ready","deleteSystem","esPath",26,"esFactory","host","esServer",27,"mapSources","extend","_index","_id","ids","ofType","types","featureStructures","primaryTypesFor","aggs","typeNames","terms","field","order","_term","aggregations","buckets","val","key","ofTypeWithoutPrimaryTypes","primaryTypes","getSize","getFrom","bool","must","must_not","primaryType","termsNotIn","isBoolean","isDefined","missingValues","missing","bucket","termsMissingAndCardinalityForFeature","isUndefined","others","cardinality","precision_threshold","otherUniqueValues","termsMissingCardinalityAndPercentilesForFeature","percentiles","percentile","hasOwnProperty","countTotal","search_type","countOfType","beginMin","beginMax","endMin","endMax","sBody","primaryLocation.begin","gte","lte","primaryLocation.end","sort","hit","systemTerms","typeTerms","systemBuckets","systemKey","typeBuckets","j","doc_count","inSystemWithType","featureTypeMap","uima.cas.Boolean","uima.cas.Byte","uima.cas.Double","uima.cas.Float","uima.cas.Integer","uima.cas.Long","uima.cas.Short","uima.cas.String","uima.cas.BooleanArray","uima.cas.ByteArray","uima.cas.ShortArray","uima.cas.IntegerArray","uima.cas.LongArray","uima.cas.FloatArray","uima.cas.DoubleArray","uima.cas.StringArray","uima.cas.FloatList","uima.cas.IntegerList","uima.cas.StringList","valueType",28,"./cas-processing-index","./es","./feature-structure","./index","./pagination","./sofa","./type",29,"PaginationInstance","prototype","totalPages","hasLowerPages","hasHigherPages","reset","withPageAndItemsPerPage",30,"query_string","default_field","match_all","sources","getSource","id",31,"NAMES_MAP","allInSystem","source","typeShortName.raw","typeShortName","withName","typeName","findChildren","parentTypes.raw","subclasses","superclassName","mapFeatureName","path",32,"./system","./system-builder","./system-task-progress","./systems-list",33,"SystemIndexingTasks","systemDescription","useXCas","uploading","submit","modal","indexMetadata","indexSystem","file","progress","loaded","data",34,"$interval","getProgress","systemIndexingTask","refresh","cancel","undefined","goToSystem","$on",35,"Type","infoActive","primitivesActive","referencesActive","instancesActive","deleteWarned","updateFromParams","info","primitives","references","instances","selectedTypeName","reload","selectedInfo","clearTabs","selectedPrimitives","selectedReferences","selectedInstances","selectType","clearSelectedType","selectedType","reason",36,"isSecure","fetchSystems","selectSystem","$event","stopPropagation",37,38,39,"./boolean-primitive-feature","./float-primitive-feature","./instances-detail","./int-primitive-feature","./reference-features-detail","./string-primitive-feature","./system-types-list","./type-info",40,"Pagination","instancesPagination","childTypes","toggleType","$index","childType","isSelected","loadTypeInstances","invertTypeSelection","fetchChildTypes","childTypeNames","childTypeName","featureStructureInstance","deselectedTypes",41,42,43,"string",44,"ignore","fetchTypes",45,"totalFeatureStructures","children",46,"./controllers/index","./services/system-indexing-tasks",47,"Upload","instance","http","headers","Content-Type",48,"AnalysisTasks","firstUnitOfAnalysis","filters","secondUnitOfAnalysis","featureValueMappings","onlyCompareMatches","description","firstAvail","featureName","ind","createFeatureValueMapping","hypothesisFeature","referenceFeature","updateEquivalences","featureValueMapping","hypothesisIsCollection","referenceIsCollection","equivalence","equivalenceOptions","addHypothesisFeatureValueMapping","nestedStructure","isCollection","addReferenceFeatureValueMapping","isReadyForAnalysis","removedFeature","valueMappings","splice","removeReferenceFeature","removeHypothesisFeature","submitAnalysis","runAnalysis",49,"analysisId","getAnalysisProgress","analysisTask","finished","failed",50,"examplesOf",51,"selectedTested","tested","selectedGold","gold","fetchMatchCounts","withTestedAndGoldStandard",52,"$filter","isReady","selectTested","selectedGoldStandard","countTestedAndGold","selectGoldStandard","goldStandard","goldCount","countTested","reference",53,"$uibModalInstance",54,"./analysis","./analysis-builder","./analysis-progress","./analysis-results","./analysis-results-explore","./feature-examples-modal","./type-selection-modal",55,56,57,"CoOccurrenceMatches","coOccurrences","firstOnly","secondOnly","fetchAnnotationLocations","withTypeAndId","coOccurrenceMatches","selectExamplesOf",58,"selected","coOccurrenceMatch","firstId","firstSystem","firstFs","secondId","secondSystem","secondFs",59,"featureShortName",60,61,"./confusion-matrix-table","./cooccurring-examples-list","./cooccurring-examples-row","./feature-on","./feature-value-suggestion","./sets-sorts-by","./unit-of-analysis","./unit-of-analysis-description",62,"attr","bind","setSortBy","setsSortBy","removeClass",63,"unitOfAnalysis","isHypothesis","mappings",64,"collections","addFeatureValueMapping","$uibModal","tree","filterOptions","selectedSystem","openTypeSelection","pushType","level","runningIndex","added","primitiveFeatures","shortName","onType","collection","primitive","class","subclass","referenceFeatures","expanded","expandItem","item","arrIndex","collapseItem","getNestedPath","nestedPath","ptr","parent","addFeature","__ret","examples","addFilter","option","deleteFilter",65,"./services/analysis-tasks","./services/co-occurrence-matches","./services/match-counts",66,"FeatureValueMapping","removeValueMapping","addValueMapping","hypothesisUnitOfAnalysis","referenceUnitOfAnalysis","hitMiss","fuzzDistance",67,"should",68,"allTested","allGoldStandardsForTested","hypothesisUnitOfAnalysis.systemIndex","referenceUnitOfAnalysis.systemIndex","response"],"mappings":"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","file":"bundle.ad8e0905.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/annotation-from-sofa.html',\n    '<span class=\"document-text\">{{preText}}<span class=\"annotation\">&thinsp;{{annotationText}}&thinsp;</span>{{postText}}</span>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/bio-main.html',\n    '<navbar></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '    <h1>NLP Type and Annotation Browser</h1>\\n' +\n    '    <h4>A system for integration and visualization of diverse biomedical NLP applications.</h4>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row marketing\">\\n' +\n    '    <div class=\"col-md-12\">\\n' +\n    '        <h4>Overview</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is a web-based system designed to allow researchers and developers of Natural Language Processing\\n' +\n    '            (NLP) systems to compare the output of several disparate NLP systems to each other or to a manually created\\n' +\n    '            reference standard. The comparison is performed by running the NLP systems on a single corpus of text with\\n' +\n    '            subsequent statistical analysis of co-occurences between annotations generated by NLP systems. Analysis\\n' +\n    '            results are stored and indexed using the Elasticsearch technology and displayed to end users with a custom\\n' +\n    '            web-based interface. NLP-TAB operates in two modes: Annotation Analysis and Type System Analysis as\\n' +\n    '            described below. The system is still early in its development - new features and improvements will be added\\n' +\n    '            in the course of next several months, so you don\\'t find what you need right now, please check back later.\\n' +\n    '        </p>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row marketing\">\\n' +\n    '    <div class=\"marketing-column\">\\n' +\n    '        <h4>Documents</h4>\\n' +\n    '        <p>\\n' +\n    '            The Documents section allows for the exploration of the documents run through each of the analyzed systems.\\n' +\n    '            You can filter to find specific text in documents, below are a few examples:</p>\\n' +\n    '        <ul>\\n' +\n    '\\n' +\n    '        </ul>\\n' +\n    '        <p>\\n' +\n    '            When exploring the documents you can select ranges of text in order to see which systems annotate the text\\n' +\n    '            with which types. You can select types to see their instances.\\n' +\n    '        </p>\\n' +\n    '        <h4>Type System Analysis</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            Type system analysis performs the comparison between annotation types generated by the different NLP systems\\n' +\n    '            by first counting how often pairs of annotations from different NLP systems cover approximately the same\\n' +\n    '            text and how often they cover completely different text. This co-occurence information is used to generate\\n' +\n    '            2X2 tables for all pairs of annotation types in order to calculate the degree of dependence between\\n' +\n    '            annotation types using common metrics which at present include the F-score, Jaccard and Matthews\\n' +\n    '            coefficients. Pairs of annotation types with higher scores are more likely to be functionally equivalent.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Type Systems</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            The type systems screen allows for users to explore the type systems that have been uploaded to the system,\\n' +\n    '            browsing the individual types in each system. Information included on the type systems page:\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '            <li>Basic information about types, their super and subtypes, and their occurrences</li>\\n' +\n    '            <li>Primitive features, their common values and distribution breakdowns</li>\\n' +\n    '            <li>Reference features, and what types they link to</li>\\n' +\n    '            <li>Instances of specific types</li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h4>Elasticsearch Backend</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB uses an Elasticsearch backend to store Common Annotation Structure (CAS) information produced by\\n' +\n    '            each NLP system being compared for each document in the collection. A read-only api to the backend is\\n' +\n    '            accessible at <a href=\"/elasticsearch\">athena.ahc.umn.edu/elasticsearch</a>. For more information on\\n' +\n    '            elasticsearch, you can visit their website at <a href=\"http://www.elasticsearch.org/\">elasticsearch.org</a>.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Source Code</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is open source and is distributed under the Apache (ASL 2.0) license. We\\'ve made it available at\\n' +\n    '            Bitbucket. The repositories contain additional instructions and documentation.\\n' +\n    '        </p>\\n' +\n    '        <dl class=\"dl-horizontal\">\\n' +\n    '            <dt>UIMA and Analysis</dt>\\n' +\n    '            <dd><a href=\"https://bitbucket.org/nlpie/nlptab\">bitbucket.org/nlpie/nlptab</a></dd>\\n' +\n    '            <dt>Web Application</dt>\\n' +\n    '            <dd><a href=\"https://bitbucket.org/nlpie/nlptab-webapp\">bitbucket.org/nlpie/nlptab-webapp</a></dd>\\n' +\n    '        </dl>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"marketing-column\">\\n' +\n    '\\n' +\n    '        <h4>About Us</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is developed by the <a href=\"http://www.bmhi.umn.edu/ihi/research/nlpie/\">University of Minnesota\\n' +\n    '            Institute for Health Informatics NLP/IE Group</a> and the <a href=\"http://ohnlp.org/index.php/Main_Page\">Open\\n' +\n    '            Health NLP Consortium</a>.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Other Resources</h4>\\n' +\n    '\\n' +\n    '        <h5>BioMedICUS</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/biomedicus/\">Demo</a></li>\\n' +\n    '        \t<li><a href=\"https://bitbucket.org/nlpie/biomedicus\">Source Code</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h5>NLP-TAB</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/nlptab\">Demo</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab\">Java Source Code</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab-webapp\">Web-app</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab-corpus\">Corpus</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h5>NLP/IE Group Resources</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://www.bmhi.umn.edu/ihi/research/nlpie/resources/index.htm\">Website</a></li>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/\">Demos</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h4>Acknowledgements</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            Funding for this work was provided by:\\n' +\n    '        </p>\\n' +\n    '        <ul>\\n' +\n    '            <li>1 R01 LM011364-01 NIH-NLM</li>\\n' +\n    '            <li>1 R01 GM102282-01A1 NIH-NIGMS</li>\\n' +\n    '            <li>U54 RR026066-01A2 NIH-NCRR</li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/breadcrumb.html',\n    '<!DOCTYPE html>\\n' +\n    '<html>\\n' +\n    '<head>\\n' +\n    '    <title></title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '\\n' +\n    '</body>\\n' +\n    '</html>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/feature-values.html',\n    '<div>\\n' +\n    '  <h4>Common Values:</h4>\\n' +\n    '  <table class=\"table table-bordered\">\\n' +\n    '    <thead>\\n' +\n    '    <tr>\\n' +\n    '      <th>Value</th>\\n' +\n    '      <th>Count</th>\\n' +\n    '      <th>Percentage</th>\\n' +\n    '    </tr>\\n' +\n    '    </thead>\\n' +\n    '    <tr ng-repeat=\"value in values\">\\n' +\n    '      <td>{{value.key}}</td>\\n' +\n    '      <td>{{value.doc_count}}</td>\\n' +\n    '      <td>{{(100.0 * value.doc_count / count) | number: 2}}</td>\\n' +\n    '    </tr>\\n' +\n    '  </table>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/fs-instance-info.html',\n    '<div ng-if=\"featureStructure\">\\n' +\n    '    <div>\\n' +\n    '        <h5>Associated Text</h5>\\n' +\n    '        <annotation-from-sofa feature-structure=\"featureStructure\"></annotation-from-sofa>\\n' +\n    '    </div>\\n' +\n    '    <div>\\n' +\n    '        <h5>Basic Info</h5>\\n' +\n    '        <dl class=\"dl-horizontal\">\\n' +\n    '            <dt>ElasticSearch Id</dt>\\n' +\n    '            <dd>{{featureStructure._id}}</dd>\\n' +\n    '            <dt>Type</dt>\\n' +\n    '            <dd><type-name name=\"featureStructure.primaryType\" system-index=\"featureStructure._index\"></type-name></dd>\\n' +\n    '        </dl>\\n' +\n    '    </div>\\n' +\n    '    <div ng-if=\"featureStructure.stringFeatures\">\\n' +\n    '        <h5>String Features</h5>\\n' +\n    '        <table class=\"table\">\\n' +\n    '            <thead>\\n' +\n    '            <tr>\\n' +\n    '                <th class=\"col-md-4\">Feature Name</th>\\n' +\n    '                <th class=\"col-md-8\">Feature Value</th>\\n' +\n    '            </tr>\\n' +\n    '            </thead>\\n' +\n    '            <tbody>\\n' +\n    '            <tr ng-repeat=\"(featureName, featureValue) in featureStructure.stringFeatures\">\\n' +\n    '                <td>\\n' +\n    '                    <feature-name name=\"featureName\" system-index=\"featureStructure._index\"></feature-name>\\n' +\n    '                </td>\\n' +\n    '                <td><potential-cui value=\"featureValue\"></potential-cui></td>\\n' +\n    '            </tr>\\n' +\n    '            </tbody>\\n' +\n    '        </table>\\n' +\n    '    </div>\\n' +\n    '    <div ng-if=\"featureStructure.intFeatures\">\\n' +\n    '        <h5>Integer Features</h5>\\n' +\n    '        <table class=\"table\">\\n' +\n    '            <thead>\\n' +\n    '                <tr>\\n' +\n    '                    <th class=\"col-md-4\">Feature Name</th>\\n' +\n    '                    <th class=\"col-md-8\">Feature Value</th>\\n' +\n    '                </tr>\\n' +\n    '            </thead>\\n' +\n    '            <tbody>\\n' +\n    '                <tr ng-repeat=\"(featureName, featureValue) in featureStructure.intFeatures\">\\n' +\n    '                    <td>\\n' +\n    '                        <feature-name name=\"featureName\" system-index=\"featureStructure._index\"></feature-name>\\n' +\n    '                    </td>\\n' +\n    '                    <td>{{featureValue}}</td>\\n' +\n    '                </tr>\\n' +\n    '            </tbody>\\n' +\n    '        </table>\\n' +\n    '    </div>\\n' +\n    '    <div ng-if=\"featureStructure.booleanFeatures\">\\n' +\n    '        <h5>Boolean Features</h5>\\n' +\n    '        <table class=\"table\">\\n' +\n    '            <thead>\\n' +\n    '            <tr>\\n' +\n    '                <th class=\"col-md-4\">Feature Name</th>\\n' +\n    '                <th class=\"col-md-8\">Feature Value</th>\\n' +\n    '            </tr>\\n' +\n    '            </thead>\\n' +\n    '            <tbody>\\n' +\n    '            <tr ng-repeat=\"(featureName, featureValue) in featureStructure.booleanFeatures\">\\n' +\n    '                <td>\\n' +\n    '                    <feature-name name=\"featureName\" system-index=\"featureStructure._index\"></feature-name>\\n' +\n    '                </td>\\n' +\n    '                <td>{{featureValue && {true: \\'true\\', false: \\'false\\'}[featureValue]}} </td>\\n' +\n    '            </tr>\\n' +\n    '            </tbody>\\n' +\n    '        </table>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <div ng-if=\"featureStructure.references && !isEmpty(featureStructure.references)\">\\n' +\n    '        <h5>References</h5>\\n' +\n    '        <table class=\"table\">\\n' +\n    '            <thead>\\n' +\n    '            <tr>\\n' +\n    '                <th class=\"col-md-4\">Feature Name</th>\\n' +\n    '                <th class=\"col-md-8\">Feature Structure Reference Id</th>\\n' +\n    '            </tr>\\n' +\n    '            </thead>\\n' +\n    '            <tbody>\\n' +\n    '            <tr ng-repeat=\"(featureName, referenceId) in featureStructure.references\">\\n' +\n    '                <td>\\n' +\n    '                    <feature-name name=\"featureName\" system-index=\"featureStructure._index\"></feature-name>\\n' +\n    '                </td>\\n' +\n    '                <td>\\n' +\n    '                    <fs-instance-id system-index=\"featureStructure._index\" fs-id=\"referenceId\"></fs-instance-id>\\n' +\n    '                </td>\\n' +\n    '            </tr>\\n' +\n    '            </tbody>\\n' +\n    '        </table>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <div ng-if=\"featureStructure.arrayItems && featureStructure.arrayItems.length > 0\">\\n' +\n    '        <h5>Array Items</h5>\\n' +\n    '        <ul class=\"list-unstyled\">\\n' +\n    '            <li ng-repeat=\"arrayItem in featureStructure.arrayItems\">\\n' +\n    '                <fs-instance-id system-index=\"featureStructure._index\" fs-id=\"arrayItem\"></fs-instance-id>\\n' +\n    '            </li>\\n' +\n    '        </ul>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '</div>\\n' +\n    '<div ng-if=\"!featureStructure\">\\n' +\n    '    <h4>Feature Structure was not found. This is potentially because the type was set to be ignored.</h4>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/fs-instance-modal.html',\n    '<div class=\"modal-header\">\\n' +\n    '    <h3 class=\"modal-title\">FeatureStructure Instance Info</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-body\">\\n' +\n    '    <fs-instance-info feature-structure=\"featureStructure\" system-index=\"systemIndex\"></fs-instance-info>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-footer\">\\n' +\n    '    <button class=\"btn btn-primary\" ng-click=\"done()\">Done</button>\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/main.html',\n    '<navbar></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '    <h1>NLP Type and Annotation Browser</h1>\\n' +\n    '    <h4>A system for integration and visualization of diverse biomedical NLP applications.</h4>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row marketing\">\\n' +\n    '    <div class=\"col-md-12\">\\n' +\n    '        <h4>Overview</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is a web-based system designed to allow researchers and developers of Natural Language Processing\\n' +\n    '            (NLP) systems to compare the output of several disparate NLP systems to each other or to a manually created\\n' +\n    '            reference standard. The comparison is performed by running the NLP systems on a single corpus of text with\\n' +\n    '            subsequent statistical analysis of co-occurences between annotations generated by NLP systems. Analysis\\n' +\n    '            results are stored and indexed using the Elasticsearch technology and displayed to end users with a custom\\n' +\n    '            web-based interface. NLP-TAB operates in two modes: Annotation Analysis and Type System Analysis as\\n' +\n    '            described below. The system is still early in its development - new features and improvements will be added\\n' +\n    '            in the course of next several months, so you don\\'t find what you need right now, please check back later.\\n' +\n    '        </p>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row marketing\">\\n' +\n    '    <div class=\"marketing-column\">\\n' +\n    '        <h4>Documents</h4>\\n' +\n    '        <p>\\n' +\n    '            The Documents section allows for the exploration of the documents run through each of the analyzed systems.\\n' +\n    '            You can filter to find specific text in documents, below are a few examples:</p>\\n' +\n    '        <ul>\\n' +\n    '            <li><a href=\"#/document-search?q=myocardial%20infarction\">Myocardial Infarction</a></li>\\n' +\n    '            <li><a href=\"#/document-search?q=neurontin\">Neurontin</a></li>\\n' +\n    '            <li><a href=\"#/document-search?q=HF\">HF</a></li>\\n' +\n    '            <li><a href=\"#/document-search?q=8%20mg%20q%206%20hrs\">6 mg q 6 hrs</a></li>\\n' +\n    '        </ul>\\n' +\n    '        <p>\\n' +\n    '            When exploring the documents you can select ranges of text in order to see which systems annotate the text\\n' +\n    '            with which types. You can select types to see their instances.\\n' +\n    '        </p>\\n' +\n    '        <h4>Type System Analysis</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            Type system analysis performs the comparison between annotation types generated by the different NLP systems\\n' +\n    '            by first counting how often pairs of annotations from different NLP systems cover approximately the same\\n' +\n    '            text and how often they cover completely different text. This co-occurence information is used to generate\\n' +\n    '            2X2 tables for all pairs of annotation types in order to calculate the degree of dependence between\\n' +\n    '            annotation types using common metrics which at present include the F-score, Jaccard and Matthews\\n' +\n    '            coefficients. Pairs of annotation types with higher scores are more likely to be functionally equivalent.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Type Systems</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            The type systems screen allows for users to explore the type systems that have been uploaded to the system,\\n' +\n    '            browsing the individual types in each system. Information included on the type systems page:\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '            <li>Basic information about types, their super and subtypes, and their occurrences</li>\\n' +\n    '            <li>Primitive features, their common values and distribution breakdowns</li>\\n' +\n    '            <li>Reference features, and what types they link to</li>\\n' +\n    '            <li>Instances of specific types</li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h4>Elasticsearch Backend</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB uses an Elasticsearch backend to store Common Annotation Structure (CAS) information produced by\\n' +\n    '            each NLP system being compared for each document in the collection. A read-only api to the backend is\\n' +\n    '            accessible at <a href=\"/elasticsearch\">athena.ahc.umn.edu/elasticsearch</a>. For more information on\\n' +\n    '            elasticsearch, you can visit their website at <a href=\"http://www.elasticsearch.org/\">elasticsearch.org</a>.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Source Code</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is open source and is distributed under the Apache (ASL 2.0) license. We\\'ve made it available at\\n' +\n    '            Bitbucket. The repositories contain additional instructions and documentation.\\n' +\n    '        </p>\\n' +\n    '        <dl class=\"dl-horizontal\">\\n' +\n    '            <dt>UIMA and Analysis</dt>\\n' +\n    '            <dd><a href=\"https://bitbucket.org/nlpie/nlptab\">bitbucket.org/nlpie/nlptab</a></dd>\\n' +\n    '            <dt>Web Application</dt>\\n' +\n    '            <dd><a href=\"https://bitbucket.org/nlpie/nlptab-webapp\">bitbucket.org/nlpie/nlptab-webapp</a></dd>\\n' +\n    '        </dl>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"marketing-column\">\\n' +\n    '        <h4>About Us</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is developed by the <a href=\"http://www.bmhi.umn.edu/ihi/research/nlpie/\">University of Minnesota\\n' +\n    '            Institute for Health Informatics NLP/IE Group</a> and the <a href=\"http://ohnlp.org/index.php/Main_Page\">Open\\n' +\n    '            Health NLP Consortium</a>.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Other Resources</h4>\\n' +\n    '\\n' +\n    '        <h5>BioMedICUS</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/biomedicus/\">Demo</a></li>\\n' +\n    '        \t<li><a href=\"https://bitbucket.org/nlpie/biomedicus\">Source Code</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h5>NLP-TAB</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/nlptab\">Demo</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab\">Java Source Code</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab-webapp\">Web-app</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab-corpus\">Corpus</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h5>NLP/IE Group Resources</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://www.bmhi.umn.edu/ihi/research/nlpie/resources/index.htm\">Website</a></li>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/\">Demos</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h4>Acknowledgements</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            Funding for this work was provided by:\\n' +\n    '        </p>\\n' +\n    '        <ul>\\n' +\n    '            <li>1 R01 LM011364-01 NIH-NLM</li>\\n' +\n    '            <li>1 R01 GM102282-01A1 NIH-NIGMS</li>\\n' +\n    '            <li>U54 RR026066-01A2 NIH-NCRR</li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/navbar.html',\n    '<nav class=\"navbar navbar-default\" role=\"navigation\">\\n' +\n    '  <div class=\"container-fluid\">\\n' +\n    '    <div class=\"navbar-header\">\\n' +\n    '      <a href=\"#/main\" class=\"navbar-brand\">NLP-TAB</a>\\n' +\n    '    </div>\\n' +\n    '    <ul class=\"nav navbar-nav\">\\n' +\n    '      <li navbar-link=\"document-search\"><a href=\"#/document-search\">Documents</a></li>\\n' +\n    '      <li navbar-link=\"systems\"><a href=\"#/type-systems\">Type Systems</a></li>\\n' +\n    '      <li navbar-link=\"analysis\"><a href=\"#/analysis\">Type Systems Analysis</a></li>\\n' +\n    '    </ul>\\n' +\n    '  </div>\\n' +\n    '</nav>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/document-search-explore.html',\n    '<navbar selected-link=\"\\'document-search\\'\"></navbar>\\n' +\n    '<main id=\"document-search-explore\">\\n' +\n    '    <div id=\"document\">\\n' +\n    '        <div class=\"panel panel-default\">\\n' +\n    '            <div class=\"panel-heading\">\\n' +\n    '                <h3 class=\"panel-title\">Document Text</h3>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-body\" ng-mousedown=\"clearSelectedText()\" ng-mouseup=\"checkSelectedText()\">\\n' +\n    '                <highlighted-text range=\"highlightedRange\" text=\"sofaText\"></highlighted-text>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-footer\">\\n' +\n    '                <div class=\"span-editor\">\\n' +\n    '                        <span class=\"span-begin-editor\">\\n' +\n    '                            <span-editor value=\"textSpan.begin\" min=\"0\" max=\"textSpan.end\">Begin</span-editor>\\n' +\n    '                        </span>\\n' +\n    '                        <span class=\"span-end-editor\">\\n' +\n    '                            <span-editor value=\"textSpan.end\" min=\"textSpan.begin\" max=\"sofaText.length\">End\\n' +\n    '                            </span-editor>\\n' +\n    '                        </span>\\n' +\n    '                </div>\\n' +\n    '                <!-- span-editor -->\\n' +\n    '            </div>\\n' +\n    '            <!-- panel-footer -->\\n' +\n    '        </div>\\n' +\n    '        <!-- panel -->\\n' +\n    '        <p><i>You can also select text with the mouse.</i></p>\\n' +\n    '    </div>\\n' +\n    '    <!-- document -->\\n' +\n    '    <div id=\"annotations\">\\n' +\n    '        <fs-types-in-span-table></fs-types-in-span-table>\\n' +\n    '    </div>\\n' +\n    '    <!-- annotations -->\\n' +\n    '    <div id=\"details\" ng-if=\"selectedTypeInSystem\">\\n' +\n    '        <examples-in-span></examples-in-span>\\n' +\n    '    </div>\\n' +\n    '    <!-- details -->\\n' +\n    '</main>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/document-search.html',\n    '<navbar selected-link=\"\\'document-search\\'\"></navbar>\\n' +\n    '<div id=\"document-search-results\">\\n' +\n    '    <table class=\"table\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th colspan=\"2\">\\n' +\n    '                <h2>Documents</h2>\\n' +\n    '            </th>\\n' +\n    '        </tr>\\n' +\n    '        <tr>\\n' +\n    '            <th>\\n' +\n    '                <h4>Filter</h4>\\n' +\n    '                <input type=\"text\" placeholder=\"Filter Text with Phrase\"\\n' +\n    '                       class=\"form-control\" id=\"queryString\" ng-model=\"queryString\">\\n' +\n    '            </th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tbody>\\n' +\n    '        <tr ng-show=\"fetching\">\\n' +\n    '            <td>\\n' +\n    '                <div class=\"center-block\" activity-indicator></div>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        <tr ng-repeat=\"sofa in sofas\">\\n' +\n    '            <td>\\n' +\n    '                <highlighted-text text=\"sofa.text\" range=\"ranges[$index]\"></highlighted-text>\\n' +\n    '            </td>\\n' +\n    '            <td class=\"explore-cell\">\\n' +\n    '                <a type=\"button\" class=\"btn btn-xs btn-primary\"\\n' +\n    '                   ng-href=\"#/document-search/explore/{{sofa.identifier}}?begin={{ranges[$index].outer.begin}}&end={{ranges[$index].outer.end}}\">Explore\\n' +\n    '                    <span class=\"glyphicon glyphicon-arrow-right\"></span></a>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        <tr ng-if=\"sofas.length === 0\">\\n' +\n    '            <td colspan=\"2\" class=\"text-vert-middle text-center\">\\n' +\n    '                <h3>No Results Found</h3>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        </tbody>\\n' +\n    '    </table>\\n' +\n    '\\n' +\n    '    <div class=\"text-center\">\\n' +\n    '        <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '                    total-items=\"pagination.totalItems\" max-size=\"15\" boundary-links=\"true\"></uib-pagination>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/examples-in-span.html',\n    '<div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">\\n' +\n    '            <type-name name=\"selectedTypeInSystem.type\"\\n' +\n    '                       system-index=\"selectedTypeInSystem.systemIndex\"></type-name>&nbsp;\\n' +\n    '            <small>Details</small>\\n' +\n    '        </h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '        <fs-instance-info feature-structure=\"featureStructure\"></fs-instance-info>\\n' +\n    '    </div>\\n' +\n    '    <!-- panel-body -->\\n' +\n    '</div>\\n' +\n    '<div class=\"text-center\">\\n' +\n    '    <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '                total-items=\"pagination.totalItems\" previous-text=\"&lsaquo;\" next-text=\"&rsaquo;\" max-size=\"7\"\\n' +\n    '                class=\"pagination-sm\" boundary-links=\"true\" first-text=\"&laquo;\" last-text=\"&raquo;\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/fs-types-in-span-table.html',\n    '<div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title annotations-title\">\\n' +\n    '            <span>FeatureStructure types in selected text</span>\\n' +\n    '        </h3>\\n' +\n    '    </div>\\n' +\n    '    <table class=\"table table-hover\">\\n' +\n    '        <tr ng-show=\"fetching\">\\n' +\n    '            <td>\\n' +\n    '                <div class=\"center-block\" activity-indicator>\\n' +\n    '                </div>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        <tr ng-repeat=\"typeInSystem in typeInSystems | startAt: from | limitTo: pagination.itemsPerPage\">\\n' +\n    '            <td class=\"title-subtitle-detail-cell\"\\n' +\n    '                ng-class=\"{true: \\'info\\', false: \\'\\'}[selectedTypeInSystem && typeInSystem === selectedTypeInSystem]\"\\n' +\n    '                ng-click=\"selectTypeInSystem(typeInSystem, typeInSystems.indexOf(typeInSystem))\">\\n' +\n    '                <span class=\"title\">\\n' +\n    '                    <type-name name=\"typeInSystem.type\" unlinked></type-name>\\n' +\n    '                </span>\\n' +\n    '                <span class=\"subtitle\">\\n' +\n    '                    <system-name system-index=\"typeInSystem.systemIndex\"></system-name>\\n' +\n    '                </span>\\n' +\n    '                <span class=\"detail\">{{typeInSystem.count | number : 0}}</span>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '    </table>\\n' +\n    '</div>\\n' +\n    '<!-- panel -->\\n' +\n    '<div class=\"text-center\">\\n' +\n    '    <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '                total-items=\"pagination.totalItems\" previous-text=\"&lsaquo;\" next-text=\"&rsaquo;\" max-size=\"5\"\\n' +\n    '                class=\"pagination-sm\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/span-editor.html',\n    '<button class=\"btn btn-xs\" ng-click=\"decrement()\" ng-class=\"{true: \\'\\', false: \\'disabled\\'}[canDecrement()]\">\\n' +\n    '    <span class=\"glyphicon glyphicon-arrow-left\"></span>\\n' +\n    '</button>\\n' +\n    'Span <span ng-transclude></span>: {{value}}\\n' +\n    '<button class=\"btn btn-xs\" ng-click=\"increment()\" ng-class=\"{true: \\'\\', false: \\'disabled\\'}[canIncrement()]\">\\n' +\n    '    <span class=\"glyphicon glyphicon-arrow-right\"></span>\\n' +\n    '</button>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/boolean-primitive-feature.html',\n    '<div>\\n' +\n    '    <h4>Values:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Value</th>\\n' +\n    '            <th>Count</th>\\n' +\n    '            <th>Percentage</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tr ng-repeat=\"boolValue in bool.values\">\\n' +\n    '            <td>{{boolValue.key}}</td>\\n' +\n    '            <td>{{boolValue.doc_count}}</td>\\n' +\n    '            <td>{{(100.0 * boolValue.doc_count / bool.count) | number: 2}}</td>\\n' +\n    '        </tr>\\n' +\n    '    </table>\\n' +\n    '    <p>{{bool.missing.doc_count}} instances are missing values for this feature. {{100.0 * bool.missing.doc_count / bool.count | number: 2}}% of total</p>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/float-primitive-feature.html',\n    '<div>\\n' +\n    '    <h4>Percentiles:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Percentile</th>\\n' +\n    '            <th>Value</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tbody>\\n' +\n    '        <tr ng-repeat=\"percentileObject in float.percentiles | orderBy:\\'percentile\\'\">\\n' +\n    '            <td>{{percentileObject.percentile | number: 1}}%</td>\\n' +\n    '            <td>{{percentileObject.count | number: 2}}</td>\\n' +\n    '        </tr>\\n' +\n    '        </tbody>\\n' +\n    '        <tfoot>\\n' +\n    '        <tr>\\n' +\n    '            <td colspan=\"2\">\\n' +\n    '                <p>{{float.missing.doc_count}} instances are missing values. {{100.0 * float.missing.doc_count / float.count | number: 2}}% of total</p>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        </tfoot>\\n' +\n    '    </table>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/instances-detail.html',\n    '<div ng-if=\"childTypes.length > 1\">\\n' +\n    '  <h4>Child Types&nbsp;\\n' +\n    '    <small><a ng-click=\"invertTypeSelection()\">Invert Selection</a></small>\\n' +\n    '  </h4>\\n' +\n    '  <div>\\n' +\n    '    <button style=\"margin: 2px\"\\n' +\n    '            ng-repeat=\"childType in childTypes\" class=\"btn btn-xs\"\\n' +\n    '            ng-class=\"{\\'true\\': \\'btn-primary\\', \\'false\\': \\'btn-danger\\'}[childType.isSelected]\"\\n' +\n    '            ng-click=\"toggleType($index)\">\\n' +\n    '      <type-name name=\"childType.name\" unlinked></type-name>\\n' +\n    '    </button>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"panel panel-default\" ng-if=\"featureStructureInstance\">\\n' +\n    '  <div class=\"panel-heading\">\\n' +\n    '    <div class=\"row\">\\n' +\n    '      <div class=\"col-md-2 text-left\">\\n' +\n    '        <a ng-if=\"instancesPagination.hasLowerPages()\" ng-click=\"instancesPagination.decrement()\">Previous</a>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"col-md-8 text-center\">\\n' +\n    '        <h3 class=\"panel-title\">Instance {{instancesPagination.page}} of {{instancesPagination.totalItems}} - Type:&nbsp;\\n' +\n    '          <type-name name=\"featureStructureInstance.primaryType\" system-index=\"systemIndex\"></type-name>\\n' +\n    '        </h3>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"col-md-2 text-right\">\\n' +\n    '        <a ng-if=\"instancesPagination.hasHigherPages()\" ng-click=\"instancesPagination.increment()\">Next</a>\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"panel-body\">\\n' +\n    '    <div ng-if=\"featureStructureInstance\">\\n' +\n    '      <fs-instance-info feature-structure=\"featureStructureInstance\"></fs-instance-info>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"text-center\">\\n' +\n    '  <uib-pagination ng-if=\"featureStructureInstance\" items-per-page=\"instancesPagination.itemsPerPage\"\\n' +\n    '              total-items=\"instancesPagination.totalItems\" ng-model=\"instancesPagination.page\" max-size=\"15\"\\n' +\n    '              boundary-links=\"true\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/int-primitive-feature.html',\n    '<div>\\n' +\n    '    <h4>Percentiles:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Percentile</th>\\n' +\n    '            <th>Value</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tr ng-repeat=\"percentileObject in int.percentiles | orderBy:\\'percentile\\'\">\\n' +\n    '            <td>{{percentileObject.percentile | number: 1}}%</td>\\n' +\n    '            <td>{{percentileObject.count | number: 0}}</td>\\n' +\n    '        </tr>\\n' +\n    '    </table>\\n' +\n    '    <h4>Common Values:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Value</th>\\n' +\n    '            <th>Occurrences</th>\\n' +\n    '            <th>Percentage</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tr ng-repeat=\"intValue in int.values\">\\n' +\n    '            <td>{{intValue.key}}</td>\\n' +\n    '            <td>{{intValue.doc_count}}</td>\\n' +\n    '            <td>{{(100.0 * intValue.doc_count / int.count) | number: 2}}</td>\\n' +\n    '        </tr>\\n' +\n    '        <tfoot>\\n' +\n    '        <tr>\\n' +\n    '            <td colspan=\"3\">\\n' +\n    '                <p>Approximately {{int.otherUniqueValues.value - int.values.length}} other unique values not shown here.</p>\\n' +\n    '                <p>{{int.missing.doc_count}} instances are missing values. {{100.0 * int.missing.doc_count / int.count | number: 2}}% of total</p>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        </tfoot>\\n' +\n    '    </table>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/reference-features-detail.html',\n    '<div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">Reference Features</h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '        <dl ng-if=\"selectedType.referenceFeatures.length > 0\">\\n' +\n    '            <dt ng-repeat-start=\"reference in selectedType.referenceFeatures\">{{reference.shortName}}</dt>\\n' +\n    '            <dd ng-repeat-end>\\n' +\n    '                Value Type:&nbsp;<type-name name=\"reference.valueType\" system-index=\"systemIndex\"></type-name>\\n' +\n    '            </dd>\\n' +\n    '        </dl>\\n' +\n    '        <p ng-if=\"selectedType.referenceFeatures.length === 0\">\\n' +\n    '            The selected type has no reference features.\\n' +\n    '        </p>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/string-primitive-feature.html',\n    '<div>\\n' +\n    '    <h4>Common Values:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Value</th>\\n' +\n    '            <th>Count</th>\\n' +\n    '            <th>Percentage</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tr ng-repeat=\"value in string.values\">\\n' +\n    '            <td>{{value.key}}</td>\\n' +\n    '            <td>{{value.doc_count}}</td>\\n' +\n    '            <td>{{(100.0 * value.doc_count / string.count) | number: 2}}</td>\\n' +\n    '        </tr>\\n' +\n    '        <tfoot>\\n' +\n    '        <tr>\\n' +\n    '            <td colspan=\"3\">\\n' +\n    '                <p>Approximately {{string.otherUniqueValues.value - string.values.length}} other unique values not shown here.</p>\\n' +\n    '                <p>{{string.missing.doc_count}} instances are missing values. {{100.0 * string.missing.doc_count / string.count | number: 2}}% of total</p>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        </tfoot>\\n' +\n    '    </table>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/system-builder.html',\n    '<navbar selected-link=\"\\'systems\\'\"></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '  <h1>Add new system</h1>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-4\">\\n' +\n    '    <form ng-disabled=\"!uploading\">\\n' +\n    '      <div class=\"form-group\">\\n' +\n    '        <label for=\"systemName\">System Name</label>\\n' +\n    '        <input type=\"text\" class=\"form-control\" id=\"systemName\" ng-model=\"systemName\" placeholder=\"Systemname\">\\n' +\n    '      </div>\\n' +\n    '      <div class=\"form-group\">\\n' +\n    '        <label for=\"systemDescription\">System Description</label>\\n' +\n    '        <input type=\"text\" class=\"form-control\" id=\"systemDescription\" ng-model=\"systemDescription\"\\n' +\n    '               placeholder=\"System Description\">\\n' +\n    '      </div>\\n' +\n    '      <div class=\"form-group\">\\n' +\n    '        <label for=\"files\">Zip File</label>\\n' +\n    '        <input id=\"files\" type=\"file\" ngf-select ng-model=\"file\" name=\"file\" accept=\"application/zip\" required>\\n' +\n    '\\n' +\n    '        <p class=\"help-block\">Zipped input file, should contain a file named TypeSystem.xml with the UIMA type system\\n' +\n    '          and any number of UIMA XMI documents.</p>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"form-group\">\\n' +\n    '        <label for=\"useXCas\">Use XCas?</label>\\n' +\n    '        <input type=\"checkbox\" class=\"form-control\" id=\"useXCas\" ng-model=\"useXCas\">\\n' +\n    '\\n' +\n    '        <p class=\"help-block\">Whether or not the input contains XCas serialized files, the default is to use XMI\\n' +\n    '          serialized files</p>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"btn btn-default\" ng-click=\"submit()\">Submit</div>\\n' +\n    '    </form>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/system-task-progress.html',\n    '<navbar selected-link=\"\\'systems\\'\"></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '  <h1>System Indexing Progress</h1>\\n' +\n    '</div>\\n' +\n    '<div class=\"col-md-6 col-md-offset-3\" ng-if=\"!systemIndexingTask\">\\n' +\n    '  <h3>Preparing for System Indexing</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"col-md-6 col-md-offset-3\" ng-if=\"systemIndexingTask\">\\n' +\n    '  <p class=\"text-center\">Completed {{systemIndexingTask.entityCount}} of {{systemIndexingTask.total}}\\n' +\n    '    documents.</p>\\n' +\n    '  <uib-progressbar max=\"systemIndexingTask.total\" value=\"systemIndexingTask.entityCount\"></uib-progressbar>\\n' +\n    '  <p class=\"text-center\" ng-if=\"systemIndexingTask.failed\">System Indexing task failed. Reason: </p>\\n' +\n    '\\n' +\n    '  <p ng-repeat=\"exception in systemIndexingTask.exceptions\">\\n' +\n    '    <span ng-repeat-start=\"line in exception\">{{line}}</span>\\n' +\n    '    <br ng-repeat-end>\\n' +\n    '  </p>\\n' +\n    '\\n' +\n    '  <div class=\"text-center\" ng-if=\"systemIndexingTask.finished && !systemIndexingTask.failed\">\\n' +\n    '    <p>\\n' +\n    '      System indexing task completed without errors.\\n' +\n    '    </p>\\n' +\n    '    <p>\\n' +\n    '      Click <a class=\"ng-click-link\" ng-click=\"goToSystem()\">here</a> to continue to system information.\\n' +\n    '    </p>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/system-types-list.html',\n    '<input type=\"text\" class=\"form-control\" placeholder=\"Filter types\" ng-model=\"filter\">\\n' +\n    '<div class=\"panel panel-default\">\\n' +\n    '  <div class=\"panel-heading\">\\n' +\n    '    <h3 class=\"panel-title\">Types</h3>\\n' +\n    '  </div>\\n' +\n    '\\n' +\n    '  <table class=\"table table-hover\">\\n' +\n    '    <tr ng-repeat=\"type in types\">\\n' +\n    '      <td ng-class=\"{\\'true\\':\\'info\\', \\'false\\':\\'\\'}[selectedTypeName === type.typeName]\" ng-click=\"selectType(type)\"\\n' +\n    '          class=\"ng-click-link\">\\n' +\n    '        <type-name name=\"type.typeName\" unlinked></type-name>\\n' +\n    '      </td>\\n' +\n    '    </tr>\\n' +\n    '  </table>\\n' +\n    '</div>\\n' +\n    '<div class=\"text-center\">\\n' +\n    '  <uib-pagination ng-model=\"pagination.page\" total-items=\"pagination.totalItems\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '              max-size=\"5\" previous-text=\"&lsaquo;\" next-text=\"&rsaquo;\" boundary-links=\"true\"\\n' +\n    '              first-text=\"&laquo;\" last-text=\"&raquo;\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/system.html',\n    '<navbar selected-link=\"\\'systems\\'\"></navbar>\\n' +\n    '<div class=\"row\" ng-if=\"deleteWarned\">\\n' +\n    '  <div class=\"col-md-12\">\\n' +\n    '    <div class=\"alert alert-danger\" role=\"alert\">Warning: deleting a system is permanent, click \"Delete System\" again to\\n' +\n    '      continue.\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-12\">\\n' +\n    '    <h2>{{system.system}}\\n' +\n    '      &nbsp;\\n' +\n    '      <small><a class=\"ng-click-link\" ng-click=\"deleteSystem()\">Delete System</a></small>\\n' +\n    '    </h2>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-3\">\\n' +\n    '    <system-types-list></system-types-list>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"col-md-9\" ng-if=\"selectedTypeName\">\\n' +\n    '    <uib-tabset justified=\"true\" ng-if=\"selectedType\">\\n' +\n    '      <uib-tab heading=\"Info\" active=\"infoActive\" select=\"selectedInfo()\">\\n' +\n    '        <type-info ng-if=\"infoActive\"></type-info>\\n' +\n    '      </uib-tab>\\n' +\n    '      <uib-tab heading=\"Primitive Features\" active=\"primitivesActive\" select=\"selectedPrimitives()\">\\n' +\n    '        <uib-accordion close-others=\"false\" ng-if=\"selectedType.primitiveFeatures.length > 0\">\\n' +\n    '          <uib-accordion-group ng-repeat=\"primitiveFeature in selectedType.primitiveFeatures\"\\n' +\n    '                           is-open=\"primitiveFeature.isOpen\">\\n' +\n    '            <uib-accordion-heading>\\n' +\n    '              {{primitiveFeature.shortName}} ({{primitiveFeature.valueType}})\\n' +\n    '            </uib-accordion-heading>\\n' +\n    '            <div ng-if=\"primitiveFeature.isOpen && primitiveFeature.valueType === \\'uima.cas.Boolean\\'\">\\n' +\n    '              <boolean-primitive-feature feature=\"primitiveFeature\" system-index=\"systemIndex\"\\n' +\n    '                                         selected-type=\"selectedType\"></boolean-primitive-feature>\\n' +\n    '            </div>\\n' +\n    '            <div ng-if=\"primitiveFeature.isOpen && primitiveFeature.valueType === \\'uima.cas.String\\'\">\\n' +\n    '              <string-primitive-feature feature=\"primitiveFeature\" system-index=\"systemIndex\"\\n' +\n    '                                        selected-type=\"selectedType\"></string-primitive-feature>\\n' +\n    '            </div>\\n' +\n    '            <div ng-if=\"primitiveFeature.isOpen && primitiveFeature.valueType === \\'uima.cas.Integer\\'\">\\n' +\n    '              <int-primitive-feature feature=\"primitiveFeature\" system-index=\"systemIndex\"\\n' +\n    '                                     selected-type=\"selectedType\"></int-primitive-feature>\\n' +\n    '            </div>\\n' +\n    '            <div ng-if=\"primitiveFeature.isOpen && primitiveFeature.valueType === \\'uima.cas.Float\\'\">\\n' +\n    '              <float-primitive-feature feature=\"primitiveFeature\" system-index=\"systemIndex\"\\n' +\n    '                                       selected-type=\"selectedType\"></float-primitive-feature>\\n' +\n    '            </div>\\n' +\n    '          </uib-accordion-group>\\n' +\n    '        </uib-accordion>\\n' +\n    '        <div class=\"panel panel-default\" ng-show=\"selectedType.primitiveFeatures.length === 0\">\\n' +\n    '          <div class=\"panel-body\">\\n' +\n    '            <p>The selected type has no primitive features.</p>\\n' +\n    '          </div>\\n' +\n    '        </div>\\n' +\n    '      </uib-tab>\\n' +\n    '      <uib-tab heading=\"Reference Features\" active=\"referencesActive\" select=\"selectedReferences()\">\\n' +\n    '        <reference-features-detail ng-if=\"referencesActive\"></reference-features-detail>\\n' +\n    '      </uib-tab>\\n' +\n    '      <uib-tab heading=\"Instances\" active=\"instancesActive\" select=\"selectedInstances()\">\\n' +\n    '        <instances-detail ng-if=\"instancesActive\"></instances-detail>\\n' +\n    '      </uib-tab>\\n' +\n    '    </uib-tabset>\\n' +\n    '    <div class=\"panel panel-default\" ng-if=\"!selectedType\">\\n' +\n    '      <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">\\n' +\n    '          <type-name name=\"selectedTypeName\" unlinked></type-name>\\n' +\n    '        </h3>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"panel-body\">\\n' +\n    '        This type has no instances included in the results from {{system.system}}. It is either not used or is\\n' +\n    '        not saved in the CAS output.\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/systems-list.html',\n    '<navbar selected-link=\"\\'systems\\'\"></navbar>\\n' +\n    '<div class=\"row\" ng-if=\"deleteWarned\">\\n' +\n    '  <div class=\"col-md-12\">\\n' +\n    '    <div class=\"alert alert-danger\" role=\"alert\">Warning: deleting a system is permanent, click again to\\n' +\n    '      continue.\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '  <h1>Type Systems</h1>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-12\">\\n' +\n    '    <table class=\"table table-hover\">\\n' +\n    '      <tbody>\\n' +\n    '      <tr ng-repeat=\"system in systems\" class=\"system-row ng-click-link\" ng-click=\"selectSystem(system.index)\">\\n' +\n    '        <td class=\"system-info\">\\n' +\n    '          <h4>{{system.system}}</h4>\\n' +\n    '\\n' +\n    '          <p>Description: {{system.description}}</p>\\n' +\n    '\\n' +\n    '          <p>Added On: {{system.created | date:\\'longDate\\'}}</p>\\n' +\n    '        </td>\\n' +\n    '        <td ng-if=\"isSecure\">\\n' +\n    '          <div class=\"accessory-container\">\\n' +\n    '            <button class=\"btn btn-danger\" ng-click=\"deleteSystem($event, system.index)\"><span\\n' +\n    '              class=\"glyphicon glyphicon-minus\"></span></button>\\n' +\n    '          </div>\\n' +\n    '        </td>\\n' +\n    '      </tr>\\n' +\n    '      </tbody>\\n' +\n    '    </table>\\n' +\n    '    <a ng-if=\"isSecure\" href=\"#/system-builder\" class=\"btn btn-lg btn-primary\">Add System</a>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/type-info.html',\n    '<div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">{{selectedType.typeShortName}}</h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '        <h5>Full Name</h5>\\n' +\n    '        <p>{{selectedType.typeName}}</p>\\n' +\n    '        <h5>Instances</h5>\\n' +\n    '        <p>{{countOfType}}</p>\\n' +\n    '        <p>{{100.0 * countOfType / totalFeatureStructures | number : 2}}% of {{totalFeatureStructures}} total.</p>\\n' +\n    '        <h5>Parent Types Inherited From:</h5>\\n' +\n    '        <ul class=\"list-unstyled\">\\n' +\n    '            <li ng-repeat=\"parentType in selectedType.parentTypes\">\\n' +\n    '                <type-name name=\"parentType\" system-index=\"systemIndex\"></type-name>\\n' +\n    '            </li>\\n' +\n    '        </ul>\\n' +\n    '        <h5>Child Types:</h5>\\n' +\n    '        <ul class=\"list-unstyled\">\\n' +\n    '            <li ng-repeat=\"child in children\">\\n' +\n    '                <type-name name=\"child\" system-index=\"systemIndex\"></type-name>\\n' +\n    '            </li>\\n' +\n    '        </ul>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-builder-examples.html',\n    '<uib-tabset justified=\"true\" ng-if=\"config.selectedType\">\\n' +\n    '  <uib-tab heading=\"Info\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-body\">\\n' +\n    '        <span>Total Instances: {{examplesPagination.totalItems}}</span>\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </uib-tab>\\n' +\n    '  <uib-tab heading=\"Examples\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-body\">\\n' +\n    '        <fs-instance-info feature-structure=\"example\"></fs-instance-info>\\n' +\n    '      </div>\\n' +\n    '      <pagination items-per-page=\"examplesPagination.itemsPerPage\" total-items=\"examplesPagination.totalItems\"\\n' +\n    '                  ng-model=\"examplesPagination.page\" max-size=\"6\" boundary-links=\"false\"></pagination>\\n' +\n    '    </div>\\n' +\n    '  </uib-tab>\\n' +\n    '  <uib-tab heading=\"Feature Values\" ng-if=\"config.selectedFeature\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-body\">\\n' +\n    '        <div ng-if=\"config.selectedFeature.valueType === \\'uima.cas.Boolean\\'\">\\n' +\n    '          <boolean-primitive-feature feature=\"config.selectedFeature\" system-index=\"config.selectedSystem.index\"\\n' +\n    '                                     selected-type=\"config.selectedType\"></boolean-primitive-feature>\\n' +\n    '        </div>\\n' +\n    '        <div ng-if=\"config.selectedFeature.valueType === \\'uima.cas.String\\'\">\\n' +\n    '          <string-primitive-feature feature=\"config.selectedFeature\" system-index=\"config.selectedSystem.index\"\\n' +\n    '                                    selected-type=\"config.selectedType\"></string-primitive-feature>\\n' +\n    '        </div>\\n' +\n    '        <div ng-if=\"config.selectedFeature.valueType === \\'uima.cas.Integer\\'\">\\n' +\n    '          <int-primitive-feature feature=\"config.selectedFeature\" system-index=\"config.selectedSystem.index\"\\n' +\n    '                                 selected-type=\"config.selectedType\"></int-primitive-feature>\\n' +\n    '        </div>\\n' +\n    '        <div ng-if=\"config.selectedFeature.valueType === \\'uima.cas.Float\\'\">\\n' +\n    '          <float-primitive-feature feature=\"config.selectedFeature\" system-index=\"config.selectedSystem.index\"\\n' +\n    '                                   selected-type=\"config.selectedType\"></float-primitive-feature>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </uib-tab>\\n' +\n    '</uib-tabset>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-builder.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<div class=\"container\">\\n' +\n    '\\n' +\n    '  <div class=\"page-header\">\\n' +\n    '    <h1>Run New Analysis</h1>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '      <div class=\"row\">\\n' +\n    '        <div class=\"col-md-6\">\\n' +\n    '          <h3 class=\"text-left\">Hypothesis Unit of Analysis</h3>\\n' +\n    '          <unit-of-analysis unit-of-analysis=\"firstUnitOfAnalysis\" systems=\"systems\"\\n' +\n    '                            add-feature-value-mapping=\"addHypothesisFeatureValueMapping\"></unit-of-analysis>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-6\">\\n' +\n    '          <h3 class=\"text-left\">Reference Unit of Analysis</h3>\\n' +\n    '          <unit-of-analysis unit-of-analysis=\"secondUnitOfAnalysis\" systems=\"systems\"\\n' +\n    '                            add-feature-value-mapping=\"addReferenceFeatureValueMapping\"></unit-of-analysis>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '\\n' +\n    '  <h3 ng-if=\"featureValueMappings.length > 0\">Feature Value Mappings</h3>\\n' +\n    '\\n' +\n    '  <div class=\"panel panel-default\" ng-repeat=\"featureValueMapping in featureValueMappings\">\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '      <div class=\"row\">\\n' +\n    '        <div class=\"col-md-5\">\\n' +\n    '          <b ng-if=\"featureValueMapping.hypothesisFeature\">Feature:</b>\\n' +\n    '          <feature-on feature-name=\"featureValueMapping.hypothesisFeature.feature.name\"></feature-on>\\n' +\n    '          <br>\\n' +\n    '\\n' +\n    '          <div ng-if=\"featureValueMapping.hypothesisFeature.nestedStructure.length > 0\">\\n' +\n    '            <b>On Nested Structure:</b>\\n' +\n    '            <ul>\\n' +\n    '              <li ng-repeat=\"nestedItem in featureValueMapping.hypothesisFeature.nestedStructure\">\\n' +\n    '                <feature-on feature-name=\"nestedItem\"></feature-on>\\n' +\n    '              </li>\\n' +\n    '            </ul>\\n' +\n    '          </div>\\n' +\n    '          <b ng-if=\"featureValueMapping.hypothesisFeature\">Is Collection:</b>\\n' +\n    '          {{{\\'true\\': \\'Yes\\', \\'false\\': \\'No\\'}[featureValueMapping.hypothesisIsCollection]}}<br>\\n' +\n    '          <a href=\"javascript:\" ng-if=\"featureValueMapping.hypothesisFeature\"\\n' +\n    '             ng-click=\"removeHypothesisFeature($index)\">Delete</a>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-2\">\\n' +\n    '          <form class=\"form-inline text-center\">\\n' +\n    '            <form class=\"form-group\">\\n' +\n    '              <label for=\"equivalenceOptions\" class=\"sr-only\">Equivalence</label>\\n' +\n    '              <select id=\"equivalenceOptions\" ng-if=\"featureValueMapping.equivalenceOptions.length > 0\"\\n' +\n    '                      class=\"form-control\"\\n' +\n    '                      ng-model=\"featureValueMapping.equivalence\">\\n' +\n    '                <option ng-repeat=\"eq in featureValueMapping.equivalenceOptions\">{{eq}}</option>\\n' +\n    '              </select>\\n' +\n    '            </form>\\n' +\n    '          </form>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-5\">\\n' +\n    '          <b ng-if=\"featureValueMapping.referenceFeature\">Feature:</b>\\n' +\n    '          <feature-on feature-name=\"featureValueMapping.referenceFeature.feature.name\"></feature-on>\\n' +\n    '          <br>\\n' +\n    '\\n' +\n    '          <div ng-if=\"featureValueMapping.referenceFeature.nestedStructure.length > 0\">\\n' +\n    '            <b>On Nested Structure:</b>\\n' +\n    '            <ul>\\n' +\n    '              <li ng-repeat=\"nestedItem in featureValueMapping.referenceFeature.nestedStructure\">\\n' +\n    '                <feature-on feature-name=\"nestedItem\"></feature-on>\\n' +\n    '              </li>\\n' +\n    '            </ul>\\n' +\n    '          </div>\\n' +\n    '          <b ng-if=\"featureValueMapping.referenceFeature\">Is Collection:</b>\\n' +\n    '          {{{\\'true\\': \\'Yes\\', \\'false\\': \\'No\\'}[featureValueMapping.referenceIsCollection]}}<br>\\n' +\n    '          <a href=\"javascript:\" ng-if=\"featureValueMapping.referenceFeature\"\\n' +\n    '             ng-click=\"removeReferenceFeature($index)\">Delete</a>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"row\" ng-if=\"featureValueMapping.hypothesisFeature && featureValueMapping.referenceFeature\">\\n' +\n    '        <div class=\"col-md-12\">\\n' +\n    '          <h5>Value Transformations</h5>\\n' +\n    '\\n' +\n    '          <p>Values without value transformations will remain the same.</p>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"row\" ng-repeat=\"valueMapping in featureValueMapping.valueMappings\">\\n' +\n    '        <div class=\"col-md-1\">\\n' +\n    '          From:\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-3\">\\n' +\n    '          <feature-value-suggestion system-index=\"firstUnitOfAnalysis.selectedSystem.index\"\\n' +\n    '                                    type=\"firstUnitOfAnalysis.selectedType\"\\n' +\n    '                                    feature=\"featureValueMapping.hypothesisFeature.feature\"\\n' +\n    '                                    value=\"valueMapping.from\"\\n' +\n    '                                    on-select=\"valueMapping.fromSelected()\"></feature-value-suggestion>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-1 col-md-offset-2\">\\n' +\n    '          To:\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-3\">\\n' +\n    '          <feature-value-suggestion system-index=\"secondUnitOfAnalysis.selectedSystem.index\"\\n' +\n    '                                    type=\"secondUnitOfAnalysis.selectedType\"\\n' +\n    '                                    feature=\"featureValueMapping.referenceFeature.feature\"\\n' +\n    '                                    value=\"valueMapping.to\"\\n' +\n    '                                    on-select=\"valueMapping.toSelected()\"></feature-value-suggestion>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-1\">\\n' +\n    '          <p class=\"text-right\">\\n' +\n    '            <a href=\"javascript:\" ng-click=\"featureValueMapping.removeValueMapping($index)\">Delete</a>\\n' +\n    '          </p>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"row\" ng-if=\"featureValueMapping.hypothesisFeature && featureValueMapping.referenceFeature\">\\n' +\n    '        <div class=\"col-md-12\">\\n' +\n    '          <p class=\"text-center\">\\n' +\n    '            <a href=\"javascript:\" ng-click=\"featureValueMapping.addValueMapping()\">Add Value Transformation</a>\\n' +\n    '          </p>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"row\">\\n' +\n    '    <div class=\"col-md-10 col-md-offset-1\">\\n' +\n    '      <form>\\n' +\n    '        <div class=\"checkbox\">\\n' +\n    '          <label>\\n' +\n    '            <input type=\"checkbox\" ng-model=\"onlyCompareMatches\" ng-disabled=\"!featureValueMappings.length\"><b>Hit/Miss\\n' +\n    '            only.</b> Ignores annotations that do not have counterparts in the other system and only compares whether\\n' +\n    '            feature values are equivalent.\\n' +\n    '          </label>\\n' +\n    '        </div>\\n' +\n    '        <p class=\"help-block\" ng-if=\"!featureValueMappings.length\">Disabled because there are no features selected.</p>\\n' +\n    '\\n' +\n    '        <div class=\"form-group\">\\n' +\n    '          <label for=\"description\">Description</label>\\n' +\n    '          <input type=\"text\" id=\"description\" ng-model=\"description\" class=\"form-control\" title=\"Description\">\\n' +\n    '        </div>\\n' +\n    '        <button type=\"button\"\\n' +\n    '                ng-disabled=\"!isReadyForAnalysis()\"\\n' +\n    '                class=\"btn btn-primary btn-lg\" ng-click=\"submitAnalysis()\">Run Analysis\\n' +\n    '        </button>\\n' +\n    '        <p class=\"help-block\" ng-if=\"!isReadyForAnalysis()\">Disabled until both systems have types and all\\n' +\n    '          selected features are matched.</p>\\n' +\n    '      </form>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-progress.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '  <h1>Analysis Progress</h1>\\n' +\n    '</div>\\n' +\n    '<div class=\"col-md-6 col-md-offset-3\" ng-if=\"!analysisTask\">\\n' +\n    '  <h3>Preparing for Analysis</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"col-md-6 col-md-offset-3\" ng-if=\"analysisTask\">\\n' +\n    '  <p class=\"text-center\" ng-if=\"analysisTask\">Completed {{analysisTask.completed}} of {{analysisTask.total}}\\n' +\n    '    documents.</p>\\n' +\n    '  <uib-progressbar max=\"analysisTask.total\" value=\"analysisTask.completed\"></uib-progressbar>\\n' +\n    '  <p class=\"text-center\" ng-if=\"analysisTask.failed\">Analysis task failed. Reason: {{analysisTask.error}}</p>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-results-explore.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<ol class=\"breadcrumb\">\\n' +\n    '  <li><a href=\"#/analysis\">Analyzed Systems</a></li>\\n' +\n    '  <li>\\n' +\n    '    <a\\n' +\n    '      ng-href=\"#/analysis-results?tested={{matchCounts.hypothesisUnitOfAnalysis.systemIndex}}&gold={{matchCounts.referenceUnitOfAnalysis.systemIndex}}\">\\n' +\n    '      <system-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\" unlinked></system-name>\\n' +\n    '      &nbsp;vs.&nbsp;\\n' +\n    '      <system-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\" unlinked></system-name>\\n' +\n    '    </a>\\n' +\n    '  </li>\\n' +\n    '  <li class=\"active\">\\n' +\n    '    Analysis Results Explore\\n' +\n    '  </li>\\n' +\n    '</ol>\\n' +\n    '<div class=\"container-fluid\">\\n' +\n    '  <div class=\"row\">\\n' +\n    '    <div class=\"col-lg-5 col-md-5\">\\n' +\n    '      <confusion-matrix-table examples-of=\"examplesOf\">\\n' +\n    '\\n' +\n    '      </confusion-matrix-table>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"col-lg-7 col-md-7\">\\n' +\n    '      <div class=\"row\">\\n' +\n    '        <div class=\"col-lg-8 col-md-12\">\\n' +\n    '          <div class=\"panel panel-default\">\\n' +\n    '            <div class=\"panel-heading\">\\n' +\n    '              <h3 class=\"panel-title\">Hypothesis Unit of Analysis</h3>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-body\">\\n' +\n    '              <h5>System:&nbsp;\\n' +\n    '                <system-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\"></system-name>\\n' +\n    '              </h5>\\n' +\n    '              <unit-of-analysis-description unit-of-analysis=\"matchCounts.hypothesisUnitOfAnalysis\"\\n' +\n    '                                            feature-value-mappings=\"matchCounts.featureValueMappings\"\\n' +\n    '                                            is-hypothesis=\"true\"></unit-of-analysis-description>\\n' +\n    '            </div>\\n' +\n    '          </div>\\n' +\n    '          <div class=\"panel panel-default\">\\n' +\n    '            <div class=\"panel-heading\">\\n' +\n    '              <h3 class=\"panel-title\">Reference Unit of Analysis</h3>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-body\">\\n' +\n    '              <h5>System:&nbsp;\\n' +\n    '                <system-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\"></system-name>\\n' +\n    '              </h5>\\n' +\n    '              <unit-of-analysis-description unit-of-analysis=\"matchCounts.referenceUnitOfAnalysis\"\\n' +\n    '                                            feature-value-mappings=\"matchCounts.featureValueMappings\"\\n' +\n    '                                            is-hypothesis=\"false\"></unit-of-analysis-description>\\n' +\n    '            </div>\\n' +\n    '          </div>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-lg-4 col-md-12\">\\n' +\n    '          <div class=\"panel panel-default\">\\n' +\n    '            <div class=\"panel-heading\">\\n' +\n    '              <h3 class=\"panel-title\">Metrics</h3>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-body\">\\n' +\n    '              <dl ng-if=\"!matchCounts.hitMissOnly\">\\n' +\n    '                <dt>Precision</dt>\\n' +\n    '                <dd>{{matchCounts.precision | number: 3}}</dd>\\n' +\n    '                <dt>Recall</dt>\\n' +\n    '                <dd>{{matchCounts.recall | number: 3}}</dd>\\n' +\n    '                <dt>F-Score</dt>\\n' +\n    '                <dd>{{matchCounts.fMeasure | number: 3}}</dd>\\n' +\n    '              </dl>\\n' +\n    '              <dl ng-if=\"matchCounts.hitMissOnly\">\\n' +\n    '                <dt>Accuracy</dt>\\n' +\n    '                <dd>{{matchCounts.accuracy | number: 3}}</dd>\\n' +\n    '              </dl>\\n' +\n    '            </div>\\n' +\n    '          </div>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"row\">\\n' +\n    '    <cooccurring-examples-list></cooccurring-examples-list>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-results.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<ol class=\"breadcrumb\">\\n' +\n    '  <li><a href=\"#/analysis\">Analyzed Systems</a></li>\\n' +\n    '  <li class=\"active\">\\n' +\n    '    <system-name system-index=\"selectedTested\" unlinked></system-name>\\n' +\n    '    &nbsp;vs.&nbsp;\\n' +\n    '    <system-name system-index=\"selectedGold\" unlinked></system-name>\\n' +\n    '  </li>\\n' +\n    '</ol>\\n' +\n    '<table class=\"table table-striped table-bordered binary-classification-results\">\\n' +\n    '  <thead>\\n' +\n    '  <tr>\\n' +\n    '    <th>Description</th>\\n' +\n    '    <th>\\n' +\n    '      <p>\\n' +\n    '        <system-name system-index=\"selectedTested\"></system-name>\\n' +\n    '      </p>\\n' +\n    '      <p>\\n' +\n    '        Hypothesis Unit of Analysis\\n' +\n    '      </p>\\n' +\n    '    </th>\\n' +\n    '    <th>\\n' +\n    '      <p>\\n' +\n    '        <system-name system-index=\"selectedGold\"></system-name>\\n' +\n    '      </p>\\n' +\n    '      <p>\\n' +\n    '        Reference Unit of Analysis\\n' +\n    '      </p>\\n' +\n    '    </th>\\n' +\n    '    <th>Precision</th>\\n' +\n    '    <th>Recall</th>\\n' +\n    '    <th>F-score / Accuracy</th>\\n' +\n    '    <th>Explore</th>\\n' +\n    '  </tr>\\n' +\n    '  </thead>\\n' +\n    '  <tr ng-repeat=\"matchCount in matchCounts\">\\n' +\n    '    <td>\\n' +\n    '      <span ng-if=\"matchCount.description\">{{matchCount.description}}</span>\\n' +\n    '      <span ng-if=\"!matchCount.description\">No description.</span>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <unit-of-analysis-description unit-of-analysis=\"matchCount.hypothesisUnitOfAnalysis\"\\n' +\n    '                                    feature-value-mappings=\"matchCount.featureValueMappings\"\\n' +\n    '                                    is-hypothesis=\"true\"></unit-of-analysis-description>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <unit-of-analysis-description unit-of-analysis=\"matchCount.referenceUnitOfAnalysis\"\\n' +\n    '                                    feature-value-mappings=\"matchCount.featureValueMappings\"\\n' +\n    '                                    is-hypothesis=\"false\"></unit-of-analysis-description>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <span ng-if=\"matchCount.precision\">{{matchCount.precision | number: 2}}</span>\\n' +\n    '      <span ng-if=\"matchCount.accuracy\">&mdash;</span>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <span ng-if=\"matchCount.recall\">{{matchCount.recall | number: 2}}</span>\\n' +\n    '      <span ng-if=\"matchCount.accuracy\">&mdash;</span>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <span ng-if=\"matchCount.fMeasure\">{{matchCount.fMeasure | number: 2}} (F-Score)</span>\\n' +\n    '      <span ng-if=\"matchCount.accuracy\">{{matchCount.accuracy | number: 2}} (Accuracy)</span>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"explore-cell\">\\n' +\n    '      <a type=\"button\" class=\"btn btn-xs btn-primary\"\\n' +\n    '         ng-href=\"#/analysis-results-explore/{{matchCount._id}}\">Explore\\n' +\n    '        <span class=\"glyphicon glyphicon-arrow-right\"></span></a>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '</table>\\n' +\n    '<div class=\"text-center\">\\n' +\n    '  <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '              total-items=\"pagination.totalItems\" max-size=\"15\" boundary-links=\"true\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<ol class=\"breadcrumb\">\\n' +\n    '  <li class=\"active\">Analyzed Systems</li>\\n' +\n    '</ol>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-4 col-md-offset-2\">\\n' +\n    '    <h3>Analyzed Systems</h3>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-4 col-md-offset-2\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">Hypothesis Systems</h3>\\n' +\n    '      </div>\\n' +\n    '      <table class=\"table table-hover\">\\n' +\n    '        <tr ng-repeat=\"tested in systems\" ng-class=\"{\\'true\\':\\'info\\', \\'false\\':\\'\\'}[selectedTested === tested.index]\"\\n' +\n    '            ng-click=\"selectTested(tested)\">\\n' +\n    '          <td>\\n' +\n    '            <span ng-bind=\"tested.system\"></span>\\n' +\n    '            <small class=\"text-info\" ng-bind=\"tested.description\"></small>\\n' +\n    '          </td>\\n' +\n    '          <td class=\"text-right\" ng-bind=\"tested.count\"></td>\\n' +\n    '        </tr>\\n' +\n    '      </table>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"col-md-4\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">Reference Systems</h3>\\n' +\n    '      </div>\\n' +\n    '      <table class=\"table table-hover\">\\n' +\n    '        <tr ng-repeat=\"goldStandard in systems\"\\n' +\n    '            ng-class=\"{\\'true\\':\\'info\\', \\'false\\':\\'\\'}[selectedGoldStandard === goldStandard.index]\"\\n' +\n    '            ng-click=\"selectGoldStandard(goldStandard)\">\\n' +\n    '          <td>\\n' +\n    '            <span ng-bind=\"goldStandard.system\"></span>\\n' +\n    '            <small class=\"text-info\" ng-bind=\"goldStandard.description\"></small>\\n' +\n    '          </td>\\n' +\n    '          <td class=\"text-right\" ng-bind=\"goldStandard.goldCount\"></td>\\n' +\n    '        </tr>\\n' +\n    '      </table>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-10 col-md-offset-2\">\\n' +\n    '    <p>\\n' +\n    '      <a class=\"btn btn-primary\" ng-disabled=\"!isReady\"\\n' +\n    '         href=\"#/analysis-results?tested={{selectedTested}}&gold={{selectedGoldStandard}}\" role=\"button\">Go</a>\\n' +\n    '      <span ng-if=\"selectedGoldStandard && !isReady\">There are 0 completed analysis runs with the selected systems.</span>\\n' +\n    '    </p>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row\" ng-if=\"isSecure\">\\n' +\n    '  <div class=\"col-md-2 col-md-offset-2\">\\n' +\n    '    <p>\\n' +\n    '      <a class=\"btn btn-primary\" href=\"#/analysis-builder\" role=\"button\">Run new analysis</a>\\n' +\n    '    </p>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/confusion-matrix-table.html',\n    '<table ng-if=\"!matchCounts.hitMissOnly\" class=\"confusionMatrix table table-condensed table-bordered\">\\n' +\n    '  <thead>\\n' +\n    '  <tr>\\n' +\n    '    <th colspan=\"2\" rowspan=\"2\"></th>\\n' +\n    '    <th class=\"secondTypeName typeName\" colspan=\"2\">\\n' +\n    '      <h5>Hypothesis</h5>\\n' +\n    '      <h4 class=\"text-primary\">\\n' +\n    '        <system-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\"></system-name>\\n' +\n    '      </h4>\\n' +\n    '      <p>\\n' +\n    '        <type-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\"\\n' +\n    '                   name=\"matchCounts.hypothesisUnitOfAnalysis.typeName\"></type-name>\\n' +\n    '      </p>\\n' +\n    '    </th>\\n' +\n    '  </tr>\\n' +\n    '  <tr>\\n' +\n    '    <th class=\"occursDoesnt\">Occurs</th>\\n' +\n    '    <th class=\"occursDoesnt\">Does not</th>\\n' +\n    '  </tr>\\n' +\n    '  </thead>\\n' +\n    '  <tr>\\n' +\n    '    <th class=\"firstTypeName typeName\" rowspan=\"2\">\\n' +\n    '      <h5>Reference</h5>\\n' +\n    '      <h4 class=\"text-primary\">\\n' +\n    '        <system-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\"></system-name>\\n' +\n    '      </h4>\\n' +\n    '      <p>\\n' +\n    '        <type-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\"\\n' +\n    '                   name=\"matchCounts.referenceUnitOfAnalysis.typeName\"></type-name>\\n' +\n    '      </p>\\n' +\n    '    </th>\\n' +\n    '    <th class=\"occursDoesnt\">Occurs</th>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'coOccurrences\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'coOccurrences\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.both}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'secondOnly\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'secondOnly\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.secondOnly}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '  <tr>\\n' +\n    '    <th class=\"occursDoesnt\">Does not</th>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'firstOnly\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'firstOnly\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.firstOnly}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"countCell\">-</td>\\n' +\n    '  </tr>\\n' +\n    '</table>\\n' +\n    '<table ng-if=\"matchCounts.hitMissOnly\" class=\"confusionMatrix table table-condensed table-bordered\">\\n' +\n    '  <thead>\\n' +\n    '  <tr>\\n' +\n    '    <th class=\"occursDoesnt\">Hit</th>\\n' +\n    '    <th class=\"occursDoesnt\">Miss</th>\\n' +\n    '  </tr>\\n' +\n    '  </thead>\\n' +\n    '  <tr>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'coOccurrences\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'coOccurrences\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.hits}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'firstOnly\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'firstOnly\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.misses}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '</table>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/cooccurring-examples-list.html',\n    '<table class=\"table table-bordered\">\\n' +\n    '  <thead>\\n' +\n    '  <tr>\\n' +\n    '    <th>#</th>\\n' +\n    '    <th>\\n' +\n    '      <span>Hypothesis:&nbsp;</span><system-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\" unlinked></system-name>\\n' +\n    '      &nbsp;\\n' +\n    '      <type-name name=\"matchCounts.hypothesisUnitOfAnalysis.typeName\" unlinked></type-name>\\n' +\n    '    </th>\\n' +\n    '    <th>\\n' +\n    '      <span>Reference:&nbsp;</span><system-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\" unlinked></system-name>\\n' +\n    '      &nbsp;\\n' +\n    '      <type-name name=\"matchCounts.referenceUnitOfAnalysis.typeName\" unlinked>\\n' +\n    '    </th>\\n' +\n    '  </tr>\\n' +\n    '  </thead>\\n' +\n    '  <tbody>\\n' +\n    '  <tr ng-repeat=\"coOccurrenceMatch in coOccurrenceMatches\" cooccurring-examples-row>\\n' +\n    '  </tr>\\n' +\n    '  </tbody>\\n' +\n    '</table>\\n' +\n    '\\n' +\n    '<div class=\"text-center\">\\n' +\n    '  <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\" total-items=\"pagination.totalItems\"\\n' +\n    '              max-size=\"20\">\\n' +\n    '  </uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/cooccurring-examples-row.html',\n    '<td>\\n' +\n    '  {{$index + 1 + from}}\\n' +\n    '</td>\\n' +\n    '<td>\\n' +\n    '  <fs-instance-info ng-if=\"firstFs\" feature-structure=\"firstFs\"></fs-instance-info>\\n' +\n    '  <h4 ng-if=\"!firstFs\">No matching feature structure located nearby.</h4>\\n' +\n    '</td>\\n' +\n    '<td>\\n' +\n    '  <fs-instance-info ng-if=\"secondFs\" feature-structure=\"secondFs\"></fs-instance-info>\\n' +\n    '  <h4 ng-if=\"!secondFs\">No matching feature structure located nearby.</h4>\\n' +\n    '</td>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/feature-examples-modal.html',\n    '<div class=\"modal-header\">\\n' +\n    '  <h3 class=\"modal-title\">Examples of Feature</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-body\">\\n' +\n    '  <feature-values system-index=\"systemIndex\" type=\"type\" feature=\"feature\"></feature-values>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-footer\">\\n' +\n    '  <button class=\"btn btn-primary\" ng-click=\"done()\">Done</button>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/feature-value-suggestion.html',\n    '<ui-select ng-model=\"selected.value\">\\n' +\n    '  <ui-select-match placeholder=\"Value\">{{$select.selected}}</ui-select-match>\\n' +\n    '  <ui-select-choices repeat=\"value in values | filter: $select.search\">{{value}}</ui-select-choices>\\n' +\n    '</ui-select>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/type-selection-modal.html',\n    '<div class=\"modal-header\">\\n' +\n    '  <h3 class=\"modal-title\">Select Type</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-body\">\\n' +\n    '  <table class=\"table table-striped\">\\n' +\n    '    <tr ng-repeat=\"type in types\">\\n' +\n    '      <td>\\n' +\n    '        <type-name name=\"type.typeName\" unlinked></type-name>\\n' +\n    '      </td>\\n' +\n    '      <td class=\"text-right\">\\n' +\n    '        <button class=\"btn btn-default btn-xs\" ng-click=\"selectType($index)\">Select</button>\\n' +\n    '      </td>\\n' +\n    '    </tr>\\n' +\n    '  </table>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-12 text-center\">\\n' +\n    '    <uib-pagination items-per-page=\"pagination.itemsPerPage\" ng-model=\"pagination.page\" total-items=\"pagination.totalItems\"></uib-pagination>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/unit-of-analysis-description.html',\n    '<h5>Type:&nbsp;\\n' +\n    '  <type-name system-index=\"unitOfAnalysis.systemIndex\"\\n' +\n    '             name=\"unitOfAnalysis.typeName\"></type-name>\\n' +\n    '</h5>\\n' +\n    '\\n' +\n    '<h5>Value Mappings:</h5>\\n' +\n    '<div ng-repeat=\"mapping in mappings\">\\n' +\n    '  <span><b>{{$index + 1}}:</b> {{mapping.featureName}}</span><br>\\n' +\n    '  <span ng-if=\"mapping.nestedStructure\">Nested on:</span>\\n' +\n    '  <ul ng-if=\"mapping.nestedStructure\">\\n' +\n    '    <li ng-repeat=\"feature in mapping.nestedStructure\">{{feature}}</li>\\n' +\n    '  </ul>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/unit-of-analysis.html',\n    '<h5>System</h5>\\n' +\n    '<p>\\n' +\n    '  <ui-select ng-model=\"unitOfAnalysis.selectedSystem\" theme=\"bootstrap\">\\n' +\n    '    <ui-select-match placeholder=\"System Name\">\\n' +\n    '      <span>{{$select.selected.system}}</span>\\n' +\n    '      <small>{{$select.selected.description}}</small>\\n' +\n    '    </ui-select-match>\\n' +\n    '    <ui-select-choices repeat=\"system in systems | filter: $select.search\">\\n' +\n    '      <span ng-bind-html=\"system.system | highlight: $select.search\"></span>\\n' +\n    '      <small ng-bind-html=\"system.description | highlight: $select.search\"></small>\\n' +\n    '    </ui-select-choices>\\n' +\n    '  </ui-select>\\n' +\n    '</p>\\n' +\n    '\\n' +\n    '<h5>Type</h5>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-10\">\\n' +\n    '    <ui-select ng-model=\"unitOfAnalysis.selectedType\" ng-disabled=\"!unitOfAnalysis.selectedSystem\">\\n' +\n    '      <ui-select-match placeholder=\"Type Name\">\\n' +\n    '        <span>{{$select.selected.typeShortName}}</span>\\n' +\n    '      </ui-select-match>\\n' +\n    '      <ui-select-choices max-size=\"30\"\\n' +\n    '                         repeat=\"uimaType in types\"\\n' +\n    '                         refresh=\"fetchTypes($select.search)\"\\n' +\n    '                         refresh-delay=\"0\">\\n' +\n    '        <span ng-bind-html=\"uimaType.typeShortName | highlight: $select.search\"></span>\\n' +\n    '      </ui-select-choices>\\n' +\n    '    </ui-select>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"col-md-2 text-right\">\\n' +\n    '    <button class=\"btn btn-default btn-sm\" ng-click=\"openTypeSelection()\"><span class=\"glyphicon glyphicon-list\"></span>\\n' +\n    '    </button>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<h5 ng-if=\"unitOfAnalysis.selectedType\">Tree</h5>\\n' +\n    '<table ng-if=\"unitOfAnalysis.selectedType\" class=\"table table-striped\">\\n' +\n    '  <tbody>\\n' +\n    '  <tr ng-repeat=\"item in tree\">\\n' +\n    '    <td>\\n' +\n    '      <div class=\"row\">\\n' +\n    '\\n' +\n    '        <div ng-class=\"item.class\">\\n' +\n    '          {{item.feature.shortName}} <span ng-if=\"item.subclass\">on <type-name name=\"item.onType\"\\n' +\n    '                                                                               system-index=\"unitOfAnalysis.selectedSystem.systemIndex\"></type-name> </span>\\n' +\n    '          <a ng-if=\"item.primitive\"\\n' +\n    '             ng-click=\"examples($index)\">Examples</a><br>\\n' +\n    '          <small>\\n' +\n    '            <type-name name=\"item.feature.valueType\" unlinked>\\n' +\n    '          </small>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"text-right\">\\n' +\n    '      <button ng-if=\"item.primitive\" class=\"btn btn-success btn-xs\" ng-click=\"addFeature($index)\">\\n' +\n    '        Select Feature\\n' +\n    '      </button>\\n' +\n    '      <button ng-if=\"item.primitive && item.level == 0 && !item.collection\" class=\"btn btn-success btn-xs\" ng-click=\"addFilter($index)\">\\n' +\n    '        Add Filter\\n' +\n    '      </button>\\n' +\n    '      <button ng-if=\"!item.sofa && !item.primitive && !item.expanded\" class=\"btn btn-primary btn-xs\"\\n' +\n    '              ng-click=\"expandItem($index)\"><span class=\"glyphicon glyphicon-chevron-right\"></span></button>\\n' +\n    '      <button ng-if=\"!item.sofa && !item.primitive && item.expanded\" class=\"btn btn-primary btn-xs\"\\n' +\n    '              ng-click=\"collapseItem($index)\"><span class=\"glyphicon glyphicon-chevron-down\"></span></button>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '  </tbody>\\n' +\n    '</table>\\n' +\n    '\\n' +\n    '<h5 ng-if=\"unitOfAnalysis.filters.length\">Filters</h5>\\n' +\n    '<table ng-if=\"unitOfAnalysis.filters.length\" class=\"table table-striped\">\\n' +\n    '  <tbody>\\n' +\n    '  <tr ng-repeat=\"filter in unitOfAnalysis.filters\">\\n' +\n    '    <td>\\n' +\n    '      <b>Feature:</b>\\n' +\n    '      <feature-on feature-name=\"filter.feature.name\"></feature-on>\\n' +\n    '      <br>\\n' +\n    '      <div ng-if=\"filter.nestedStructure.length > 0\">\\n' +\n    '        <b>On Nested Structure:</b>\\n' +\n    '        <ul>\\n' +\n    '          <li ng-repeat=\"nestedItem in filter.nestedStructure\">\\n' +\n    '            <feature-on feature-name=\"nestedItem\"></feature-on>\\n' +\n    '          </li>\\n' +\n    '        </ul>\\n' +\n    '      </div>\\n' +\n    '      <label for=\"filterOptions\">Test: </label>\\n' +\n    '      <select id=\"filterOptions\" class=\"form-control\" ng-model=\"filter.option\">\\n' +\n    '        <option ng-repeat=\"option in filterOptions\">{{option}}</option>\\n' +\n    '      </select>\\n' +\n    '      <label for=\"filterValue\">Value: </label>\\n' +\n    '      <input id=\"filterValue\" type=\"text\" ng-model=\"filter.value\">\\n' +\n    '    </td>\\n' +\n    '    <td class=\"text-right\">\\n' +\n    '      <button class=\"btn btn-danger btn-xs\" ng-click=\"deleteFilter($index)\">\\n' +\n    '        <span class=\"glyphicon glyphicon-minus\"></span>\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '  </tbody>\\n' +\n    '</table>\\n' +\n    '');\n}]);\n})();\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/annotation-from-sofa.html',\n    '<span class=\"document-text\">{{preText}}<span class=\"annotation\">&thinsp;{{annotationText}}&thinsp;</span>{{postText}}</span>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/bio-main.html',\n    '<navbar></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '    <h1>NLP Type and Annotation Browser</h1>\\n' +\n    '    <h4>A system for integration and visualization of diverse biomedical NLP applications.</h4>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row marketing\">\\n' +\n    '    <div class=\"col-md-12\">\\n' +\n    '        <h4>Overview</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is a web-based system designed to allow researchers and developers of Natural Language Processing\\n' +\n    '            (NLP) systems to compare the output of several disparate NLP systems to each other or to a manually created\\n' +\n    '            reference standard. The comparison is performed by running the NLP systems on a single corpus of text with\\n' +\n    '            subsequent statistical analysis of co-occurences between annotations generated by NLP systems. Analysis\\n' +\n    '            results are stored and indexed using the Elasticsearch technology and displayed to end users with a custom\\n' +\n    '            web-based interface. NLP-TAB operates in two modes: Annotation Analysis and Type System Analysis as\\n' +\n    '            described below. The system is still early in its development - new features and improvements will be added\\n' +\n    '            in the course of next several months, so you don\\'t find what you need right now, please check back later.\\n' +\n    '        </p>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row marketing\">\\n' +\n    '    <div class=\"marketing-column\">\\n' +\n    '        <h4>Documents</h4>\\n' +\n    '        <p>\\n' +\n    '            The Documents section allows for the exploration of the documents run through each of the analyzed systems.\\n' +\n    '            You can filter to find specific text in documents, below are a few examples:</p>\\n' +\n    '        <ul>\\n' +\n    '\\n' +\n    '        </ul>\\n' +\n    '        <p>\\n' +\n    '            When exploring the documents you can select ranges of text in order to see which systems annotate the text\\n' +\n    '            with which types. You can select types to see their instances.\\n' +\n    '        </p>\\n' +\n    '        <h4>Type System Analysis</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            Type system analysis performs the comparison between annotation types generated by the different NLP systems\\n' +\n    '            by first counting how often pairs of annotations from different NLP systems cover approximately the same\\n' +\n    '            text and how often they cover completely different text. This co-occurence information is used to generate\\n' +\n    '            2X2 tables for all pairs of annotation types in order to calculate the degree of dependence between\\n' +\n    '            annotation types using common metrics which at present include the F-score, Jaccard and Matthews\\n' +\n    '            coefficients. Pairs of annotation types with higher scores are more likely to be functionally equivalent.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Type Systems</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            The type systems screen allows for users to explore the type systems that have been uploaded to the system,\\n' +\n    '            browsing the individual types in each system. Information included on the type systems page:\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '            <li>Basic information about types, their super and subtypes, and their occurrences</li>\\n' +\n    '            <li>Primitive features, their common values and distribution breakdowns</li>\\n' +\n    '            <li>Reference features, and what types they link to</li>\\n' +\n    '            <li>Instances of specific types</li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h4>Elasticsearch Backend</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB uses an Elasticsearch backend to store Common Annotation Structure (CAS) information produced by\\n' +\n    '            each NLP system being compared for each document in the collection. A read-only api to the backend is\\n' +\n    '            accessible at <a href=\"/elasticsearch\">athena.ahc.umn.edu/elasticsearch</a>. For more information on\\n' +\n    '            elasticsearch, you can visit their website at <a href=\"http://www.elasticsearch.org/\">elasticsearch.org</a>.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Source Code</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is open source and is distributed under the Apache (ASL 2.0) license. We\\'ve made it available at\\n' +\n    '            Bitbucket. The repositories contain additional instructions and documentation.\\n' +\n    '        </p>\\n' +\n    '        <dl class=\"dl-horizontal\">\\n' +\n    '            <dt>UIMA and Analysis</dt>\\n' +\n    '            <dd><a href=\"https://bitbucket.org/nlpie/nlptab\">bitbucket.org/nlpie/nlptab</a></dd>\\n' +\n    '            <dt>Web Application</dt>\\n' +\n    '            <dd><a href=\"https://bitbucket.org/nlpie/nlptab-webapp\">bitbucket.org/nlpie/nlptab-webapp</a></dd>\\n' +\n    '        </dl>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"marketing-column\">\\n' +\n    '\\n' +\n    '        <h4>About Us</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is developed by the <a href=\"http://www.bmhi.umn.edu/ihi/research/nlpie/\">University of Minnesota\\n' +\n    '            Institute for Health Informatics NLP/IE Group</a> and the <a href=\"http://ohnlp.org/index.php/Main_Page\">Open\\n' +\n    '            Health NLP Consortium</a>.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Other Resources</h4>\\n' +\n    '\\n' +\n    '        <h5>BioMedICUS</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/biomedicus/\">Demo</a></li>\\n' +\n    '        \t<li><a href=\"https://bitbucket.org/nlpie/biomedicus\">Source Code</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h5>NLP-TAB</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/nlptab\">Demo</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab\">Java Source Code</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab-webapp\">Web-app</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab-corpus\">Corpus</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h5>NLP/IE Group Resources</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://www.bmhi.umn.edu/ihi/research/nlpie/resources/index.htm\">Website</a></li>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/\">Demos</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h4>Acknowledgements</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            Funding for this work was provided by:\\n' +\n    '        </p>\\n' +\n    '        <ul>\\n' +\n    '            <li>1 R01 LM011364-01 NIH-NLM</li>\\n' +\n    '            <li>1 R01 GM102282-01A1 NIH-NIGMS</li>\\n' +\n    '            <li>U54 RR026066-01A2 NIH-NCRR</li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/breadcrumb.html',\n    '<!DOCTYPE html>\\n' +\n    '<html>\\n' +\n    '<head>\\n' +\n    '    <title></title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '\\n' +\n    '</body>\\n' +\n    '</html>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/feature-values.html',\n    '<div>\\n' +\n    '  <h4>Common Values:</h4>\\n' +\n    '  <table class=\"table table-bordered\">\\n' +\n    '    <thead>\\n' +\n    '    <tr>\\n' +\n    '      <th>Value</th>\\n' +\n    '      <th>Count</th>\\n' +\n    '      <th>Percentage</th>\\n' +\n    '    </tr>\\n' +\n    '    </thead>\\n' +\n    '    <tr ng-repeat=\"value in values\">\\n' +\n    '      <td>{{value.key}}</td>\\n' +\n    '      <td>{{value.doc_count}}</td>\\n' +\n    '      <td>{{(100.0 * value.doc_count / count) | number: 2}}</td>\\n' +\n    '    </tr>\\n' +\n    '  </table>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/fs-instance-info.html',\n    '<div ng-if=\"featureStructure\">\\n' +\n    '    <div>\\n' +\n    '        <h5>Associated Text</h5>\\n' +\n    '        <annotation-from-sofa feature-structure=\"featureStructure\"></annotation-from-sofa>\\n' +\n    '    </div>\\n' +\n    '    <div>\\n' +\n    '        <h5>Basic Info</h5>\\n' +\n    '        <dl class=\"dl-horizontal\">\\n' +\n    '            <dt>ElasticSearch Id</dt>\\n' +\n    '            <dd>{{featureStructure._id}}</dd>\\n' +\n    '            <dt>Type</dt>\\n' +\n    '            <dd><type-name name=\"featureStructure.primaryType\" system-index=\"featureStructure._index\"></type-name></dd>\\n' +\n    '        </dl>\\n' +\n    '    </div>\\n' +\n    '    <div ng-if=\"featureStructure.stringFeatures\">\\n' +\n    '        <h5>String Features</h5>\\n' +\n    '        <table class=\"table\">\\n' +\n    '            <thead>\\n' +\n    '            <tr>\\n' +\n    '                <th class=\"col-md-4\">Feature Name</th>\\n' +\n    '                <th class=\"col-md-8\">Feature Value</th>\\n' +\n    '            </tr>\\n' +\n    '            </thead>\\n' +\n    '            <tbody>\\n' +\n    '            <tr ng-repeat=\"(featureName, featureValue) in featureStructure.stringFeatures\">\\n' +\n    '                <td>\\n' +\n    '                    <feature-name name=\"featureName\" system-index=\"featureStructure._index\"></feature-name>\\n' +\n    '                </td>\\n' +\n    '                <td><potential-cui value=\"featureValue\"></potential-cui></td>\\n' +\n    '            </tr>\\n' +\n    '            </tbody>\\n' +\n    '        </table>\\n' +\n    '    </div>\\n' +\n    '    <div ng-if=\"featureStructure.intFeatures\">\\n' +\n    '        <h5>Integer Features</h5>\\n' +\n    '        <table class=\"table\">\\n' +\n    '            <thead>\\n' +\n    '                <tr>\\n' +\n    '                    <th class=\"col-md-4\">Feature Name</th>\\n' +\n    '                    <th class=\"col-md-8\">Feature Value</th>\\n' +\n    '                </tr>\\n' +\n    '            </thead>\\n' +\n    '            <tbody>\\n' +\n    '                <tr ng-repeat=\"(featureName, featureValue) in featureStructure.intFeatures\">\\n' +\n    '                    <td>\\n' +\n    '                        <feature-name name=\"featureName\" system-index=\"featureStructure._index\"></feature-name>\\n' +\n    '                    </td>\\n' +\n    '                    <td>{{featureValue}}</td>\\n' +\n    '                </tr>\\n' +\n    '            </tbody>\\n' +\n    '        </table>\\n' +\n    '    </div>\\n' +\n    '    <div ng-if=\"featureStructure.booleanFeatures\">\\n' +\n    '        <h5>Boolean Features</h5>\\n' +\n    '        <table class=\"table\">\\n' +\n    '            <thead>\\n' +\n    '            <tr>\\n' +\n    '                <th class=\"col-md-4\">Feature Name</th>\\n' +\n    '                <th class=\"col-md-8\">Feature Value</th>\\n' +\n    '            </tr>\\n' +\n    '            </thead>\\n' +\n    '            <tbody>\\n' +\n    '            <tr ng-repeat=\"(featureName, featureValue) in featureStructure.booleanFeatures\">\\n' +\n    '                <td>\\n' +\n    '                    <feature-name name=\"featureName\" system-index=\"featureStructure._index\"></feature-name>\\n' +\n    '                </td>\\n' +\n    '                <td>{{featureValue && {true: \\'true\\', false: \\'false\\'}[featureValue]}} </td>\\n' +\n    '            </tr>\\n' +\n    '            </tbody>\\n' +\n    '        </table>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <div ng-if=\"featureStructure.references && !isEmpty(featureStructure.references)\">\\n' +\n    '        <h5>References</h5>\\n' +\n    '        <table class=\"table\">\\n' +\n    '            <thead>\\n' +\n    '            <tr>\\n' +\n    '                <th class=\"col-md-4\">Feature Name</th>\\n' +\n    '                <th class=\"col-md-8\">Feature Structure Reference Id</th>\\n' +\n    '            </tr>\\n' +\n    '            </thead>\\n' +\n    '            <tbody>\\n' +\n    '            <tr ng-repeat=\"(featureName, referenceId) in featureStructure.references\">\\n' +\n    '                <td>\\n' +\n    '                    <feature-name name=\"featureName\" system-index=\"featureStructure._index\"></feature-name>\\n' +\n    '                </td>\\n' +\n    '                <td>\\n' +\n    '                    <fs-instance-id system-index=\"featureStructure._index\" fs-id=\"referenceId\"></fs-instance-id>\\n' +\n    '                </td>\\n' +\n    '            </tr>\\n' +\n    '            </tbody>\\n' +\n    '        </table>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '    <div ng-if=\"featureStructure.arrayItems && featureStructure.arrayItems.length > 0\">\\n' +\n    '        <h5>Array Items</h5>\\n' +\n    '        <ul class=\"list-unstyled\">\\n' +\n    '            <li ng-repeat=\"arrayItem in featureStructure.arrayItems\">\\n' +\n    '                <fs-instance-id system-index=\"featureStructure._index\" fs-id=\"arrayItem\"></fs-instance-id>\\n' +\n    '            </li>\\n' +\n    '        </ul>\\n' +\n    '    </div>\\n' +\n    '\\n' +\n    '</div>\\n' +\n    '<div ng-if=\"!featureStructure\">\\n' +\n    '    <h4>Feature Structure was not found. This is potentially because the type was set to be ignored.</h4>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/fs-instance-modal.html',\n    '<div class=\"modal-header\">\\n' +\n    '    <h3 class=\"modal-title\">FeatureStructure Instance Info</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-body\">\\n' +\n    '    <fs-instance-info feature-structure=\"featureStructure\" system-index=\"systemIndex\"></fs-instance-info>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-footer\">\\n' +\n    '    <button class=\"btn btn-primary\" ng-click=\"done()\">Done</button>\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/main.html',\n    '<navbar></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '    <h1>NLP Type and Annotation Browser</h1>\\n' +\n    '    <h4>A system for integration and visualization of diverse biomedical NLP applications.</h4>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row marketing\">\\n' +\n    '    <div class=\"col-md-12\">\\n' +\n    '        <h4>Overview</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is a web-based system designed to allow researchers and developers of Natural Language Processing\\n' +\n    '            (NLP) systems to compare the output of several disparate NLP systems to each other or to a manually created\\n' +\n    '            reference standard. The comparison is performed by running the NLP systems on a single corpus of text with\\n' +\n    '            subsequent statistical analysis of co-occurences between annotations generated by NLP systems. Analysis\\n' +\n    '            results are stored and indexed using the Elasticsearch technology and displayed to end users with a custom\\n' +\n    '            web-based interface. NLP-TAB operates in two modes: Annotation Analysis and Type System Analysis as\\n' +\n    '            described below. The system is still early in its development - new features and improvements will be added\\n' +\n    '            in the course of next several months, so you don\\'t find what you need right now, please check back later.\\n' +\n    '        </p>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row marketing\">\\n' +\n    '    <div class=\"marketing-column\">\\n' +\n    '        <h4>Documents</h4>\\n' +\n    '        <p>\\n' +\n    '            The Documents section allows for the exploration of the documents run through each of the analyzed systems.\\n' +\n    '            You can filter to find specific text in documents, below are a few examples:</p>\\n' +\n    '        <ul>\\n' +\n    '            <li><a href=\"#/document-search?q=myocardial%20infarction\">Myocardial Infarction</a></li>\\n' +\n    '            <li><a href=\"#/document-search?q=neurontin\">Neurontin</a></li>\\n' +\n    '            <li><a href=\"#/document-search?q=HF\">HF</a></li>\\n' +\n    '            <li><a href=\"#/document-search?q=8%20mg%20q%206%20hrs\">6 mg q 6 hrs</a></li>\\n' +\n    '        </ul>\\n' +\n    '        <p>\\n' +\n    '            When exploring the documents you can select ranges of text in order to see which systems annotate the text\\n' +\n    '            with which types. You can select types to see their instances.\\n' +\n    '        </p>\\n' +\n    '        <h4>Type System Analysis</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            Type system analysis performs the comparison between annotation types generated by the different NLP systems\\n' +\n    '            by first counting how often pairs of annotations from different NLP systems cover approximately the same\\n' +\n    '            text and how often they cover completely different text. This co-occurence information is used to generate\\n' +\n    '            2X2 tables for all pairs of annotation types in order to calculate the degree of dependence between\\n' +\n    '            annotation types using common metrics which at present include the F-score, Jaccard and Matthews\\n' +\n    '            coefficients. Pairs of annotation types with higher scores are more likely to be functionally equivalent.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Type Systems</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            The type systems screen allows for users to explore the type systems that have been uploaded to the system,\\n' +\n    '            browsing the individual types in each system. Information included on the type systems page:\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '            <li>Basic information about types, their super and subtypes, and their occurrences</li>\\n' +\n    '            <li>Primitive features, their common values and distribution breakdowns</li>\\n' +\n    '            <li>Reference features, and what types they link to</li>\\n' +\n    '            <li>Instances of specific types</li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h4>Elasticsearch Backend</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB uses an Elasticsearch backend to store Common Annotation Structure (CAS) information produced by\\n' +\n    '            each NLP system being compared for each document in the collection. A read-only api to the backend is\\n' +\n    '            accessible at <a href=\"/elasticsearch\">athena.ahc.umn.edu/elasticsearch</a>. For more information on\\n' +\n    '            elasticsearch, you can visit their website at <a href=\"http://www.elasticsearch.org/\">elasticsearch.org</a>.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Source Code</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is open source and is distributed under the Apache (ASL 2.0) license. We\\'ve made it available at\\n' +\n    '            Bitbucket. The repositories contain additional instructions and documentation.\\n' +\n    '        </p>\\n' +\n    '        <dl class=\"dl-horizontal\">\\n' +\n    '            <dt>UIMA and Analysis</dt>\\n' +\n    '            <dd><a href=\"https://bitbucket.org/nlpie/nlptab\">bitbucket.org/nlpie/nlptab</a></dd>\\n' +\n    '            <dt>Web Application</dt>\\n' +\n    '            <dd><a href=\"https://bitbucket.org/nlpie/nlptab-webapp\">bitbucket.org/nlpie/nlptab-webapp</a></dd>\\n' +\n    '        </dl>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"marketing-column\">\\n' +\n    '        <h4>About Us</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            NLP-TAB is developed by the <a href=\"http://www.bmhi.umn.edu/ihi/research/nlpie/\">University of Minnesota\\n' +\n    '            Institute for Health Informatics NLP/IE Group</a> and the <a href=\"http://ohnlp.org/index.php/Main_Page\">Open\\n' +\n    '            Health NLP Consortium</a>.\\n' +\n    '        </p>\\n' +\n    '\\n' +\n    '        <h4>Other Resources</h4>\\n' +\n    '\\n' +\n    '        <h5>BioMedICUS</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/biomedicus/\">Demo</a></li>\\n' +\n    '        \t<li><a href=\"https://bitbucket.org/nlpie/biomedicus\">Source Code</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h5>NLP-TAB</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/nlptab\">Demo</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab\">Java Source Code</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab-webapp\">Web-app</a></li>\\n' +\n    '        \t<li><a href=\"http://bitbucket.org/nlpie/nlptab-corpus\">Corpus</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h5>NLP/IE Group Resources</h5>\\n' +\n    '\\n' +\n    '        <ul>\\n' +\n    '        \t<li><a href=\"http://www.bmhi.umn.edu/ihi/research/nlpie/resources/index.htm\">Website</a></li>\\n' +\n    '        \t<li><a href=\"http://athena.ahc.umn.edu/\">Demos</a></li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '        <h4>Acknowledgements</h4>\\n' +\n    '\\n' +\n    '        <p>\\n' +\n    '            Funding for this work was provided by:\\n' +\n    '        </p>\\n' +\n    '        <ul>\\n' +\n    '            <li>1 R01 LM011364-01 NIH-NLM</li>\\n' +\n    '            <li>1 R01 GM102282-01A1 NIH-NIGMS</li>\\n' +\n    '            <li>U54 RR026066-01A2 NIH-NCRR</li>\\n' +\n    '        </ul>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/common/navbar.html',\n    '<nav class=\"navbar navbar-default\" role=\"navigation\">\\n' +\n    '  <div class=\"container-fluid\">\\n' +\n    '    <div class=\"navbar-header\">\\n' +\n    '      <a href=\"#/main\" class=\"navbar-brand\">NLP-TAB</a>\\n' +\n    '    </div>\\n' +\n    '    <ul class=\"nav navbar-nav\">\\n' +\n    '      <li navbar-link=\"document-search\"><a href=\"#/document-search\">Documents</a></li>\\n' +\n    '      <li navbar-link=\"systems\"><a href=\"#/type-systems\">Type Systems</a></li>\\n' +\n    '      <li navbar-link=\"analysis\"><a href=\"#/analysis\">Type Systems Analysis</a></li>\\n' +\n    '    </ul>\\n' +\n    '  </div>\\n' +\n    '</nav>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/document-search-explore.html',\n    '<navbar selected-link=\"\\'document-search\\'\"></navbar>\\n' +\n    '<main id=\"document-search-explore\">\\n' +\n    '    <div id=\"document\">\\n' +\n    '        <div class=\"panel panel-default\">\\n' +\n    '            <div class=\"panel-heading\">\\n' +\n    '                <h3 class=\"panel-title\">Document Text</h3>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-body\" ng-mousedown=\"clearSelectedText()\" ng-mouseup=\"checkSelectedText()\">\\n' +\n    '                <highlighted-text range=\"highlightedRange\" text=\"sofaText\"></highlighted-text>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-footer\">\\n' +\n    '                <div class=\"span-editor\">\\n' +\n    '                        <span class=\"span-begin-editor\">\\n' +\n    '                            <span-editor value=\"textSpan.begin\" min=\"0\" max=\"textSpan.end\">Begin</span-editor>\\n' +\n    '                        </span>\\n' +\n    '                        <span class=\"span-end-editor\">\\n' +\n    '                            <span-editor value=\"textSpan.end\" min=\"textSpan.begin\" max=\"sofaText.length\">End\\n' +\n    '                            </span-editor>\\n' +\n    '                        </span>\\n' +\n    '                </div>\\n' +\n    '                <!-- span-editor -->\\n' +\n    '            </div>\\n' +\n    '            <!-- panel-footer -->\\n' +\n    '        </div>\\n' +\n    '        <!-- panel -->\\n' +\n    '        <p><i>You can also select text with the mouse.</i></p>\\n' +\n    '    </div>\\n' +\n    '    <!-- document -->\\n' +\n    '    <div id=\"annotations\">\\n' +\n    '        <fs-types-in-span-table></fs-types-in-span-table>\\n' +\n    '    </div>\\n' +\n    '    <!-- annotations -->\\n' +\n    '    <div id=\"details\" ng-if=\"selectedTypeInSystem\">\\n' +\n    '        <examples-in-span></examples-in-span>\\n' +\n    '    </div>\\n' +\n    '    <!-- details -->\\n' +\n    '</main>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/document-search.html',\n    '<navbar selected-link=\"\\'document-search\\'\"></navbar>\\n' +\n    '<div id=\"document-search-results\">\\n' +\n    '    <table class=\"table\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th colspan=\"2\">\\n' +\n    '                <h2>Documents</h2>\\n' +\n    '            </th>\\n' +\n    '        </tr>\\n' +\n    '        <tr>\\n' +\n    '            <th>\\n' +\n    '                <h4>Filter</h4>\\n' +\n    '                <input type=\"text\" placeholder=\"Filter Text with Phrase\"\\n' +\n    '                       class=\"form-control\" id=\"queryString\" ng-model=\"queryString\">\\n' +\n    '            </th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tbody>\\n' +\n    '        <tr ng-show=\"fetching\">\\n' +\n    '            <td>\\n' +\n    '                <div class=\"center-block\" activity-indicator></div>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        <tr ng-repeat=\"sofa in sofas\">\\n' +\n    '            <td>\\n' +\n    '                <highlighted-text text=\"sofa.text\" range=\"ranges[$index]\"></highlighted-text>\\n' +\n    '            </td>\\n' +\n    '            <td class=\"explore-cell\">\\n' +\n    '                <a type=\"button\" class=\"btn btn-xs btn-primary\"\\n' +\n    '                   ng-href=\"#/document-search/explore/{{sofa.identifier}}?begin={{ranges[$index].outer.begin}}&end={{ranges[$index].outer.end}}\">Explore\\n' +\n    '                    <span class=\"glyphicon glyphicon-arrow-right\"></span></a>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        <tr ng-if=\"sofas.length === 0\">\\n' +\n    '            <td colspan=\"2\" class=\"text-vert-middle text-center\">\\n' +\n    '                <h3>No Results Found</h3>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        </tbody>\\n' +\n    '    </table>\\n' +\n    '\\n' +\n    '    <div class=\"text-center\">\\n' +\n    '        <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '                    total-items=\"pagination.totalItems\" max-size=\"15\" boundary-links=\"true\"></uib-pagination>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/examples-in-span.html',\n    '<div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">\\n' +\n    '            <type-name name=\"selectedTypeInSystem.type\"\\n' +\n    '                       system-index=\"selectedTypeInSystem.systemIndex\"></type-name>&nbsp;\\n' +\n    '            <small>Details</small>\\n' +\n    '        </h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '        <fs-instance-info feature-structure=\"featureStructure\"></fs-instance-info>\\n' +\n    '    </div>\\n' +\n    '    <!-- panel-body -->\\n' +\n    '</div>\\n' +\n    '<div class=\"text-center\">\\n' +\n    '    <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '                total-items=\"pagination.totalItems\" previous-text=\"&lsaquo;\" next-text=\"&rsaquo;\" max-size=\"7\"\\n' +\n    '                class=\"pagination-sm\" boundary-links=\"true\" first-text=\"&laquo;\" last-text=\"&raquo;\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/fs-types-in-span-table.html',\n    '<div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title annotations-title\">\\n' +\n    '            <span>FeatureStructure types in selected text</span>\\n' +\n    '        </h3>\\n' +\n    '    </div>\\n' +\n    '    <table class=\"table table-hover\">\\n' +\n    '        <tr ng-show=\"fetching\">\\n' +\n    '            <td>\\n' +\n    '                <div class=\"center-block\" activity-indicator>\\n' +\n    '                </div>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        <tr ng-repeat=\"typeInSystem in typeInSystems | startAt: from | limitTo: pagination.itemsPerPage\">\\n' +\n    '            <td class=\"title-subtitle-detail-cell\"\\n' +\n    '                ng-class=\"{true: \\'info\\', false: \\'\\'}[selectedTypeInSystem && typeInSystem === selectedTypeInSystem]\"\\n' +\n    '                ng-click=\"selectTypeInSystem(typeInSystem, typeInSystems.indexOf(typeInSystem))\">\\n' +\n    '                <span class=\"title\">\\n' +\n    '                    <type-name name=\"typeInSystem.type\" unlinked></type-name>\\n' +\n    '                </span>\\n' +\n    '                <span class=\"subtitle\">\\n' +\n    '                    <system-name system-index=\"typeInSystem.systemIndex\"></system-name>\\n' +\n    '                </span>\\n' +\n    '                <span class=\"detail\">{{typeInSystem.count | number : 0}}</span>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '    </table>\\n' +\n    '</div>\\n' +\n    '<!-- panel -->\\n' +\n    '<div class=\"text-center\">\\n' +\n    '    <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '                total-items=\"pagination.totalItems\" previous-text=\"&lsaquo;\" next-text=\"&rsaquo;\" max-size=\"5\"\\n' +\n    '                class=\"pagination-sm\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/annotation_analysis/span-editor.html',\n    '<button class=\"btn btn-xs\" ng-click=\"decrement()\" ng-class=\"{true: \\'\\', false: \\'disabled\\'}[canDecrement()]\">\\n' +\n    '    <span class=\"glyphicon glyphicon-arrow-left\"></span>\\n' +\n    '</button>\\n' +\n    'Span <span ng-transclude></span>: {{value}}\\n' +\n    '<button class=\"btn btn-xs\" ng-click=\"increment()\" ng-class=\"{true: \\'\\', false: \\'disabled\\'}[canIncrement()]\">\\n' +\n    '    <span class=\"glyphicon glyphicon-arrow-right\"></span>\\n' +\n    '</button>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/boolean-primitive-feature.html',\n    '<div>\\n' +\n    '    <h4>Values:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Value</th>\\n' +\n    '            <th>Count</th>\\n' +\n    '            <th>Percentage</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tr ng-repeat=\"boolValue in bool.values\">\\n' +\n    '            <td>{{boolValue.key}}</td>\\n' +\n    '            <td>{{boolValue.doc_count}}</td>\\n' +\n    '            <td>{{(100.0 * boolValue.doc_count / bool.count) | number: 2}}</td>\\n' +\n    '        </tr>\\n' +\n    '    </table>\\n' +\n    '    <p>{{bool.missing.doc_count}} instances are missing values for this feature. {{100.0 * bool.missing.doc_count / bool.count | number: 2}}% of total</p>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/float-primitive-feature.html',\n    '<div>\\n' +\n    '    <h4>Percentiles:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Percentile</th>\\n' +\n    '            <th>Value</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tbody>\\n' +\n    '        <tr ng-repeat=\"percentileObject in float.percentiles | orderBy:\\'percentile\\'\">\\n' +\n    '            <td>{{percentileObject.percentile | number: 1}}%</td>\\n' +\n    '            <td>{{percentileObject.count | number: 2}}</td>\\n' +\n    '        </tr>\\n' +\n    '        </tbody>\\n' +\n    '        <tfoot>\\n' +\n    '        <tr>\\n' +\n    '            <td colspan=\"2\">\\n' +\n    '                <p>{{float.missing.doc_count}} instances are missing values. {{100.0 * float.missing.doc_count / float.count | number: 2}}% of total</p>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        </tfoot>\\n' +\n    '    </table>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/instances-detail.html',\n    '<div ng-if=\"childTypes.length > 1\">\\n' +\n    '  <h4>Child Types&nbsp;\\n' +\n    '    <small><a ng-click=\"invertTypeSelection()\">Invert Selection</a></small>\\n' +\n    '  </h4>\\n' +\n    '  <div>\\n' +\n    '    <button style=\"margin: 2px\"\\n' +\n    '            ng-repeat=\"childType in childTypes\" class=\"btn btn-xs\"\\n' +\n    '            ng-class=\"{\\'true\\': \\'btn-primary\\', \\'false\\': \\'btn-danger\\'}[childType.isSelected]\"\\n' +\n    '            ng-click=\"toggleType($index)\">\\n' +\n    '      <type-name name=\"childType.name\" unlinked></type-name>\\n' +\n    '    </button>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"panel panel-default\" ng-if=\"featureStructureInstance\">\\n' +\n    '  <div class=\"panel-heading\">\\n' +\n    '    <div class=\"row\">\\n' +\n    '      <div class=\"col-md-2 text-left\">\\n' +\n    '        <a ng-if=\"instancesPagination.hasLowerPages()\" ng-click=\"instancesPagination.decrement()\">Previous</a>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"col-md-8 text-center\">\\n' +\n    '        <h3 class=\"panel-title\">Instance {{instancesPagination.page}} of {{instancesPagination.totalItems}} - Type:&nbsp;\\n' +\n    '          <type-name name=\"featureStructureInstance.primaryType\" system-index=\"systemIndex\"></type-name>\\n' +\n    '        </h3>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"col-md-2 text-right\">\\n' +\n    '        <a ng-if=\"instancesPagination.hasHigherPages()\" ng-click=\"instancesPagination.increment()\">Next</a>\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"panel-body\">\\n' +\n    '    <div ng-if=\"featureStructureInstance\">\\n' +\n    '      <fs-instance-info feature-structure=\"featureStructureInstance\"></fs-instance-info>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"text-center\">\\n' +\n    '  <uib-pagination ng-if=\"featureStructureInstance\" items-per-page=\"instancesPagination.itemsPerPage\"\\n' +\n    '              total-items=\"instancesPagination.totalItems\" ng-model=\"instancesPagination.page\" max-size=\"15\"\\n' +\n    '              boundary-links=\"true\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/int-primitive-feature.html',\n    '<div>\\n' +\n    '    <h4>Percentiles:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Percentile</th>\\n' +\n    '            <th>Value</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tr ng-repeat=\"percentileObject in int.percentiles | orderBy:\\'percentile\\'\">\\n' +\n    '            <td>{{percentileObject.percentile | number: 1}}%</td>\\n' +\n    '            <td>{{percentileObject.count | number: 0}}</td>\\n' +\n    '        </tr>\\n' +\n    '    </table>\\n' +\n    '    <h4>Common Values:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Value</th>\\n' +\n    '            <th>Occurrences</th>\\n' +\n    '            <th>Percentage</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tr ng-repeat=\"intValue in int.values\">\\n' +\n    '            <td>{{intValue.key}}</td>\\n' +\n    '            <td>{{intValue.doc_count}}</td>\\n' +\n    '            <td>{{(100.0 * intValue.doc_count / int.count) | number: 2}}</td>\\n' +\n    '        </tr>\\n' +\n    '        <tfoot>\\n' +\n    '        <tr>\\n' +\n    '            <td colspan=\"3\">\\n' +\n    '                <p>Approximately {{int.otherUniqueValues.value - int.values.length}} other unique values not shown here.</p>\\n' +\n    '                <p>{{int.missing.doc_count}} instances are missing values. {{100.0 * int.missing.doc_count / int.count | number: 2}}% of total</p>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        </tfoot>\\n' +\n    '    </table>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/reference-features-detail.html',\n    '<div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">Reference Features</h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '        <dl ng-if=\"selectedType.referenceFeatures.length > 0\">\\n' +\n    '            <dt ng-repeat-start=\"reference in selectedType.referenceFeatures\">{{reference.shortName}}</dt>\\n' +\n    '            <dd ng-repeat-end>\\n' +\n    '                Value Type:&nbsp;<type-name name=\"reference.valueType\" system-index=\"systemIndex\"></type-name>\\n' +\n    '            </dd>\\n' +\n    '        </dl>\\n' +\n    '        <p ng-if=\"selectedType.referenceFeatures.length === 0\">\\n' +\n    '            The selected type has no reference features.\\n' +\n    '        </p>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/string-primitive-feature.html',\n    '<div>\\n' +\n    '    <h4>Common Values:</h4>\\n' +\n    '    <table class=\"table table-bordered\">\\n' +\n    '        <thead>\\n' +\n    '        <tr>\\n' +\n    '            <th>Value</th>\\n' +\n    '            <th>Count</th>\\n' +\n    '            <th>Percentage</th>\\n' +\n    '        </tr>\\n' +\n    '        </thead>\\n' +\n    '        <tr ng-repeat=\"value in string.values\">\\n' +\n    '            <td>{{value.key}}</td>\\n' +\n    '            <td>{{value.doc_count}}</td>\\n' +\n    '            <td>{{(100.0 * value.doc_count / string.count) | number: 2}}</td>\\n' +\n    '        </tr>\\n' +\n    '        <tfoot>\\n' +\n    '        <tr>\\n' +\n    '            <td colspan=\"3\">\\n' +\n    '                <p>Approximately {{string.otherUniqueValues.value - string.values.length}} other unique values not shown here.</p>\\n' +\n    '                <p>{{string.missing.doc_count}} instances are missing values. {{100.0 * string.missing.doc_count / string.count | number: 2}}% of total</p>\\n' +\n    '            </td>\\n' +\n    '        </tr>\\n' +\n    '        </tfoot>\\n' +\n    '    </table>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/system-builder.html',\n    '<navbar selected-link=\"\\'systems\\'\"></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '  <h1>Add new system</h1>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-4\">\\n' +\n    '    <form ng-disabled=\"!uploading\">\\n' +\n    '      <div class=\"form-group\">\\n' +\n    '        <label for=\"systemName\">System Name</label>\\n' +\n    '        <input type=\"text\" class=\"form-control\" id=\"systemName\" ng-model=\"systemName\" placeholder=\"Systemname\">\\n' +\n    '      </div>\\n' +\n    '      <div class=\"form-group\">\\n' +\n    '        <label for=\"systemDescription\">System Description</label>\\n' +\n    '        <input type=\"text\" class=\"form-control\" id=\"systemDescription\" ng-model=\"systemDescription\"\\n' +\n    '               placeholder=\"System Description\">\\n' +\n    '      </div>\\n' +\n    '      <div class=\"form-group\">\\n' +\n    '        <label for=\"files\">Zip File</label>\\n' +\n    '        <input id=\"files\" type=\"file\" ngf-select ng-model=\"file\" name=\"file\" accept=\"application/zip\" required>\\n' +\n    '\\n' +\n    '        <p class=\"help-block\">Zipped input file, should contain a file named TypeSystem.xml with the UIMA type system\\n' +\n    '          and any number of UIMA XMI documents.</p>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"form-group\">\\n' +\n    '        <label for=\"useXCas\">Use XCas?</label>\\n' +\n    '        <input type=\"checkbox\" class=\"form-control\" id=\"useXCas\" ng-model=\"useXCas\">\\n' +\n    '\\n' +\n    '        <p class=\"help-block\">Whether or not the input contains XCas serialized files, the default is to use XMI\\n' +\n    '          serialized files</p>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"btn btn-default\" ng-click=\"submit()\">Submit</div>\\n' +\n    '    </form>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/system-task-progress.html',\n    '<navbar selected-link=\"\\'systems\\'\"></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '  <h1>System Indexing Progress</h1>\\n' +\n    '</div>\\n' +\n    '<div class=\"col-md-6 col-md-offset-3\" ng-if=\"!systemIndexingTask\">\\n' +\n    '  <h3>Preparing for System Indexing</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"col-md-6 col-md-offset-3\" ng-if=\"systemIndexingTask\">\\n' +\n    '  <p class=\"text-center\">Completed {{systemIndexingTask.entityCount}} of {{systemIndexingTask.total}}\\n' +\n    '    documents.</p>\\n' +\n    '  <uib-progressbar max=\"systemIndexingTask.total\" value=\"systemIndexingTask.entityCount\"></uib-progressbar>\\n' +\n    '  <p class=\"text-center\" ng-if=\"systemIndexingTask.failed\">System Indexing task failed. Reason: </p>\\n' +\n    '\\n' +\n    '  <p ng-repeat=\"exception in systemIndexingTask.exceptions\">\\n' +\n    '    <span ng-repeat-start=\"line in exception\">{{line}}</span>\\n' +\n    '    <br ng-repeat-end>\\n' +\n    '  </p>\\n' +\n    '\\n' +\n    '  <div class=\"text-center\" ng-if=\"systemIndexingTask.finished && !systemIndexingTask.failed\">\\n' +\n    '    <p>\\n' +\n    '      System indexing task completed without errors.\\n' +\n    '    </p>\\n' +\n    '    <p>\\n' +\n    '      Click <a class=\"ng-click-link\" ng-click=\"goToSystem()\">here</a> to continue to system information.\\n' +\n    '    </p>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/system-types-list.html',\n    '<input type=\"text\" class=\"form-control\" placeholder=\"Filter types\" ng-model=\"filter\">\\n' +\n    '<div class=\"panel panel-default\">\\n' +\n    '  <div class=\"panel-heading\">\\n' +\n    '    <h3 class=\"panel-title\">Types</h3>\\n' +\n    '  </div>\\n' +\n    '\\n' +\n    '  <table class=\"table table-hover\">\\n' +\n    '    <tr ng-repeat=\"type in types\">\\n' +\n    '      <td ng-class=\"{\\'true\\':\\'info\\', \\'false\\':\\'\\'}[selectedTypeName === type.typeName]\" ng-click=\"selectType(type)\"\\n' +\n    '          class=\"ng-click-link\">\\n' +\n    '        <type-name name=\"type.typeName\" unlinked></type-name>\\n' +\n    '      </td>\\n' +\n    '    </tr>\\n' +\n    '  </table>\\n' +\n    '</div>\\n' +\n    '<div class=\"text-center\">\\n' +\n    '  <uib-pagination ng-model=\"pagination.page\" total-items=\"pagination.totalItems\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '              max-size=\"5\" previous-text=\"&lsaquo;\" next-text=\"&rsaquo;\" boundary-links=\"true\"\\n' +\n    '              first-text=\"&laquo;\" last-text=\"&raquo;\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/system.html',\n    '<navbar selected-link=\"\\'systems\\'\"></navbar>\\n' +\n    '<div class=\"row\" ng-if=\"deleteWarned\">\\n' +\n    '  <div class=\"col-md-12\">\\n' +\n    '    <div class=\"alert alert-danger\" role=\"alert\">Warning: deleting a system is permanent, click \"Delete System\" again to\\n' +\n    '      continue.\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-12\">\\n' +\n    '    <h2>{{system.system}}\\n' +\n    '      &nbsp;\\n' +\n    '      <small><a class=\"ng-click-link\" ng-click=\"deleteSystem()\">Delete System</a></small>\\n' +\n    '    </h2>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-3\">\\n' +\n    '    <system-types-list></system-types-list>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"col-md-9\" ng-if=\"selectedTypeName\">\\n' +\n    '    <uib-tabset justified=\"true\" ng-if=\"selectedType\">\\n' +\n    '      <uib-tab heading=\"Info\" active=\"infoActive\" select=\"selectedInfo()\">\\n' +\n    '        <type-info ng-if=\"infoActive\"></type-info>\\n' +\n    '      </uib-tab>\\n' +\n    '      <uib-tab heading=\"Primitive Features\" active=\"primitivesActive\" select=\"selectedPrimitives()\">\\n' +\n    '        <uib-accordion close-others=\"false\" ng-if=\"selectedType.primitiveFeatures.length > 0\">\\n' +\n    '          <uib-accordion-group ng-repeat=\"primitiveFeature in selectedType.primitiveFeatures\"\\n' +\n    '                           is-open=\"primitiveFeature.isOpen\">\\n' +\n    '            <uib-accordion-heading>\\n' +\n    '              {{primitiveFeature.shortName}} ({{primitiveFeature.valueType}})\\n' +\n    '            </uib-accordion-heading>\\n' +\n    '            <div ng-if=\"primitiveFeature.isOpen && primitiveFeature.valueType === \\'uima.cas.Boolean\\'\">\\n' +\n    '              <boolean-primitive-feature feature=\"primitiveFeature\" system-index=\"systemIndex\"\\n' +\n    '                                         selected-type=\"selectedType\"></boolean-primitive-feature>\\n' +\n    '            </div>\\n' +\n    '            <div ng-if=\"primitiveFeature.isOpen && primitiveFeature.valueType === \\'uima.cas.String\\'\">\\n' +\n    '              <string-primitive-feature feature=\"primitiveFeature\" system-index=\"systemIndex\"\\n' +\n    '                                        selected-type=\"selectedType\"></string-primitive-feature>\\n' +\n    '            </div>\\n' +\n    '            <div ng-if=\"primitiveFeature.isOpen && primitiveFeature.valueType === \\'uima.cas.Integer\\'\">\\n' +\n    '              <int-primitive-feature feature=\"primitiveFeature\" system-index=\"systemIndex\"\\n' +\n    '                                     selected-type=\"selectedType\"></int-primitive-feature>\\n' +\n    '            </div>\\n' +\n    '            <div ng-if=\"primitiveFeature.isOpen && primitiveFeature.valueType === \\'uima.cas.Float\\'\">\\n' +\n    '              <float-primitive-feature feature=\"primitiveFeature\" system-index=\"systemIndex\"\\n' +\n    '                                       selected-type=\"selectedType\"></float-primitive-feature>\\n' +\n    '            </div>\\n' +\n    '          </uib-accordion-group>\\n' +\n    '        </uib-accordion>\\n' +\n    '        <div class=\"panel panel-default\" ng-show=\"selectedType.primitiveFeatures.length === 0\">\\n' +\n    '          <div class=\"panel-body\">\\n' +\n    '            <p>The selected type has no primitive features.</p>\\n' +\n    '          </div>\\n' +\n    '        </div>\\n' +\n    '      </uib-tab>\\n' +\n    '      <uib-tab heading=\"Reference Features\" active=\"referencesActive\" select=\"selectedReferences()\">\\n' +\n    '        <reference-features-detail ng-if=\"referencesActive\"></reference-features-detail>\\n' +\n    '      </uib-tab>\\n' +\n    '      <uib-tab heading=\"Instances\" active=\"instancesActive\" select=\"selectedInstances()\">\\n' +\n    '        <instances-detail ng-if=\"instancesActive\"></instances-detail>\\n' +\n    '      </uib-tab>\\n' +\n    '    </uib-tabset>\\n' +\n    '    <div class=\"panel panel-default\" ng-if=\"!selectedType\">\\n' +\n    '      <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">\\n' +\n    '          <type-name name=\"selectedTypeName\" unlinked></type-name>\\n' +\n    '        </h3>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"panel-body\">\\n' +\n    '        This type has no instances included in the results from {{system.system}}. It is either not used or is\\n' +\n    '        not saved in the CAS output.\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/systems-list.html',\n    '<navbar selected-link=\"\\'systems\\'\"></navbar>\\n' +\n    '<div class=\"row\" ng-if=\"deleteWarned\">\\n' +\n    '  <div class=\"col-md-12\">\\n' +\n    '    <div class=\"alert alert-danger\" role=\"alert\">Warning: deleting a system is permanent, click again to\\n' +\n    '      continue.\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '  <h1>Type Systems</h1>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-12\">\\n' +\n    '    <table class=\"table table-hover\">\\n' +\n    '      <tbody>\\n' +\n    '      <tr ng-repeat=\"system in systems\" class=\"system-row ng-click-link\" ng-click=\"selectSystem(system.index)\">\\n' +\n    '        <td class=\"system-info\">\\n' +\n    '          <h4>{{system.system}}</h4>\\n' +\n    '\\n' +\n    '          <p>Description: {{system.description}}</p>\\n' +\n    '\\n' +\n    '          <p>Added On: {{system.created | date:\\'longDate\\'}}</p>\\n' +\n    '        </td>\\n' +\n    '        <td ng-if=\"isSecure\">\\n' +\n    '          <div class=\"accessory-container\">\\n' +\n    '            <button class=\"btn btn-danger\" ng-click=\"deleteSystem($event, system.index)\"><span\\n' +\n    '              class=\"glyphicon glyphicon-minus\"></span></button>\\n' +\n    '          </div>\\n' +\n    '        </td>\\n' +\n    '      </tr>\\n' +\n    '      </tbody>\\n' +\n    '    </table>\\n' +\n    '    <a ng-if=\"isSecure\" href=\"#/system-builder\" class=\"btn btn-lg btn-primary\">Add System</a>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/systems/type-info.html',\n    '<div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">{{selectedType.typeShortName}}</h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '        <h5>Full Name</h5>\\n' +\n    '        <p>{{selectedType.typeName}}</p>\\n' +\n    '        <h5>Instances</h5>\\n' +\n    '        <p>{{countOfType}}</p>\\n' +\n    '        <p>{{100.0 * countOfType / totalFeatureStructures | number : 2}}% of {{totalFeatureStructures}} total.</p>\\n' +\n    '        <h5>Parent Types Inherited From:</h5>\\n' +\n    '        <ul class=\"list-unstyled\">\\n' +\n    '            <li ng-repeat=\"parentType in selectedType.parentTypes\">\\n' +\n    '                <type-name name=\"parentType\" system-index=\"systemIndex\"></type-name>\\n' +\n    '            </li>\\n' +\n    '        </ul>\\n' +\n    '        <h5>Child Types:</h5>\\n' +\n    '        <ul class=\"list-unstyled\">\\n' +\n    '            <li ng-repeat=\"child in children\">\\n' +\n    '                <type-name name=\"child\" system-index=\"systemIndex\"></type-name>\\n' +\n    '            </li>\\n' +\n    '        </ul>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-builder-examples.html',\n    '<uib-tabset justified=\"true\" ng-if=\"config.selectedType\">\\n' +\n    '  <uib-tab heading=\"Info\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-body\">\\n' +\n    '        <span>Total Instances: {{examplesPagination.totalItems}}</span>\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </uib-tab>\\n' +\n    '  <uib-tab heading=\"Examples\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-body\">\\n' +\n    '        <fs-instance-info feature-structure=\"example\"></fs-instance-info>\\n' +\n    '      </div>\\n' +\n    '      <pagination items-per-page=\"examplesPagination.itemsPerPage\" total-items=\"examplesPagination.totalItems\"\\n' +\n    '                  ng-model=\"examplesPagination.page\" max-size=\"6\" boundary-links=\"false\"></pagination>\\n' +\n    '    </div>\\n' +\n    '  </uib-tab>\\n' +\n    '  <uib-tab heading=\"Feature Values\" ng-if=\"config.selectedFeature\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-body\">\\n' +\n    '        <div ng-if=\"config.selectedFeature.valueType === \\'uima.cas.Boolean\\'\">\\n' +\n    '          <boolean-primitive-feature feature=\"config.selectedFeature\" system-index=\"config.selectedSystem.index\"\\n' +\n    '                                     selected-type=\"config.selectedType\"></boolean-primitive-feature>\\n' +\n    '        </div>\\n' +\n    '        <div ng-if=\"config.selectedFeature.valueType === \\'uima.cas.String\\'\">\\n' +\n    '          <string-primitive-feature feature=\"config.selectedFeature\" system-index=\"config.selectedSystem.index\"\\n' +\n    '                                    selected-type=\"config.selectedType\"></string-primitive-feature>\\n' +\n    '        </div>\\n' +\n    '        <div ng-if=\"config.selectedFeature.valueType === \\'uima.cas.Integer\\'\">\\n' +\n    '          <int-primitive-feature feature=\"config.selectedFeature\" system-index=\"config.selectedSystem.index\"\\n' +\n    '                                 selected-type=\"config.selectedType\"></int-primitive-feature>\\n' +\n    '        </div>\\n' +\n    '        <div ng-if=\"config.selectedFeature.valueType === \\'uima.cas.Float\\'\">\\n' +\n    '          <float-primitive-feature feature=\"config.selectedFeature\" system-index=\"config.selectedSystem.index\"\\n' +\n    '                                   selected-type=\"config.selectedType\"></float-primitive-feature>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </uib-tab>\\n' +\n    '</uib-tabset>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-builder.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<div class=\"container\">\\n' +\n    '\\n' +\n    '  <div class=\"page-header\">\\n' +\n    '    <h1>Run New Analysis</h1>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"panel panel-default\">\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '      <div class=\"row\">\\n' +\n    '        <div class=\"col-md-6\">\\n' +\n    '          <h3 class=\"text-left\">Hypothesis Unit of Analysis</h3>\\n' +\n    '          <unit-of-analysis unit-of-analysis=\"firstUnitOfAnalysis\" systems=\"systems\"\\n' +\n    '                            add-feature-value-mapping=\"addHypothesisFeatureValueMapping\"></unit-of-analysis>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-6\">\\n' +\n    '          <h3 class=\"text-left\">Reference Unit of Analysis</h3>\\n' +\n    '          <unit-of-analysis unit-of-analysis=\"secondUnitOfAnalysis\" systems=\"systems\"\\n' +\n    '                            add-feature-value-mapping=\"addReferenceFeatureValueMapping\"></unit-of-analysis>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '\\n' +\n    '  <h3 ng-if=\"featureValueMappings.length > 0\">Feature Value Mappings</h3>\\n' +\n    '\\n' +\n    '  <div class=\"panel panel-default\" ng-repeat=\"featureValueMapping in featureValueMappings\">\\n' +\n    '    <div class=\"panel-body\">\\n' +\n    '      <div class=\"row\">\\n' +\n    '        <div class=\"col-md-5\">\\n' +\n    '          <b ng-if=\"featureValueMapping.hypothesisFeature\">Feature:</b>\\n' +\n    '          <feature-on feature-name=\"featureValueMapping.hypothesisFeature.feature.name\"></feature-on>\\n' +\n    '          <br>\\n' +\n    '\\n' +\n    '          <div ng-if=\"featureValueMapping.hypothesisFeature.nestedStructure.length > 0\">\\n' +\n    '            <b>On Nested Structure:</b>\\n' +\n    '            <ul>\\n' +\n    '              <li ng-repeat=\"nestedItem in featureValueMapping.hypothesisFeature.nestedStructure\">\\n' +\n    '                <feature-on feature-name=\"nestedItem\"></feature-on>\\n' +\n    '              </li>\\n' +\n    '            </ul>\\n' +\n    '          </div>\\n' +\n    '          <b ng-if=\"featureValueMapping.hypothesisFeature\">Is Collection:</b>\\n' +\n    '          {{{\\'true\\': \\'Yes\\', \\'false\\': \\'No\\'}[featureValueMapping.hypothesisIsCollection]}}<br>\\n' +\n    '          <a href=\"javascript:\" ng-if=\"featureValueMapping.hypothesisFeature\"\\n' +\n    '             ng-click=\"removeHypothesisFeature($index)\">Delete</a>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-2\">\\n' +\n    '          <form class=\"form-inline text-center\">\\n' +\n    '            <form class=\"form-group\">\\n' +\n    '              <label for=\"equivalenceOptions\" class=\"sr-only\">Equivalence</label>\\n' +\n    '              <select id=\"equivalenceOptions\" ng-if=\"featureValueMapping.equivalenceOptions.length > 0\"\\n' +\n    '                      class=\"form-control\"\\n' +\n    '                      ng-model=\"featureValueMapping.equivalence\">\\n' +\n    '                <option ng-repeat=\"eq in featureValueMapping.equivalenceOptions\">{{eq}}</option>\\n' +\n    '              </select>\\n' +\n    '            </form>\\n' +\n    '          </form>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-5\">\\n' +\n    '          <b ng-if=\"featureValueMapping.referenceFeature\">Feature:</b>\\n' +\n    '          <feature-on feature-name=\"featureValueMapping.referenceFeature.feature.name\"></feature-on>\\n' +\n    '          <br>\\n' +\n    '\\n' +\n    '          <div ng-if=\"featureValueMapping.referenceFeature.nestedStructure.length > 0\">\\n' +\n    '            <b>On Nested Structure:</b>\\n' +\n    '            <ul>\\n' +\n    '              <li ng-repeat=\"nestedItem in featureValueMapping.referenceFeature.nestedStructure\">\\n' +\n    '                <feature-on feature-name=\"nestedItem\"></feature-on>\\n' +\n    '              </li>\\n' +\n    '            </ul>\\n' +\n    '          </div>\\n' +\n    '          <b ng-if=\"featureValueMapping.referenceFeature\">Is Collection:</b>\\n' +\n    '          {{{\\'true\\': \\'Yes\\', \\'false\\': \\'No\\'}[featureValueMapping.referenceIsCollection]}}<br>\\n' +\n    '          <a href=\"javascript:\" ng-if=\"featureValueMapping.referenceFeature\"\\n' +\n    '             ng-click=\"removeReferenceFeature($index)\">Delete</a>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"row\" ng-if=\"featureValueMapping.hypothesisFeature && featureValueMapping.referenceFeature\">\\n' +\n    '        <div class=\"col-md-12\">\\n' +\n    '          <h5>Value Transformations</h5>\\n' +\n    '\\n' +\n    '          <p>Values without value transformations will remain the same.</p>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"row\" ng-repeat=\"valueMapping in featureValueMapping.valueMappings\">\\n' +\n    '        <div class=\"col-md-1\">\\n' +\n    '          From:\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-3\">\\n' +\n    '          <feature-value-suggestion system-index=\"firstUnitOfAnalysis.selectedSystem.index\"\\n' +\n    '                                    type=\"firstUnitOfAnalysis.selectedType\"\\n' +\n    '                                    feature=\"featureValueMapping.hypothesisFeature.feature\"\\n' +\n    '                                    value=\"valueMapping.from\"\\n' +\n    '                                    on-select=\"valueMapping.fromSelected()\"></feature-value-suggestion>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-1 col-md-offset-2\">\\n' +\n    '          To:\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-3\">\\n' +\n    '          <feature-value-suggestion system-index=\"secondUnitOfAnalysis.selectedSystem.index\"\\n' +\n    '                                    type=\"secondUnitOfAnalysis.selectedType\"\\n' +\n    '                                    feature=\"featureValueMapping.referenceFeature.feature\"\\n' +\n    '                                    value=\"valueMapping.to\"\\n' +\n    '                                    on-select=\"valueMapping.toSelected()\"></feature-value-suggestion>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-md-1\">\\n' +\n    '          <p class=\"text-right\">\\n' +\n    '            <a href=\"javascript:\" ng-click=\"featureValueMapping.removeValueMapping($index)\">Delete</a>\\n' +\n    '          </p>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '      <div class=\"row\" ng-if=\"featureValueMapping.hypothesisFeature && featureValueMapping.referenceFeature\">\\n' +\n    '        <div class=\"col-md-12\">\\n' +\n    '          <p class=\"text-center\">\\n' +\n    '            <a href=\"javascript:\" ng-click=\"featureValueMapping.addValueMapping()\">Add Value Transformation</a>\\n' +\n    '          </p>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"row\">\\n' +\n    '    <div class=\"col-md-10 col-md-offset-1\">\\n' +\n    '      <form>\\n' +\n    '        <div class=\"checkbox\">\\n' +\n    '          <label>\\n' +\n    '            <input type=\"checkbox\" ng-model=\"onlyCompareMatches\" ng-disabled=\"!featureValueMappings.length\"><b>Hit/Miss\\n' +\n    '            only.</b> Ignores annotations that do not have counterparts in the other system and only compares whether\\n' +\n    '            feature values are equivalent.\\n' +\n    '          </label>\\n' +\n    '        </div>\\n' +\n    '        <p class=\"help-block\" ng-if=\"!featureValueMappings.length\">Disabled because there are no features selected.</p>\\n' +\n    '\\n' +\n    '        <div class=\"form-group\">\\n' +\n    '          <label for=\"description\">Description</label>\\n' +\n    '          <input type=\"text\" id=\"description\" ng-model=\"description\" class=\"form-control\" title=\"Description\">\\n' +\n    '        </div>\\n' +\n    '        <button type=\"button\"\\n' +\n    '                ng-disabled=\"!isReadyForAnalysis()\"\\n' +\n    '                class=\"btn btn-primary btn-lg\" ng-click=\"submitAnalysis()\">Run Analysis\\n' +\n    '        </button>\\n' +\n    '        <p class=\"help-block\" ng-if=\"!isReadyForAnalysis()\">Disabled until both systems have types and all\\n' +\n    '          selected features are matched.</p>\\n' +\n    '      </form>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-progress.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<div class=\"page-header\">\\n' +\n    '  <h1>Analysis Progress</h1>\\n' +\n    '</div>\\n' +\n    '<div class=\"col-md-6 col-md-offset-3\" ng-if=\"!analysisTask\">\\n' +\n    '  <h3>Preparing for Analysis</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"col-md-6 col-md-offset-3\" ng-if=\"analysisTask\">\\n' +\n    '  <p class=\"text-center\" ng-if=\"analysisTask\">Completed {{analysisTask.completed}} of {{analysisTask.total}}\\n' +\n    '    documents.</p>\\n' +\n    '  <uib-progressbar max=\"analysisTask.total\" value=\"analysisTask.completed\"></uib-progressbar>\\n' +\n    '  <p class=\"text-center\" ng-if=\"analysisTask.failed\">Analysis task failed. Reason: {{analysisTask.error}}</p>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-results-explore.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<ol class=\"breadcrumb\">\\n' +\n    '  <li><a href=\"#/analysis\">Analyzed Systems</a></li>\\n' +\n    '  <li>\\n' +\n    '    <a\\n' +\n    '      ng-href=\"#/analysis-results?tested={{matchCounts.hypothesisUnitOfAnalysis.systemIndex}}&gold={{matchCounts.referenceUnitOfAnalysis.systemIndex}}\">\\n' +\n    '      <system-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\" unlinked></system-name>\\n' +\n    '      &nbsp;vs.&nbsp;\\n' +\n    '      <system-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\" unlinked></system-name>\\n' +\n    '    </a>\\n' +\n    '  </li>\\n' +\n    '  <li class=\"active\">\\n' +\n    '    Analysis Results Explore\\n' +\n    '  </li>\\n' +\n    '</ol>\\n' +\n    '<div class=\"container-fluid\">\\n' +\n    '  <div class=\"row\">\\n' +\n    '    <div class=\"col-lg-5 col-md-5\">\\n' +\n    '      <confusion-matrix-table examples-of=\"examplesOf\">\\n' +\n    '\\n' +\n    '      </confusion-matrix-table>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"col-lg-7 col-md-7\">\\n' +\n    '      <div class=\"row\">\\n' +\n    '        <div class=\"col-lg-8 col-md-12\">\\n' +\n    '          <div class=\"panel panel-default\">\\n' +\n    '            <div class=\"panel-heading\">\\n' +\n    '              <h3 class=\"panel-title\">Hypothesis Unit of Analysis</h3>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-body\">\\n' +\n    '              <h5>System:&nbsp;\\n' +\n    '                <system-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\"></system-name>\\n' +\n    '              </h5>\\n' +\n    '              <unit-of-analysis-description unit-of-analysis=\"matchCounts.hypothesisUnitOfAnalysis\"\\n' +\n    '                                            feature-value-mappings=\"matchCounts.featureValueMappings\"\\n' +\n    '                                            is-hypothesis=\"true\"></unit-of-analysis-description>\\n' +\n    '            </div>\\n' +\n    '          </div>\\n' +\n    '          <div class=\"panel panel-default\">\\n' +\n    '            <div class=\"panel-heading\">\\n' +\n    '              <h3 class=\"panel-title\">Reference Unit of Analysis</h3>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-body\">\\n' +\n    '              <h5>System:&nbsp;\\n' +\n    '                <system-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\"></system-name>\\n' +\n    '              </h5>\\n' +\n    '              <unit-of-analysis-description unit-of-analysis=\"matchCounts.referenceUnitOfAnalysis\"\\n' +\n    '                                            feature-value-mappings=\"matchCounts.featureValueMappings\"\\n' +\n    '                                            is-hypothesis=\"false\"></unit-of-analysis-description>\\n' +\n    '            </div>\\n' +\n    '          </div>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"col-lg-4 col-md-12\">\\n' +\n    '          <div class=\"panel panel-default\">\\n' +\n    '            <div class=\"panel-heading\">\\n' +\n    '              <h3 class=\"panel-title\">Metrics</h3>\\n' +\n    '            </div>\\n' +\n    '            <div class=\"panel-body\">\\n' +\n    '              <dl ng-if=\"!matchCounts.hitMissOnly\">\\n' +\n    '                <dt>Precision</dt>\\n' +\n    '                <dd>{{matchCounts.precision | number: 3}}</dd>\\n' +\n    '                <dt>Recall</dt>\\n' +\n    '                <dd>{{matchCounts.recall | number: 3}}</dd>\\n' +\n    '                <dt>F-Score</dt>\\n' +\n    '                <dd>{{matchCounts.fMeasure | number: 3}}</dd>\\n' +\n    '              </dl>\\n' +\n    '              <dl ng-if=\"matchCounts.hitMissOnly\">\\n' +\n    '                <dt>Accuracy</dt>\\n' +\n    '                <dd>{{matchCounts.accuracy | number: 3}}</dd>\\n' +\n    '              </dl>\\n' +\n    '            </div>\\n' +\n    '          </div>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"row\">\\n' +\n    '    <cooccurring-examples-list></cooccurring-examples-list>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis-results.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<ol class=\"breadcrumb\">\\n' +\n    '  <li><a href=\"#/analysis\">Analyzed Systems</a></li>\\n' +\n    '  <li class=\"active\">\\n' +\n    '    <system-name system-index=\"selectedTested\" unlinked></system-name>\\n' +\n    '    &nbsp;vs.&nbsp;\\n' +\n    '    <system-name system-index=\"selectedGold\" unlinked></system-name>\\n' +\n    '  </li>\\n' +\n    '</ol>\\n' +\n    '<table class=\"table table-striped table-bordered binary-classification-results\">\\n' +\n    '  <thead>\\n' +\n    '  <tr>\\n' +\n    '    <th>Description</th>\\n' +\n    '    <th>\\n' +\n    '      <p>\\n' +\n    '        <system-name system-index=\"selectedTested\"></system-name>\\n' +\n    '      </p>\\n' +\n    '      <p>\\n' +\n    '        Hypothesis Unit of Analysis\\n' +\n    '      </p>\\n' +\n    '    </th>\\n' +\n    '    <th>\\n' +\n    '      <p>\\n' +\n    '        <system-name system-index=\"selectedGold\"></system-name>\\n' +\n    '      </p>\\n' +\n    '      <p>\\n' +\n    '        Reference Unit of Analysis\\n' +\n    '      </p>\\n' +\n    '    </th>\\n' +\n    '    <th>Precision</th>\\n' +\n    '    <th>Recall</th>\\n' +\n    '    <th>F-score / Accuracy</th>\\n' +\n    '    <th>Explore</th>\\n' +\n    '  </tr>\\n' +\n    '  </thead>\\n' +\n    '  <tr ng-repeat=\"matchCount in matchCounts\">\\n' +\n    '    <td>\\n' +\n    '      <span ng-if=\"matchCount.description\">{{matchCount.description}}</span>\\n' +\n    '      <span ng-if=\"!matchCount.description\">No description.</span>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <unit-of-analysis-description unit-of-analysis=\"matchCount.hypothesisUnitOfAnalysis\"\\n' +\n    '                                    feature-value-mappings=\"matchCount.featureValueMappings\"\\n' +\n    '                                    is-hypothesis=\"true\"></unit-of-analysis-description>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <unit-of-analysis-description unit-of-analysis=\"matchCount.referenceUnitOfAnalysis\"\\n' +\n    '                                    feature-value-mappings=\"matchCount.featureValueMappings\"\\n' +\n    '                                    is-hypothesis=\"false\"></unit-of-analysis-description>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <span ng-if=\"matchCount.precision\">{{matchCount.precision | number: 2}}</span>\\n' +\n    '      <span ng-if=\"matchCount.accuracy\">&mdash;</span>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <span ng-if=\"matchCount.recall\">{{matchCount.recall | number: 2}}</span>\\n' +\n    '      <span ng-if=\"matchCount.accuracy\">&mdash;</span>\\n' +\n    '    </td>\\n' +\n    '    <td>\\n' +\n    '      <span ng-if=\"matchCount.fMeasure\">{{matchCount.fMeasure | number: 2}} (F-Score)</span>\\n' +\n    '      <span ng-if=\"matchCount.accuracy\">{{matchCount.accuracy | number: 2}} (Accuracy)</span>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"explore-cell\">\\n' +\n    '      <a type=\"button\" class=\"btn btn-xs btn-primary\"\\n' +\n    '         ng-href=\"#/analysis-results-explore/{{matchCount._id}}\">Explore\\n' +\n    '        <span class=\"glyphicon glyphicon-arrow-right\"></span></a>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '</table>\\n' +\n    '<div class=\"text-center\">\\n' +\n    '  <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\"\\n' +\n    '              total-items=\"pagination.totalItems\" max-size=\"15\" boundary-links=\"true\"></uib-pagination>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/analysis.html',\n    '<navbar selected-link=\"\\'analysis\\'\"></navbar>\\n' +\n    '<ol class=\"breadcrumb\">\\n' +\n    '  <li class=\"active\">Analyzed Systems</li>\\n' +\n    '</ol>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-4 col-md-offset-2\">\\n' +\n    '    <h3>Analyzed Systems</h3>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-4 col-md-offset-2\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">Hypothesis Systems</h3>\\n' +\n    '      </div>\\n' +\n    '      <table class=\"table table-hover\">\\n' +\n    '        <tr ng-repeat=\"tested in systems\" ng-class=\"{\\'true\\':\\'info\\', \\'false\\':\\'\\'}[selectedTested === tested.index]\"\\n' +\n    '            ng-click=\"selectTested(tested)\">\\n' +\n    '          <td>\\n' +\n    '            <span ng-bind=\"tested.system\"></span>\\n' +\n    '            <small class=\"text-info\" ng-bind=\"tested.description\"></small>\\n' +\n    '          </td>\\n' +\n    '          <td class=\"text-right\" ng-bind=\"tested.count\"></td>\\n' +\n    '        </tr>\\n' +\n    '      </table>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"col-md-4\">\\n' +\n    '    <div class=\"panel panel-default\">\\n' +\n    '      <div class=\"panel-heading\">\\n' +\n    '        <h3 class=\"panel-title\">Reference Systems</h3>\\n' +\n    '      </div>\\n' +\n    '      <table class=\"table table-hover\">\\n' +\n    '        <tr ng-repeat=\"goldStandard in systems\"\\n' +\n    '            ng-class=\"{\\'true\\':\\'info\\', \\'false\\':\\'\\'}[selectedGoldStandard === goldStandard.index]\"\\n' +\n    '            ng-click=\"selectGoldStandard(goldStandard)\">\\n' +\n    '          <td>\\n' +\n    '            <span ng-bind=\"goldStandard.system\"></span>\\n' +\n    '            <small class=\"text-info\" ng-bind=\"goldStandard.description\"></small>\\n' +\n    '          </td>\\n' +\n    '          <td class=\"text-right\" ng-bind=\"goldStandard.goldCount\"></td>\\n' +\n    '        </tr>\\n' +\n    '      </table>\\n' +\n    '    </div>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-10 col-md-offset-2\">\\n' +\n    '    <p>\\n' +\n    '      <a class=\"btn btn-primary\" ng-disabled=\"!isReady\"\\n' +\n    '         href=\"#/analysis-results?tested={{selectedTested}}&gold={{selectedGoldStandard}}\" role=\"button\">Go</a>\\n' +\n    '      <span ng-if=\"selectedGoldStandard && !isReady\">There are 0 completed analysis runs with the selected systems.</span>\\n' +\n    '    </p>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<div class=\"row\" ng-if=\"isSecure\">\\n' +\n    '  <div class=\"col-md-2 col-md-offset-2\">\\n' +\n    '    <p>\\n' +\n    '      <a class=\"btn btn-primary\" href=\"#/analysis-builder\" role=\"button\">Run new analysis</a>\\n' +\n    '    </p>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/confusion-matrix-table.html',\n    '<table ng-if=\"!matchCounts.hitMissOnly\" class=\"confusionMatrix table table-condensed table-bordered\">\\n' +\n    '  <thead>\\n' +\n    '  <tr>\\n' +\n    '    <th colspan=\"2\" rowspan=\"2\"></th>\\n' +\n    '    <th class=\"secondTypeName typeName\" colspan=\"2\">\\n' +\n    '      <h5>Hypothesis</h5>\\n' +\n    '      <h4 class=\"text-primary\">\\n' +\n    '        <system-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\"></system-name>\\n' +\n    '      </h4>\\n' +\n    '      <p>\\n' +\n    '        <type-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\"\\n' +\n    '                   name=\"matchCounts.hypothesisUnitOfAnalysis.typeName\"></type-name>\\n' +\n    '      </p>\\n' +\n    '    </th>\\n' +\n    '  </tr>\\n' +\n    '  <tr>\\n' +\n    '    <th class=\"occursDoesnt\">Occurs</th>\\n' +\n    '    <th class=\"occursDoesnt\">Does not</th>\\n' +\n    '  </tr>\\n' +\n    '  </thead>\\n' +\n    '  <tr>\\n' +\n    '    <th class=\"firstTypeName typeName\" rowspan=\"2\">\\n' +\n    '      <h5>Reference</h5>\\n' +\n    '      <h4 class=\"text-primary\">\\n' +\n    '        <system-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\"></system-name>\\n' +\n    '      </h4>\\n' +\n    '      <p>\\n' +\n    '        <type-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\"\\n' +\n    '                   name=\"matchCounts.referenceUnitOfAnalysis.typeName\"></type-name>\\n' +\n    '      </p>\\n' +\n    '    </th>\\n' +\n    '    <th class=\"occursDoesnt\">Occurs</th>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'coOccurrences\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'coOccurrences\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.both}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'secondOnly\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'secondOnly\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.secondOnly}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '  <tr>\\n' +\n    '    <th class=\"occursDoesnt\">Does not</th>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'firstOnly\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'firstOnly\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.firstOnly}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"countCell\">-</td>\\n' +\n    '  </tr>\\n' +\n    '</table>\\n' +\n    '<table ng-if=\"matchCounts.hitMissOnly\" class=\"confusionMatrix table table-condensed table-bordered\">\\n' +\n    '  <thead>\\n' +\n    '  <tr>\\n' +\n    '    <th class=\"occursDoesnt\">Hit</th>\\n' +\n    '    <th class=\"occursDoesnt\">Miss</th>\\n' +\n    '  </tr>\\n' +\n    '  </thead>\\n' +\n    '  <tr>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'coOccurrences\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'coOccurrences\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.hits}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"countCell\" ng-click=\"selectExamplesOf(\\'firstOnly\\')\"\\n' +\n    '        ng-class=\"{true: \\'active\\', false: \\'\\'}[examplesOf === \\'firstOnly\\']\">\\n' +\n    '      <button type=\"button\" class=\"btn btn-md btn-primary\">\\n' +\n    '        {{matchCounts.misses}}\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '</table>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/cooccurring-examples-list.html',\n    '<table class=\"table table-bordered\">\\n' +\n    '  <thead>\\n' +\n    '  <tr>\\n' +\n    '    <th>#</th>\\n' +\n    '    <th>\\n' +\n    '      <span>Hypothesis:&nbsp;</span><system-name system-index=\"matchCounts.hypothesisUnitOfAnalysis.systemIndex\" unlinked></system-name>\\n' +\n    '      &nbsp;\\n' +\n    '      <type-name name=\"matchCounts.hypothesisUnitOfAnalysis.typeName\" unlinked></type-name>\\n' +\n    '    </th>\\n' +\n    '    <th>\\n' +\n    '      <span>Reference:&nbsp;</span><system-name system-index=\"matchCounts.referenceUnitOfAnalysis.systemIndex\" unlinked></system-name>\\n' +\n    '      &nbsp;\\n' +\n    '      <type-name name=\"matchCounts.referenceUnitOfAnalysis.typeName\" unlinked>\\n' +\n    '    </th>\\n' +\n    '  </tr>\\n' +\n    '  </thead>\\n' +\n    '  <tbody>\\n' +\n    '  <tr ng-repeat=\"coOccurrenceMatch in coOccurrenceMatches\" cooccurring-examples-row>\\n' +\n    '  </tr>\\n' +\n    '  </tbody>\\n' +\n    '</table>\\n' +\n    '\\n' +\n    '<div class=\"text-center\">\\n' +\n    '  <uib-pagination ng-model=\"pagination.page\" items-per-page=\"pagination.itemsPerPage\" total-items=\"pagination.totalItems\"\\n' +\n    '              max-size=\"20\">\\n' +\n    '  </uib-pagination>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/cooccurring-examples-row.html',\n    '<td>\\n' +\n    '  {{$index + 1 + from}}\\n' +\n    '</td>\\n' +\n    '<td>\\n' +\n    '  <fs-instance-info ng-if=\"firstFs\" feature-structure=\"firstFs\"></fs-instance-info>\\n' +\n    '  <h4 ng-if=\"!firstFs\">No matching feature structure located nearby.</h4>\\n' +\n    '</td>\\n' +\n    '<td>\\n' +\n    '  <fs-instance-info ng-if=\"secondFs\" feature-structure=\"secondFs\"></fs-instance-info>\\n' +\n    '  <h4 ng-if=\"!secondFs\">No matching feature structure located nearby.</h4>\\n' +\n    '</td>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/feature-examples-modal.html',\n    '<div class=\"modal-header\">\\n' +\n    '  <h3 class=\"modal-title\">Examples of Feature</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-body\">\\n' +\n    '  <feature-values system-index=\"systemIndex\" type=\"type\" feature=\"feature\"></feature-values>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-footer\">\\n' +\n    '  <button class=\"btn btn-primary\" ng-click=\"done()\">Done</button>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/feature-value-suggestion.html',\n    '<ui-select ng-model=\"selected.value\">\\n' +\n    '  <ui-select-match placeholder=\"Value\">{{$select.selected}}</ui-select-match>\\n' +\n    '  <ui-select-choices repeat=\"value in values | filter: $select.search\">{{value}}</ui-select-choices>\\n' +\n    '</ui-select>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/type-selection-modal.html',\n    '<div class=\"modal-header\">\\n' +\n    '  <h3 class=\"modal-title\">Select Type</h3>\\n' +\n    '</div>\\n' +\n    '<div class=\"modal-body\">\\n' +\n    '  <table class=\"table table-striped\">\\n' +\n    '    <tr ng-repeat=\"type in types\">\\n' +\n    '      <td>\\n' +\n    '        <type-name name=\"type.typeName\" unlinked></type-name>\\n' +\n    '      </td>\\n' +\n    '      <td class=\"text-right\">\\n' +\n    '        <button class=\"btn btn-default btn-xs\" ng-click=\"selectType($index)\">Select</button>\\n' +\n    '      </td>\\n' +\n    '    </tr>\\n' +\n    '  </table>\\n' +\n    '</div>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-12 text-center\">\\n' +\n    '    <uib-pagination items-per-page=\"pagination.itemsPerPage\" ng-model=\"pagination.page\" total-items=\"pagination.totalItems\"></uib-pagination>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/unit-of-analysis-description.html',\n    '<h5>Type:&nbsp;\\n' +\n    '  <type-name system-index=\"unitOfAnalysis.systemIndex\"\\n' +\n    '             name=\"unitOfAnalysis.typeName\"></type-name>\\n' +\n    '</h5>\\n' +\n    '\\n' +\n    '<h5>Value Mappings:</h5>\\n' +\n    '<div ng-repeat=\"mapping in mappings\">\\n' +\n    '  <span><b>{{$index + 1}}:</b> {{mapping.featureName}}</span><br>\\n' +\n    '  <span ng-if=\"mapping.nestedStructure\">Nested on:</span>\\n' +\n    '  <ul ng-if=\"mapping.nestedStructure\">\\n' +\n    '    <li ng-repeat=\"feature in mapping.nestedStructure\">{{feature}}</li>\\n' +\n    '  </ul>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('nlptabPartials');\n} catch (e) {\n  module = angular.module('nlptabPartials', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('/partials/type_systems_analysis/unit-of-analysis.html',\n    '<h5>System</h5>\\n' +\n    '<p>\\n' +\n    '  <ui-select ng-model=\"unitOfAnalysis.selectedSystem\" theme=\"bootstrap\">\\n' +\n    '    <ui-select-match placeholder=\"System Name\">\\n' +\n    '      <span>{{$select.selected.system}}</span>\\n' +\n    '      <small>{{$select.selected.description}}</small>\\n' +\n    '    </ui-select-match>\\n' +\n    '    <ui-select-choices repeat=\"system in systems | filter: $select.search\">\\n' +\n    '      <span ng-bind-html=\"system.system | highlight: $select.search\"></span>\\n' +\n    '      <small ng-bind-html=\"system.description | highlight: $select.search\"></small>\\n' +\n    '    </ui-select-choices>\\n' +\n    '  </ui-select>\\n' +\n    '</p>\\n' +\n    '\\n' +\n    '<h5>Type</h5>\\n' +\n    '<div class=\"row\">\\n' +\n    '  <div class=\"col-md-10\">\\n' +\n    '    <ui-select ng-model=\"unitOfAnalysis.selectedType\" ng-disabled=\"!unitOfAnalysis.selectedSystem\">\\n' +\n    '      <ui-select-match placeholder=\"Type Name\">\\n' +\n    '        <span>{{$select.selected.typeShortName}}</span>\\n' +\n    '      </ui-select-match>\\n' +\n    '      <ui-select-choices max-size=\"30\"\\n' +\n    '                         repeat=\"uimaType in types\"\\n' +\n    '                         refresh=\"fetchTypes($select.search)\"\\n' +\n    '                         refresh-delay=\"0\">\\n' +\n    '        <span ng-bind-html=\"uimaType.typeShortName | highlight: $select.search\"></span>\\n' +\n    '      </ui-select-choices>\\n' +\n    '    </ui-select>\\n' +\n    '  </div>\\n' +\n    '  <div class=\"col-md-2 text-right\">\\n' +\n    '    <button class=\"btn btn-default btn-sm\" ng-click=\"openTypeSelection()\"><span class=\"glyphicon glyphicon-list\"></span>\\n' +\n    '    </button>\\n' +\n    '  </div>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<h5 ng-if=\"unitOfAnalysis.selectedType\">Tree</h5>\\n' +\n    '<table ng-if=\"unitOfAnalysis.selectedType\" class=\"table table-striped\">\\n' +\n    '  <tbody>\\n' +\n    '  <tr ng-repeat=\"item in tree\">\\n' +\n    '    <td>\\n' +\n    '      <div class=\"row\">\\n' +\n    '\\n' +\n    '        <div ng-class=\"item.class\">\\n' +\n    '          {{item.feature.shortName}} <span ng-if=\"item.subclass\">on <type-name name=\"item.onType\"\\n' +\n    '                                                                               system-index=\"unitOfAnalysis.selectedSystem.systemIndex\"></type-name> </span>\\n' +\n    '          <a ng-if=\"item.primitive\"\\n' +\n    '             ng-click=\"examples($index)\">Examples</a><br>\\n' +\n    '          <small>\\n' +\n    '            <type-name name=\"item.feature.valueType\" unlinked>\\n' +\n    '          </small>\\n' +\n    '        </div>\\n' +\n    '      </div>\\n' +\n    '    </td>\\n' +\n    '    <td class=\"text-right\">\\n' +\n    '      <button ng-if=\"item.primitive\" class=\"btn btn-success btn-xs\" ng-click=\"addFeature($index)\">\\n' +\n    '        Select Feature\\n' +\n    '      </button>\\n' +\n    '      <button ng-if=\"item.primitive && item.level == 0 && !item.collection\" class=\"btn btn-success btn-xs\" ng-click=\"addFilter($index)\">\\n' +\n    '        Add Filter\\n' +\n    '      </button>\\n' +\n    '      <button ng-if=\"!item.sofa && !item.primitive && !item.expanded\" class=\"btn btn-primary btn-xs\"\\n' +\n    '              ng-click=\"expandItem($index)\"><span class=\"glyphicon glyphicon-chevron-right\"></span></button>\\n' +\n    '      <button ng-if=\"!item.sofa && !item.primitive && item.expanded\" class=\"btn btn-primary btn-xs\"\\n' +\n    '              ng-click=\"collapseItem($index)\"><span class=\"glyphicon glyphicon-chevron-down\"></span></button>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '  </tbody>\\n' +\n    '</table>\\n' +\n    '\\n' +\n    '<h5 ng-if=\"unitOfAnalysis.filters.length\">Filters</h5>\\n' +\n    '<table ng-if=\"unitOfAnalysis.filters.length\" class=\"table table-striped\">\\n' +\n    '  <tbody>\\n' +\n    '  <tr ng-repeat=\"filter in unitOfAnalysis.filters\">\\n' +\n    '    <td>\\n' +\n    '      <b>Feature:</b>\\n' +\n    '      <feature-on feature-name=\"filter.feature.name\"></feature-on>\\n' +\n    '      <br>\\n' +\n    '      <div ng-if=\"filter.nestedStructure.length > 0\">\\n' +\n    '        <b>On Nested Structure:</b>\\n' +\n    '        <ul>\\n' +\n    '          <li ng-repeat=\"nestedItem in filter.nestedStructure\">\\n' +\n    '            <feature-on feature-name=\"nestedItem\"></feature-on>\\n' +\n    '          </li>\\n' +\n    '        </ul>\\n' +\n    '      </div>\\n' +\n    '      <label for=\"filterOptions\">Test: </label>\\n' +\n    '      <select id=\"filterOptions\" class=\"form-control\" ng-model=\"filter.option\">\\n' +\n    '        <option ng-repeat=\"option in filterOptions\">{{option}}</option>\\n' +\n    '      </select>\\n' +\n    '      <label for=\"filterValue\">Value: </label>\\n' +\n    '      <input id=\"filterValue\" type=\"text\" ng-model=\"filter.value\">\\n' +\n    '    </td>\\n' +\n    '    <td class=\"text-right\">\\n' +\n    '      <button class=\"btn btn-danger btn-xs\" ng-click=\"deleteFilter($index)\">\\n' +\n    '        <span class=\"glyphicon glyphicon-minus\"></span>\\n' +\n    '      </button>\\n' +\n    '    </td>\\n' +\n    '  </tr>\\n' +\n    '  </tbody>\\n' +\n    '</table>\\n' +\n    '');\n}]);\n})();\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .controller('DocumentSearchExploreCtrl', [\"$scope\", \"$routeParams\", \"$location\", \"$q\", \"sofa\", \"systems\", function ($scope, $routeParams, $location, $q, sofa, systems) {\n        // scope properties\n        var indexes = systems.casProcessingIndexes.map(function (obj) {\n            return obj.index;\n        });\n        $scope.sofaIdentifier = $routeParams.sofaIdentifier;\n        $scope.sofaText = sofa.text;\n        $scope.textSpan = {\n            begin: +$routeParams.begin,\n            end: +$routeParams.end || $scope.sofaText.length\n        };\n\n        $scope.searchingAnnotatations = false;\n\n        var updateRanges = function () {\n            $scope.highlightedRange = {\n                outer: $scope.textSpan\n            };\n            if ($scope.selectedAnnotationLocation) {\n                $scope.highlightedRange.inner = {\n                    begin: $scope.selectedAnnotationLocation.begin,\n                    end: $scope.selectedAnnotationLocation.end\n                };\n            } else {\n                $scope.highlightedRange.inner = {\n                    begin: $scope.textSpan.begin,\n                    end: $scope.textSpan.begin\n                };\n            }\n        };\n\n        $scope.$watch('textSpan', function () {\n            if ($scope.selectedAnnotationLocation &&\n                $scope.textSpan.begin >= $scope.selectedAnnotationLocation.begin) {\n                delete $scope.selectedAnnotationLocation;\n            }\n            if ($scope.selectedAnnotationLocation &&\n                $scope.textSpan.end <= $scope.selectedAnnotationLocation.end) {\n                delete $scope.selectedAnnotationLocation;\n            }\n            $location.search('begin', $scope.textSpan.begin).replace();\n            $location.search('end', $scope.textSpan.end).replace();\n            updateRanges();\n        }, true);\n\n        $scope.selectTypeInSystem = function (typeInSystem, index) {\n            if ($scope.selectedTypeInSystem === typeInSystem) {\n                $scope.clearSelectedTypeInSystem();\n            } else {\n                $scope.selectedTypeInSystem = typeInSystem;\n                $location.search('tindex', index).replace();\n            }\n        };\n\n        $scope.clearSelectedTypeInSystem = function () {\n            delete $scope.selectedAnnotationLocation;\n            updateRanges();\n            delete $scope.selectedTypeInSystem;\n            $location.search('tindex', null).replace();\n        };\n\n        $scope.selectAnnotationLocation = function (annotationLocation) {\n            $scope.selectedAnnotationLocation = annotationLocation;\n            updateRanges();\n        };\n\n        $scope.clearSelectedText = function () {\n            $scope.textSpan.begin = 0;\n            $scope.textSpan.end = 0;\n        };\n\n        $scope.checkSelectedText = function () {\n            var selection = window.getSelection();\n            var range = selection.getRangeAt(0);\n            $scope.textSpan.begin = range.startOffset;\n            $scope.textSpan.end = range.endOffset;\n            selection.removeAllRanges();\n        };\n\n        updateRanges();\n    }]);\n\n},{}],3:[function(require,module,exports){\n'use strict';\nangular.module('nlptabApp')\n    .controller('DocumentSearchCtrl', [\"$scope\", \"$routeParams\", \"$location\", \"Sofa\", \"nlptabConfig\", function ($scope, $routeParams, $location, Sofa, nlptabConfig) {\n        $scope.pagination = {page: 1, itemsPerPage: 3};\n\n        $scope.queryString = $routeParams.q || '';\n        $scope.fetching = false;\n\n        var escape = new RegExp(/([\\-\\&\\|!\\(\\){}\\[\\]\\^~*?:\\\\\\+])/g);\n        var remove = new RegExp(/([\"\\'])/g);\n\n        var fetchSofas = function () {\n            var removed = $scope.queryString.replace(remove, '');\n            var queryString = removed.replace(escape, '\\\\$1');\n            $location.search('q', $scope.queryString).replace();\n            var from = ($scope.pagination.page - 1) * $scope.pagination.itemsPerPage;\n            $scope.fetching = true;\n            Sofa.containingPhraseInText(nlptabConfig.instanceName + 'search', queryString, from, $scope.pagination.itemsPerPage)\n                .then(function (result) {\n                    $scope.pagination.totalItems = result.total;\n\n                    var ranges = [];\n                    for (var i = 0; i < result.sofas.length; i++) {\n                        var sofa = result.sofas[i];\n                        var idx = sofa.text.toLowerCase().indexOf(removed.toLowerCase());\n                        var end = idx + removed.length;\n                        var range = { inner: { begin: idx, end: idx }, outer: { begin: idx, end: end } };\n                        ranges.push(range);\n                    }\n                    $scope.sofas = result.sofas;\n                    $scope.ranges = ranges;\n                    $scope.fetching = false;\n                });\n        };\n\n        $scope.$watch('queryString', function (newVal, oldVal) {\n            if (newVal !== oldVal) {\n                fetchSofas();\n            }\n        });\n\n        $scope.$watch('pagination.page', function (newVal, oldVal) {\n            if (newVal !== oldVal) {\n                fetchSofas();\n            }\n        });\n\n        fetchSofas($scope.queryString);\n    }]);\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('examplesInSpan', function () {\n    return {\n      templateUrl: '../../../partials/annotation_analysis/examples-in-span.html',\n      restrict: 'E',\n      controller: [\"$scope\", \"FeatureStructure\", function ($scope, FeatureStructure) {\n        $scope.pagination = {\n          page: 1,\n          itemsPerPage: 1\n        };\n\n        var fetchAssociatedFeatureStructure = function () {\n          if ($scope.selectedTypeInSystem) {\n            FeatureStructure.withTypeInSystemAtLocation($scope.selectedTypeInSystem.type,\n              $scope.selectedTypeInSystem.systemIndex, $scope.sofaIdentifier, $scope.textSpan.begin,\n              $scope.textSpan.end, $scope.textSpan.begin, $scope.textSpan.end, $scope.pagination.page)\n              .then(function (result) {\n                $scope.pagination.totalItems = result.totalItems;\n\n                $scope.featureStructure = result.featureStructure;\n\n                $scope.selectAnnotationLocation(result.featureStructure.primaryLocation);\n              });\n          }\n        };\n\n\n        $scope.$watch('pagination.page', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            fetchAssociatedFeatureStructure();\n          }\n        });\n\n        $scope.$watch('selectedTypeInSystem', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            $scope.pagination.page = 1;\n            fetchAssociatedFeatureStructure();\n          }\n        });\n\n        fetchAssociatedFeatureStructure();\n      }]\n    };\n  });\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('fsTypesInSpanTable', function () {\n    return {\n      templateUrl: '../../../partials/annotation_analysis/fs-types-in-span-table.html',\n      restrict: 'E',\n      controller: [\"$scope\", \"$routeParams\", \"$location\", \"FeatureStructure\", \"CasProcessingIndex\", function ($scope, $routeParams, $location, FeatureStructure, CasProcessingIndex) {\n        $scope.pagination = {\n          page: 1,\n          itemsPerPage: 8\n        };\n\n        $scope.fetching = false;\n\n        var restorationPage = $routeParams.tpage;\n        var restorationTypeIndex = $routeParams.tindex;\n\n        var fetchAssociatedFsTypes = function () {\n          $scope.fetching = true;\n          CasProcessingIndex.all(0, 20).then(function (result) {\n            var indexes = result.casProcessingIndexes.map(function (currentValue) {\n              return currentValue.index;\n            });\n            FeatureStructure.getTypesInRange(indexes, $scope.sofaIdentifier, $scope.textSpan.begin,\n              $scope.textSpan.end)\n              .then(function (result) {\n                $scope.pagination.totalItems = result.length;\n                $scope.typeInSystems = result;\n                if (restorationPage) {\n                  $scope.pagination.page = restorationPage;\n                  restorationPage = null;\n                }\n                if (restorationTypeIndex) {\n                  $scope.selectTypeInSystem($scope.typeInSystems[restorationTypeIndex],\n                    restorationTypeIndex);\n                  restorationTypeIndex = null;\n                }\n                $scope.fetching = false;\n              });\n          });\n        };\n\n        $scope.$watch('textSpan', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            fetchAssociatedFsTypes();\n          }\n        }, true);\n\n        $scope.$watch('pagination.page', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            $scope.from = ($scope.pagination.page - 1) * $scope.pagination.itemsPerPage;\n            $location.search('tpage', $scope.pagination.page).replace();\n            if ($scope.selectedTypeInSystem) {\n              var index = $scope.typeInSystems.indexOf($scope.selectedTypeInSystem);\n              if (index < $scope.from || index >= $scope.from + $scope.pagination.itemsPerPage) {\n                $scope.clearSelectedTypeInSystem();\n              }\n            }\n          }\n        });\n\n        fetchAssociatedFsTypes();\n      }]\n    };\n  });\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .directive('spanEditor', function () {\n        return {\n            templateUrl: '../../../partials/annotation_analysis/span-editor.html',\n            restrict: 'E',\n            transclude: true,\n            scope: {\n                min: '=',\n                max: '=',\n                value: '='\n            },\n            link: function postLink(scope) {\n                scope.canDecrement = function () {\n                    return scope.value > scope.min;\n                };\n                scope.decrement = function () {\n                    scope.value--;\n                };\n                scope.canIncrement = function () {\n                    return scope.value < scope.max;\n                };\n                scope.increment = function () {\n                    scope.value++;\n                };\n            }\n        };\n    });\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nrequire('./controllers/document-search');\nrequire('./controllers/document-search-explore');\nrequire('./directives/examples-in-span');\nrequire('./directives/fs-types-in-span-table');\nrequire('./directives/span-editor');\n\n},{\"./controllers/document-search\":3,\"./controllers/document-search-explore\":2,\"./directives/examples-in-span\":4,\"./directives/fs-types-in-span-table\":5,\"./directives/span-editor\":6}],8:[function(require,module,exports){\n'use strict';\n\nrequire('../dist/templateCachePartials');\n\nvar deps = ['ngRoute', 'elasticsearch', 'ui.bootstrap', 'ui.select', 'ngSanitize', 'ngFileUpload', 'nlptabPartials'];\n\nangular.module('nlptabApp', deps)\n  .config([\"$routeProvider\", \"nlptabConfig\", function ($routeProvider, nlptabConfig) {\n    $routeProvider.when('/main', {\n      templateUrl: function () {\n        if (nlptabConfig.isBio) {\n          return '/partials/common/bio-main.html';\n        } else {\n          return '/partials/common/main.html';\n        }\n      },\n      reloadOnSearch: false\n    }).when('/analysis', {\n      templateUrl: '/partials/type_systems_analysis/analysis.html',\n      controller: 'AnalysisCtrl',\n      reloadOnSearch: false\n    }).when('/analysis-results', {\n      templateUrl: '/partials/type_systems_analysis/analysis-results.html',\n      controller: 'AnalysisResultsCtrl',\n      reloadOnSearch: false\n    }).when('/analysis-results-explore/:matchCountsId', {\n      templateUrl: '/partials/type_systems_analysis/analysis-results-explore.html',\n      controller: 'AnalysisResultsExploreCtrl',\n      reloadOnSearch: false,\n      resolve: {\n        matchCounts: [\"MatchCounts\", \"$route\", function (MatchCounts, $route) {\n          return MatchCounts.withId($route.current.params.matchCountsId);\n        }]\n      }\n    }).when('/analysis-progress/:analysisId', {\n      templateUrl: '/partials/type_systems_analysis/analysis-progress.html',\n      controller: 'AnalysisProgressCtrl',\n      reloadOnSearch: false\n    }).when('/analysis-builder', {\n      templateUrl: '/partials/type_systems_analysis/analysis-builder.html',\n      controller: 'AnalysisBuilderCtrl',\n      reloadOnSearch: false\n    }).when('/document-search', {\n      templateUrl: '/partials/annotation_analysis/document-search.html',\n      controller: 'DocumentSearchCtrl',\n      reloadOnSearch: false\n    }).when('/document-search/explore/:sofaIdentifier', {\n      templateUrl: '/partials/annotation_analysis/document-search-explore.html',\n      controller: 'DocumentSearchExploreCtrl',\n      reloadOnSearch: false,\n      resolve: {\n        sofa: [\"$route\", \"Sofa\", function ($route, Sofa) {\n          return Sofa.withSofaIdentifier(nlptabConfig.instanceName + 'search', $route.current.params.sofaIdentifier);\n        }],\n        systems: [\"CasProcessingIndex\", function (CasProcessingIndex) {\n          return CasProcessingIndex.all(0, 40);\n        }]\n      }\n    }).when('/type-systems', {\n      templateUrl: '/partials/systems/systems-list.html',\n      controller: 'SystemsListCtrl',\n      reloadOnSearch: false\n    }).when('/system/:systemIndex', {\n      templateUrl: '/partials/systems/system.html',\n      controller: 'SystemCtrl',\n      reloadOnSearch: false,\n      resolve: {\n        system: [\"$route\", \"CasProcessingIndex\", function ($route, CasProcessingIndex) {\n          return CasProcessingIndex.withIndexName($route.current.params.systemIndex);\n        }]\n      }\n    }).when('/system-builder', {\n      templateUrl: '/partials/systems/system-builder.html',\n      controller: 'SystemBuilderCtrl',\n      reloadOnSearch: false\n    }).when('/system-task-progress/:index', {\n      templateUrl: '/partials/systems/system-task-progress.html',\n      controller: 'SystemTaskProgressCtrl',\n      reloadOnSearch: false\n    }).otherwise({\n      redirectTo: '/main'\n    });\n  }]);\n\nrequire('./annotation_analysis/index');\nrequire('./common/index');\nrequire('./systems/index');\nrequire('./type_system_analysis/index');\n\n},{\"../dist/templateCachePartials\":1,\"./annotation_analysis/index\":7,\"./common/index\":24,\"./systems/index\":46,\"./type_system_analysis/index\":65}],9:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('FsInstanceModalCtrl',\n    /**\n     * Controller for a feature structure instance info modal.\n     *\n     * @param {$rootScope.Scope} $scope angular scope injected.\n     * @param {object} $modalInstance injected modal instance.\n     * @param {FeatureStructure} FeatureStructure injected feature structure service.\n     * @param {string} fsId resolved argument for the\n     * @param {string} systemIndex resolved argument for the system index.\n     */\n    [\"$scope\", \"$modalInstance\", \"FeatureStructure\", \"fsId\", \"systemIndex\", function ($scope, $modalInstance, FeatureStructure, fsId, systemIndex) {\n      /**\n       * Scope property for the system index.\n       *\n       * @type {string} system index\n       */\n      $scope.systemIndex = systemIndex;\n\n      FeatureStructure.withId(fsId, systemIndex).then(function (result) {\n        $scope.featureStructure = result;\n      });\n\n      /**\n       * Scope function for dismissing the modal.\n       */\n      $scope.done = function () {\n        $modalInstance.dismiss('done');\n      };\n    }]);\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .directive('activityIndicator', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, elem, attrs) {\n                var opts = {\n                    lines: attrs.spinnerLines || 9, // The number of lines to draw\n                    length: attrs.spinnerLength || 4, // The length of each line\n                    width: attrs.spinnerWidth || 2, // The line thickness\n                    radius: attrs.spinnerRadius || 4, // The radius of the inner circle\n                    corners: attrs.spinnerCorners || 1, // Corner roundness (0..1)\n                    rotate: attrs.spinnerRotate || 23, // The rotation offset\n                    direction: attrs.spinnerDirection || 1, // 1: clockwise, -1: counterclockwise\n                    color: attrs.spinnerColor || '#000', // #rgb or #rrggbb or array of colors\n                    speed: attrs.spinnerSpeed || 1, // Rounds per second\n                    trail: attrs.spinnerTrail || 60, // Afterglow percentage\n                    shadow: false, // Whether to render a shadow\n                    hwaccel: false, // Whether to use hardware acceleration\n                    className: 'spinner', // The CSS class to assign to the spinner\n                    zIndex: 2e9, // The z-index (defaults to 2000000000)\n                    top: '50%', // Top position relative to parent\n                    left: '50%' // Left position relative to parent\n                };\n                var spinner = new Spinner(opts).spin();\n                var obj = elem.get(0);\n                obj.style.width = (opts.length + opts.radius) * 2 + '2px';\n                obj.style.height = (opts.length + opts.radius) * 2 + '2px';\n                obj.style.position = 'relative';\n                obj.appendChild(spinner.el);\n            }\n        };\n    });\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('annotationFromSofa', function () {\n    return {\n      controller: [\"$scope\", \"FeatureStructure\", \"Sofa\", \"nlptabConfig\", function ($scope, FeatureStructure, Sofa, nlptabConfig) {\n        $scope.$watch('featureStructure._id', function (newValue) {\n          if (newValue) {\n            Sofa.withSofaIdentifier(nlptabConfig.instanceName + 'search', $scope.featureStructure.documentIdentifier)\n              .then(function (sofa) {\n                var minDistance;\n                var documentLocations = $scope.featureStructure.documentLocations;\n                if (!documentLocations) {\n                  return;\n                }\n                for (var i=0; i<documentLocations.length; i++) {\n                  if (!minDistance || minDistance.distance > documentLocations[i].distance) {\n                    minDistance = documentLocations[i];\n                  }\n                }\n\n                var sofaText = sofa.text;\n\n                var substringStart = window.Math.max(0, minDistance.begin - 80);\n                var substringEnd = window.Math.min(sofaText.length, minDistance.end + 80);\n\n                $scope.preText = sofaText.substring(substringStart, minDistance.begin);\n                if (substringStart !== 0) {\n                  $scope.preText = '... ' + $scope.preText;\n                }\n                $scope.annotationText = sofaText.substring(minDistance.begin, minDistance.end);\n                $scope.postText = sofaText.substring(minDistance.end, substringEnd);\n                if (substringEnd !== sofaText.length) {\n                  $scope.postText = $scope.postText + ' ...';\n                }\n              });\n          }\n        });\n      }],\n      restrict: 'E',\n      scope: {\n        featureStructure: '='\n      },\n      templateUrl: '/partials/common/annotation-from-sofa.html'\n    };\n  });\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .directive('featureName', function () {\n        return {\n            template: function (element, attrs) {\n                //if (typeof attrs.unlinked !== 'undefined') {\n                    return '<span tooltip=\"{{name}}\">{{shortenedName}}</span>';\n                //} else {\n                 //   return '<a ng-href=\"{{url}}\" tooltip=\"{{name}}\">{{shortenedName}}</a>';\n                //}\n            },\n            restrict: 'E',\n            scope: {\n                name: '=',\n                systemIndex: '='\n            },\n            link: function postLink(scope) {\n                if (scope.name) {\n                    var splits = scope.name.split(';');\n                    scope.shortenedName = splits[1];\n                    var type = splits[0].replace(/_/g, '.');\n                    if (scope.systemIndex) {\n                        scope.url = '#/system/' + scope.systemIndex + '?type=' + type + '&feature=' + scope.shortenedName;\n                    }\n                }\n            }\n        };\n    });\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('featureValues', [\"FeatureStructure\", function (FeatureStructure) {\n    return {\n      templateUrl: '/partials/common/feature-values.html',\n      restrict: 'E',\n      scope: {\n        systemIndex: '=',\n        type: '=',\n        feature: '='\n      },\n      link: function postLink(scope) {\n        var fetch = function () {\n          FeatureStructure.termsAndMissingForFeature(scope.systemIndex, scope.type,\n            FeatureStructure.mapToEsFeature(scope.feature)).then(function (result) {\n              scope.values = result.values;\n              scope.count = result.count;\n            });\n        };\n\n        fetch();\n      }\n    };\n  }]);\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .directive('fsInstanceId', function () {\n        return {\n            template: '<a ng-if=\"fsId\" ng-click=\"open()\">{{fsId}} <span class=\"glyphicon glyphicon-new-window\"></span></a>' +\n                '<span ng-if=\"!fsId\">null</span>',\n            scope: {\n                fsId: '=',\n                systemIndex: '='\n            },\n            restrict: 'E',\n            controller: [\"$scope\", \"$modal\", function ($scope, $modal) {\n                $scope.open = function () {\n                    if ($scope.fsId) {\n                        $modal.open({\n                            templateUrl: '/partials/common/fs-instance-modal.html',\n                            controller: 'FsInstanceModalCtrl',\n                            size: 'lg',\n                            resolve: {\n                                fsId: function () {\n                                    return $scope.fsId;\n                                },\n                                systemIndex: function () {\n                                    return $scope.systemIndex;\n                                }\n                            }\n                        });\n                    }\n                };\n            }]\n        };\n    });\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('fsInstanceInfo',\n    /**\n     * fs-instance-info element directive, creates an interface for viewing the feature values and\n     *\n     * @returns {{templateUrl: string, restrict: string, scope: {featureStructure: string}, link: fsInstanceInfo.link}}\n     */\n    function () {\n      return {\n        templateUrl: '/partials/common/fs-instance-info.html',\n        restrict: 'E',\n        scope: {\n          featureStructure: '='\n        },\n        /**\n         * Linking function for the fsInstanceInfoDirective.\n         *\n         * @param {$rootScope.Scope} scope\n         */\n        link: function (scope) {\n          /**\n           * Scope function that returns true if the object is empty.\n           *\n           * @param object javascript object\n           * @returns {boolean|*}\n           */\n          scope.isEmpty = function (object) {\n            return angular.equals(object, {});\n          };\n        }\n      };\n    });\n\n},{}],16:[function(require,module,exports){\n'use strict';\nangular.module('nlptabApp')\n    .directive('highlightedText', function () {\n        return {\n            restrict: 'E',\n            scope: {\n                range: '=range',\n                text: '=text'\n            },\n            link: function (scope) {\n                var redraw = function (text) {\n                    if (text) {\n                        scope.pre = text.substring(0, scope.range.outer.begin);\n                        scope.preOuter = text.substring(scope.range.outer.begin, scope.range.inner.begin);\n                        scope.highlighted = text.substring(scope.range.inner.begin, scope.range.inner.end);\n                        scope.postOuter = text.substring(scope.range.inner.end, scope.range.outer.end);\n                        scope.post = text.substring(scope.range.outer.end, scope.text.length);\n                    }\n                };\n\n                scope.$watch('text', function (text) {\n                    redraw(text);\n                });\n\n                scope.$watch('range.outer', function () {\n                    redraw(scope.text);\n                });\n\n                scope.$watch('range.inner', function () {\n                    redraw(scope.text);\n                });\n            },\n            template: '<p class=\"document-text\">{{pre}}<span class=\"annotation\">{{preOuter}}</span>' +\n                '<span class=\"annotationInset\">{{highlighted}}</span>' +\n                '<span class=\"annotation\">{{postOuter}}</span>{{post}}</p>'\n        };\n    });\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nrequire('./activity-indicator');\nrequire('./annotation-from-sofa');\nrequire('./feature-name');\nrequire('./feature-values');\nrequire('./fs-instance-id');\nrequire('./fs-instance-info');\nrequire('./highlighted-text');\nrequire('./navbar');\nrequire('./navbar-link');\nrequire('./potential-cui');\nrequire('./system-name');\nrequire('./type-name');\n\n},{\"./activity-indicator\":10,\"./annotation-from-sofa\":11,\"./feature-name\":12,\"./feature-values\":13,\"./fs-instance-id\":14,\"./fs-instance-info\":15,\"./highlighted-text\":16,\"./navbar\":19,\"./navbar-link\":18,\"./potential-cui\":20,\"./system-name\":21,\"./type-name\":22}],18:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .directive('navbarLink', function () {\n        return {\n            restrict: 'A',\n            require: '^navbar',\n            link: function postLink(scope, element, attrs, navbarCtrl) {\n                if (attrs.navbarLink === navbarCtrl.selectedLink) {\n                    element.addClass('active');\n                }\n            }\n        };\n    });\n\n},{}],19:[function(require,module,exports){\n'use strict';\nangular.module('nlptabApp')\n    .directive('navbar', function () {\n        return {\n            restrict: 'E',\n            templateUrl: '/partials/common/navbar.html',\n            scope: {\n                selectedLink: '='\n            },\n            controller: [\"$scope\", function navbarCtrl($scope) {\n                if ($scope.selectedLink) {\n                    this.selectedLink = $scope.selectedLink;\n                }\n            }]\n        };\n    });\n\n},{}],20:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('potentialCui',\n    /**\n     * potential-cui element directive. Links to the UMLS Metathesarus browser if a cui matches a\n     *\n     * @returns {{template: string, restrict: string, scope: {value: string}, controller: potentialCui.controller}}\n     */\n    function () {\n      /**\n       * Pattern for a UMLS CUI.\n       *\n       * @type {RegExp}\n       */\n      var cui = /C[0-9]{7}/;\n\n      return {\n        template: '<span ng-if=\"!isCui\">{{value}}</span><a ng-if=\"isCui\" href=\"https://uts.nlm.nih.gov/metathesaurus.html;#{{value}};0;1;CUI;2015AA;EXACT_MATCH;*;\" target=\"_blank\">{{value}}</a>',\n        restrict: 'E',\n        scope: {\n          value: '='\n        },\n        /**\n         * Linking function for the is-cui directive.\n         *\n         * @param {$rootScope.Scope} scope angular scope\n         */\n        link: function (scope) {\n          /**\n           * Scope property, true if the value is a cui, false otherwise.\n           *\n           * @type {boolean}\n           */\n          scope.isCui = cui.test(scope.value);\n        }\n      };\n    });\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('systemName', function () {\n    return {\n      template: function (element, attrs) {\n        if (typeof  attrs.unlinked !== 'undefined') {\n          return '<span>{{systemName}}</span>';\n        } else {\n          return '<a ng-href=\"{{url}}\">{{systemName}}</a>';\n        }\n      },\n      restrict: 'E',\n      scope: {\n        systemIndex: '='\n      },\n      controller: [\"$scope\", \"CasProcessingIndex\", function ($scope, CasProcessingIndex) {\n        if ($scope.systemIndex) {\n          $scope.url = '#/system/' + $scope.systemIndex;\n          CasProcessingIndex.getSystemNameForIndex($scope.systemIndex).then(function (result) {\n            $scope.systemName = result;\n          });\n        }\n      }]\n    };\n  });\n\n},{}],22:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('typeName', function () {\n    return {\n      template: function (element, attrs) {\n        if (typeof attrs.unlinked !== 'undefined') {\n          return '<span tooltip=\"{{name}}\">{{shortenedName}}</span>';\n        } else {\n          return '<a ng-href=\"{{url}}\" tooltip=\"{{name}}\">{{shortenedName}}</a>';\n        }\n      },\n      restrict: 'E',\n      scope: {\n        name: '=',\n        systemIndex: '='\n      },\n      link: function postLink(scope) {\n        scope.$watch('name', function (name) {\n          if (name) {\n            var splits = name.split('.');\n            scope.shortenedName = splits[splits.length - 1];\n            if (/\\[\\]$/.test(scope.shortenedName)) {\n              scope.shortenedName = scope.shortenedName.replace(/\\[\\]$/, '');\n              scope.shortenedName = 'Array of ' + scope.shortenedName;\n              scope.name = name.replace(/\\[\\]$/, '');\n            }\n            if (scope.systemIndex) {\n              scope.url = '#/system/' + scope.systemIndex + '?type=' + scope.name + '&info';\n            }\n          }\n        });\n      }\n    };\n  });\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .filter('startAt', function () {\n        return function(input, index) {\n            index = +index;\n            return input && input.slice(index);\n        };\n    });\n\n},{}],24:[function(require,module,exports){\n'use strict';\n\nrequire('./controller/fs-instance-modal');\nrequire('./directives/index');\nrequire('./filters/start-at');\nrequire('./services/index');\n\n},{\"./controller/fs-instance-modal\":9,\"./directives/index\":17,\"./filters/start-at\":23,\"./services/index\":28}],25:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .service('CasProcessingIndex', [\"Es\", \"$q\", \"nlptabConfig\", \"$http\", function CasProcessingIndex(Es, $q, nlptabConfig, $http) {\n    var systemNameCache = {};\n\n    this.getSystemNameForIndex = function (indexName) {\n      var deferred = $q.defer();\n      var systemName = systemNameCache[indexName];\n      if (!systemName) {\n        this.withIndexName(indexName).then(function (casProcessingIndex) {\n          systemName = casProcessingIndex.system;\n          systemNameCache[indexName] = systemName;\n          deferred.resolve(systemName);\n        }, function (error) {\n          deferred.reject(error);\n        });\n      } else {\n        deferred.resolve(systemName);\n      }\n      return deferred.promise;\n    };\n\n    this.withIndexName = function (indexName) {\n      return Es.search({\n        index: nlptabConfig.instanceName + 'metadata',\n        type: 'SystemIndex',\n        body: {\n          size: 1,\n          query: {\n            match: {\n              index: indexName\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits && body.hits.hits.length > 0) {\n          return body.hits.hits[0]._source;\n        } else {\n          return {};\n        }\n      });\n    };\n\n    this.search = function (query, size) {\n      return Es.search({\n        index: nlptabConfig.instanceName + 'metadata',\n        type: 'SystemIndex',\n        body: {\n          from: 0,\n          size: size,\n          query: {\n            multi_match: {\n              query: query,\n              type: 'cross_fields',\n              operator: 'and',\n              fields: ['system', 'description']\n            }\n          }\n        }\n      });\n    };\n\n    this.all = function () {\n      return Es.search({\n        index: nlptabConfig.instanceName + 'metadata',\n        type: 'SystemIndex',\n        body: {\n          from: 0,\n          size: 30,\n          query: {\n            term: {\n              ready: true\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits) {\n          return {total: body.hits.total, casProcessingIndexes: body.hits.hits.map(function (currentValue) {\n            return currentValue._source;\n          })};\n        } else {\n          return {total: 0, casProcessingIndexes: []};\n        }\n      });\n    };\n\n    this.deleteSystem = function (system) {\n      return $http.post(nlptabConfig.esPath + '/_nlptab-deletesystem?instance=' + nlptabConfig.instanceName + '&id=' + system);\n    };\n  }]);\n\n},{}],26:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp').\n    service('Es', [\"esFactory\", \"$location\", \"nlptabConfig\", function Es(esFactory, $location, nlptabConfig) {\n        return esFactory({\n            host: nlptabConfig.esServer\n        });\n    }]);\n\n},{}],27:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp').service('FeatureStructure',\n  /**\n   * @class nlptabApp.common.FeatureStructure\n   * @description service for fetching feature structures from elasticsearch.\n   * @param $q angular promises service.\n   * @param Es elasticsearch service\n   * @constructor\n   */\n  [\"$q\", \"Es\", function FeatureStructure($q, Es) {\n    function mapSources(body) {\n      return body.hits.hits.map(function (currentValue) {\n        return angular.extend(currentValue._source, {\n          '_index': currentValue._index,\n          '_id': currentValue._id\n        });\n      });\n    }\n\n    this.withId = function (fsId, systemIndex) {\n      var search = {};\n\n      if (systemIndex) {\n        search.index = systemIndex;\n      }\n\n      search.type = 'FeatureStructure';\n      search.body = {\n        query: {\n          ids: {\n            values: [\n              fsId\n            ]\n          }\n        },\n        size: 1\n      };\n\n      var deferred = $q.defer();\n      Es.search(search).then(function (body) {\n        if (body && body.hits && body.hits.hits && body.hits.hits.length > 0) {\n          deferred.resolve(angular.extend(body.hits.hits[0]._source, {\n            _index: body.hits.hits[0]._index,\n            _id: body.hits.hits[0]._id\n          }));\n        } else {\n          deferred.resolve(null);\n        }\n\n      });\n      return deferred.promise;\n    };\n\n    this.ofType = function (index, type, from, size) {\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: size,\n          from: from,\n          query: {\n            match: {\n              'types': type\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits) {\n          return {total: body.hits.total, featureStructures: mapSources(body)};\n        } else {\n          return $q.reject();\n        }\n      });\n    };\n\n    this.primaryTypesFor = function (systemIndex, type) {\n      return Es.search({\n        index: systemIndex,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            term: {\n              types: {\n                value: type\n              }\n            }\n          },\n          aggs: {\n            typeNames: {\n              terms: {\n                field: 'primaryType',\n                size: 0,\n                order: {\n                  _term: 'asc'\n                }\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.aggregations && body.aggregations.typeNames && body.aggregations.typeNames.buckets) {\n          return body.aggregations.typeNames.buckets.map(function (val) {\n            return val.key;\n          });\n        } else {\n          return $q.reject();\n        }\n      });\n    };\n\n    /**\n     * @param index\n     * @param type\n     * @param primaryTypes\n     * @param {nlptabApp.common.PaginationInstance} pagination\n     * @returns {*}\n     */\n    this.ofTypeWithoutPrimaryTypes = function (index, type, primaryTypes, pagination) {\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: pagination.getSize(),\n          from: pagination.getFrom(),\n          query: {\n            bool: {\n              must: [\n                {\n                  term: {\n                    types: {\n                      value: type\n                    }\n                  }\n                }\n              ],\n              must_not: [\n                {\n                  terms: {\n                    primaryType: primaryTypes\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits) {\n          pagination.totalItems = body.hits.total;\n          return mapSources(body);\n        } else {\n          return $q.reject();\n        }\n      });\n    };\n\n    this.termsNotIn = function (index, type, feature, terms, size) {\n      var isBoolean = feature.indexOf('booleanFeatures') === 0;\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            bool: {\n              must: [\n                {\n                  term: {\n                    types: type\n                  }\n                }\n              ],\n              must_not: [\n                {\n                  terms: {\n                    feature: terms\n                  }\n                }\n              ]\n            }\n          },\n          aggs: {\n            values: {\n              terms: {\n                field: feature,\n                size: angular.isDefined(size) ? size : 10\n              }\n            },\n            missingValues: {\n              missing: {\n                field: feature\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        var buckets = {};\n        if (body && body.aggregations && body.aggregations.values) {\n          buckets.values = body.aggregations.values.buckets;\n          if (isBoolean) {\n            buckets.values = buckets.values.map(function (bucket) {\n              bucket.key = bucket.key === 'T';\n              return bucket;\n            });\n          }\n        }\n        if (body && body.aggregations && body.aggregations.missingValues) {\n          buckets.missing = body.aggregations.missingValues;\n        }\n        if (body && body.hits) {\n          buckets.count = body.hits.total;\n        }\n        return buckets;\n      });\n    };\n\n    this.termsAndMissingForFeature = function (index, type, feature, size) {\n      var isBoolean = feature.indexOf('booleanFeatures') === 0;\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            term: {\n              types: type\n            }\n          },\n          aggs: {\n            values: {\n              terms: {\n                field: feature,\n                size: angular.isDefined(size) ? size : 10\n              }\n            },\n            missingValues: {\n              missing: {\n                field: feature\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        var buckets = {};\n        if (body && body.aggregations && body.aggregations.values) {\n          buckets.values = body.aggregations.values.buckets;\n          if (isBoolean) {\n            buckets.values = buckets.values.map(function (bucket) {\n              bucket.key = bucket.key === 'T';\n              return bucket;\n            });\n          }\n        }\n        if (body && body.aggregations && body.aggregations.missingValues) {\n          buckets.missing = body.aggregations.missingValues;\n        }\n        if (body && body.hits) {\n          buckets.count = body.hits.total;\n        }\n        return buckets;\n      });\n    };\n\n    this.termsMissingAndCardinalityForFeature = function (index, type, feature, size) {\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            term: {\n              types: type\n            }\n          },\n          aggs: {\n            values: {\n              terms: {\n                field: feature,\n                size: angular.isUndefined(size) ? 10 : size\n              }\n            },\n            missingValues: {\n              missing: {\n                field: feature\n              }\n            },\n            others: {\n              cardinality: {\n                field: feature,\n                precision_threshold: 10000\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        var buckets = {};\n        if (body && body.aggregations && body.aggregations.values) {\n          buckets.values = body.aggregations.values.buckets;\n        }\n        if (body && body.aggregations && body.aggregations.missingValues) {\n          buckets.missing = body.aggregations.missingValues;\n        }\n        if (body && body.aggregations && body.aggregations.others) {\n          buckets.otherUniqueValues = body.aggregations.others;\n        }\n        if (body && body.hits) {\n          buckets.count = body.hits.total;\n        }\n        return buckets;\n      });\n    };\n\n    this.termsMissingCardinalityAndPercentilesForFeature = function (index, type, feature) {\n      var deferred = $q.defer();\n\n      Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            term: {\n              types: type\n            }\n          },\n          aggs: {\n            values: {\n              terms: {\n                field: feature\n              }\n            },\n            missingValues: {\n              missing: {\n                field: feature\n              }\n            },\n            others: {\n              cardinality: {\n                field: feature,\n                precision_threshold: 10000\n              }\n            },\n            percentiles: {\n              percentiles: {\n                field: feature\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        var buckets = {};\n        if (body && body.aggregations && body.aggregations.values) {\n          buckets.values = body.aggregations.values.buckets;\n        }\n        if (body && body.aggregations && body.aggregations.missingValues) {\n          buckets.missing = body.aggregations.missingValues;\n        }\n        if (body && body.aggregations && body.aggregations.others) {\n          buckets.otherUniqueValues = body.aggregations.others;\n        }\n        if (body && body.aggregations && body.aggregations.percentiles) {\n          var percentiles = [];\n          for (var percentile in body.aggregations.percentiles.values) {\n            if (body.aggregations.percentiles.values.hasOwnProperty(percentile)) {\n              percentiles.push({\n                percentile: +percentile,\n                count: body.aggregations.percentiles.values[percentile]\n              });\n            }\n          }\n          buckets.percentiles = percentiles;\n        }\n        if (body && body.hits) {\n          buckets.count = body.hits.total;\n        }\n        deferred.resolve(buckets);\n      });\n      return deferred.promise;\n    };\n\n    this.countTotal = function (index) {\n      var deferred = $q.defer();\n      Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        search_type: 'count'\n      }).then(function (body) {\n        if (body && body.hits) {\n          deferred.resolve(body.hits.total);\n        }\n      });\n      return deferred.promise;\n    };\n\n    this.countOfType = function (index, type) {\n      var deferred = $q.defer();\n      Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        search_type: 'count',\n        body: {\n          query: {\n            term: {\n              types: type\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits) {\n          deferred.resolve(body.hits.total);\n        }\n      });\n      return deferred.promise;\n    };\n\n    this.withTypeInSystemAtLocation = function (type, systemIndex, documentIdentifier, beginMin, beginMax, endMin, endMax, page) {\n      var sBody = {\n        size: 1,\n        from: page - 1,\n        query: {\n          bool: {\n            must: [\n              {\n                term: {\n                  types: type\n                }\n              },\n              {\n                term: {\n                  documentIdentifier: documentIdentifier\n                }\n              },\n              {\n                range: {\n                  'primaryLocation.begin': {\n                    gte: beginMin,\n                    lte: beginMax\n                  }\n                }\n              },\n              {\n                range: {\n                  'primaryLocation.end': {\n                    gte: endMin,\n                    lte: endMax\n                  }\n                }\n              }\n            ]\n          }\n        }\n      };\n      sBody.sort = [\n        {'primaryLocation.begin': 'asc'},\n        {'primaryLocation.end': 'asc'}\n      ];\n\n      var deferred = $q.defer();\n      Es.search({\n        index: systemIndex,\n        type: 'FeatureStructure',\n        body: sBody\n      }).then(function (body) {\n        var featureStructure;\n        var totalItems = 0;\n        if (body && body.hits && body.hits.hits && body.hits.hits.length > 0) {\n          var hit = body.hits.hits[0];\n          featureStructure = hit._source;\n          featureStructure._id = hit._id;\n          totalItems = body.hits.total;\n        }\n        deferred.resolve({totalItems: totalItems, featureStructure: featureStructure});\n      });\n\n      return deferred.promise;\n    };\n\n    this.getTypesInRange = function (indexes, documentIdentifier, begin, end) {\n      var sBody = {\n        size: 0,\n        'query': {\n          bool: {\n            must: [\n              {\n                range: {\n                  'primaryLocation.begin': {\n                    gte: begin,\n                    lte: end\n                  }\n                }\n              },\n              {\n                range: {\n                  'primaryLocation.end': {\n                    gte: begin,\n                    lte: end\n                  }\n                }\n              },\n              {\n                term: {\n                  documentIdentifier: documentIdentifier\n                }\n              }\n            ]\n          }\n        },\n        'aggs': {\n          'systemTerms': {\n            'terms': {\n              'field': 'system',\n              'order': {\n                '_term': 'asc'\n              },\n              'size': 0\n            },\n            'aggs': {\n              'typeTerms': {\n                'terms': {\n                  'field': 'types',\n                  'order': {\n                    '_term': 'asc'\n                  },\n                  'size': 0\n                }\n              }\n            }\n          }\n        }\n      };\n      var deferred = $q.defer();\n      Es.search({\n        index: indexes,\n        type: 'FeatureStructure',\n        search_type: 'count',\n        body: sBody\n      }).then(function (body) {\n        var typeInSystems = [];\n        if (body && body.aggregations && body.aggregations.systemTerms && body.aggregations.systemTerms.buckets) {\n          var systemBuckets = body.aggregations.systemTerms.buckets;\n          for (var i = 0; i < systemBuckets.length; i++) {\n            var systemKey = systemBuckets[i].key;\n            if (systemBuckets[i].typeTerms && systemBuckets[i].typeTerms.buckets) {\n              var typeBuckets = systemBuckets[i].typeTerms.buckets;\n              for (var j = 0; j < typeBuckets.length; j++) {\n                typeInSystems.push({\n                  systemIndex: systemKey,\n                  type: typeBuckets[j].key,\n                  count: typeBuckets[j].doc_count\n                });\n              }\n            }\n          }\n        }\n        deferred.resolve(typeInSystems);\n      }, function (error) {\n        deferred.reject();\n      });\n\n      return deferred.promise;\n    };\n\n    this.inSystemWithType = function (systemIndex, type, pagination) {\n      return Es.search({\n        index: systemIndex,\n        type: 'FeatureStructure',\n        body: {\n          size: pagination.getSize(),\n          from: pagination.getFrom(),\n          query: {\n            term: {\n              types: type\n            }\n          }\n        }\n      }).then(function (result) {\n        return {\n          total: result.hits.total,\n          featureStructures: mapSources(result)\n        };\n      });\n    };\n\n    var featureTypeMap = {\n      'uima.cas.Boolean': 'booleanFeatures',\n      'uima.cas.Byte': 'byteFeatures',\n      'uima.cas.Double': 'doubleFeatures',\n      'uima.cas.Float': 'floatFeatures',\n      'uima.cas.Integer': 'intFeatures',\n      'uima.cas.Long': 'longFeatures',\n      'uima.cas.Short': 'shortFeatures',\n      'uima.cas.String': 'stringFeatures',\n      'uima.cas.BooleanArray': 'BooleanArrayFeatures',\n      'uima.cas.ByteArray': 'ByteArrayFeatures',\n      'uima.cas.ShortArray': 'ShortArrayFeatures',\n      'uima.cas.IntegerArray': 'IntegerArrayFeatures',\n      'uima.cas.LongArray': 'LongArrayFeatures',\n      'uima.cas.FloatArray': 'FloatArrayFeatures',\n      'uima.cas.DoubleArray': 'DoubleArrayFeatures',\n      'uima.cas.StringArray': 'StringArrayFeatures',\n      'uima.cas.FloatList': 'FloatListFeatures',\n      'uima.cas.IntegerList': 'IntegerListFeatures',\n      'uima.cas.StringList': 'StringListFeatures'\n    };\n\n    this.mapToEsFeature = function (feature) {\n      return featureTypeMap[feature.valueType] + '.' + feature.name.replace(/\\./g, '_').replace(':', ';');\n    };\n  }]);\n\n},{}],28:[function(require,module,exports){\n'use strict';\n\nrequire('./cas-processing-index');\nrequire('./es');\nrequire('./feature-structure');\nrequire('./index');\nrequire('./pagination');\nrequire('./sofa');\nrequire('./type');\n\n},{\"./cas-processing-index\":25,\"./es\":26,\"./feature-structure\":27,\"./index\":28,\"./pagination\":29,\"./sofa\":30,\"./type\":31}],29:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp').service('Pagination',\n  /**\n   * Pagination service.\n   *\n   * @class nlptabApp.common.Pagination\n   *\n   * @constructor\n   */\n  function Pagination() {\n    function PaginationInstance(page, itemsPerPage, totalItems) {\n      this.page = page ? page : 1;\n\n      this.itemsPerPage = itemsPerPage ? itemsPerPage : 10;\n\n      this.totalItems = totalItems ? totalItems : 0;\n    }\n\n    PaginationInstance.prototype.getFrom = function () {\n      return (this.page - 1) * this.itemsPerPage;\n    };\n\n    PaginationInstance.prototype.getSize = function () {\n      return this.itemsPerPage;\n    };\n\n    PaginationInstance.prototype.totalPages = function () {\n      return this.totalItems / this.itemsPerPage;\n    };\n\n    PaginationInstance.prototype.hasLowerPages = function () {\n      return this.page > 1;\n    };\n\n    PaginationInstance.prototype.increment = function () {\n      this.page = this.page + 1;\n    };\n\n    PaginationInstance.prototype.hasHigherPages = function () {\n      return this.page < this.totalPages();\n    };\n\n    PaginationInstance.prototype.decrement = function () {\n      this.page = this.page - 1;\n    };\n\n    PaginationInstance.prototype.reset = function () {\n      this.page = 1;\n      this.totalItems = 0;\n    };\n\n    /**\n     * Constructs a new pagination object.\n     *\n     * @param {number} [page=1] the current page, indexes starting at 1.\n     * @param {number} [itemsPerPage=10] the number of items that are displayed per page.\n     * @param {number} [totalItems=0] the total number of items fetched.\n     * @returns {nlptabApp.common.PaginationInstance}\n     */\n    this.withPageAndItemsPerPage = function (page, itemsPerPage, totalItems) {\n      return new PaginationInstance(page, itemsPerPage, totalItems);\n    };\n  });\n\n},{}],30:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp').\n    service('Sofa', [\"$q\", \"Es\", function Sofa($q, Es) {\n        var mapSources = function (body) {\n            if (body && body.hits && body.hits.hits) {\n                return body.hits.hits.map(function (currentValue) {\n                    return currentValue._source;\n                });\n            } else {\n                return [];\n            }\n        };\n\n        this.containingPhraseInText = function (indexName, queryString, from, size) {\n            var deferred = $q.defer();\n            var search = {\n                index: indexName,\n                type: 'Document',\n                body: {\n                    from: from,\n                    size: size\n                }\n            };\n\n            if (queryString && queryString.length > 0) {\n                search.body.query = {\n                    query_string: {\n                        default_field: 'text',\n                        query: '\"' + queryString + '\"'\n                    }\n                } ;\n            } else {\n                search.body.query = {\n                    match_all : {}\n                };\n            }\n\n            Es.search(search).then(function (body) {\n                var sources = mapSources(body);\n                deferred.resolve({total: body && body.hits && body.hits.total || 0, sofas: sources});\n            });\n            return deferred.promise;\n        };\n\n        this.withSofaIdentifier = function (index, sofaIdentifier) {\n            return Es.getSource({\n                index: index,\n                type: 'Document',\n                id: sofaIdentifier\n            }).then(function (result) {\n                return result;\n            });\n        };\n    }]);\n\n},{}],31:[function(require,module,exports){\n'use strict';\n\nvar NAMES_MAP = {\n  'uima.cas.Boolean': 'booleanFeatures',\n  'uima.cas.Byte': 'byteFeatures',\n  'uima.cas.Short': 'shortFeatures',\n  'uima.cas.Integer': 'intFeatures',\n  'uima.cas.Long': 'longFeatures',\n  'uima.cas.Float': 'floatFeatures',\n  'uima.cas.Double': 'doubleFeatures',\n  'uima.cas.String': 'stringFeatures',\n  'uima.cas.BooleanArray': 'BooleanArrayFeatures',\n  'uima.cas.ByteArray': 'ByteArrayFeatures',\n  'uima.cas.ShortArray': 'ShortArrayFeatures',\n  'uima.cas.IntegerArray': 'IntegerArrayFeatures',\n  'uima.cas.LongArray': 'LongArrayFeatures',\n  'uima.cas.FloatArray': 'FloatArrayFeatures',\n  'uima.cas.DoubleArray': 'DoubleArrayFeatures',\n  'uima.cas.StringArray': 'StringArrayFeatures',\n  'uima.cas.FloatList': 'FloatListFeatures',\n  'uima.cas.IntegerList': 'IntegerListFeatures',\n  'uima.cas.StringList': 'StringListFeatures'\n};\n\nangular.module('nlptabApp')\n  .service('Type',\n    /**\n     * @class nlptabApp.common.Type\n     * @description service for fetching type objects from elasticsearch.\n     * @param $q angular Q service, injected.\n     * @param Es elasticsearch service, injected.\n     */\n    [\"$q\", \"Es\", function ($q, Es) {\n      this.allInSystem = function (systemIndex, from, size, filter, source) {\n        var search = {\n          index: systemIndex,\n          type: 'Type',\n          body: {\n            from: from,\n            size: size,\n            query: {},\n            sort: [\n              {\n                'typeShortName.raw': {order: 'asc'}\n              }\n            ]\n          }\n        };\n        if (filter && filter.length > 0) {\n          search.body.query.match = {\n            typeShortName: filter\n          };\n        } else {\n          search.body.query.match_all = {};\n        }\n\n        if (source) {\n          search.body._source = source;\n        }\n\n        return Es.search(search).then(function (result) {\n          if (result && result.hits && result.hits.hits) {\n            var sources = result.hits.hits.map(function (val) {\n              return angular.extend(val._source, {\n                _id: val._id\n              });\n            });\n            return {total: result.hits.total, types: sources};\n          } else {\n            return {total: 0, types: []};\n          }\n        });\n      };\n\n      this.withName = function (systemIndex, typeName) {\n        return Es.search({\n          index: systemIndex,\n          type: 'Type',\n          body: {\n            size: 1,\n            query: {\n              term: {\n                typeName: typeName\n              }\n            }\n          }\n        }).then(function (body) {\n          if (body && body.hits && body.hits.hits && body.hits.hits.length > 0) {\n            return body.hits.hits[0]._source;\n          } else {\n            return $q.reject('not found');\n          }\n        });\n      };\n\n      this.findChildren = function (systemIndex, typeName) {\n        return Es.search({\n          index: systemIndex,\n          type: 'Type',\n          body: {\n            size: 0,\n            query: {\n              term: {\n                'parentTypes.raw': typeName\n              }\n            },\n            aggs: {\n              typeNames: {\n                terms: {\n                  field: 'typeName',\n                  size: 0,\n                  order: {\n                    _term: 'asc'\n                  }\n                }\n              }\n            }\n          }\n        }).then(function (body) {\n          if (body && body.aggregations && body.aggregations.typeNames && body.aggregations.typeNames.buckets) {\n            return body.aggregations.typeNames.buckets.map(function (val) {\n              return val.key;\n            });\n          } else {\n            return $q.reject();\n          }\n        });\n      };\n\n      this.subclasses = function (systemIndex, superclassName) {\n        return Es.search({\n          index: systemIndex,\n          type: 'Type',\n          body: {\n            size: 30,\n            query: {\n              term: {\n                'parentTypes.raw': superclassName\n              }\n            }\n          }\n        }).then(function (body) {\n          if (body && body.hits && body.hits.hits && body.hits.hits.length) {\n            return body.hits.hits.map(function (val) {\n              return val._source;\n            });\n          } else {\n            return [];\n          }\n        });\n      };\n\n      this.mapFeatureName = function (feature) {\n        var path = NAMES_MAP[feature.valueType];\n        return path + '.' + feature.name.replace(/\\./g, '_').replace(':', ';');\n      };\n    }]);\n\n},{}],32:[function(require,module,exports){\n'use strict';\n\nrequire('./system');\nrequire('./system-builder');\nrequire('./system-task-progress');\nrequire('./systems-list');\n\n},{\"./system\":35,\"./system-builder\":33,\"./system-task-progress\":34,\"./systems-list\":36}],33:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('SystemBuilderCtrl', [\"$scope\", \"SystemIndexingTasks\", \"$location\", \"$modal\", function ($scope, SystemIndexingTasks, $location, $modal) {\n    $scope.systemName = '';\n    $scope.systemDescription = '';\n    $scope.useXCas = false;\n\n    $scope.uploading = false;\n\n\n    $scope.submit = function () {\n      $scope.uploading = true;\n\n      var modal = $modal.open({\n        template: '<div><h3>Uploading File</h3><p><progressbar value=\"progress\"></progressbar></p></div>'\n      });\n\n      SystemIndexingTasks.indexMetadata($scope.systemName, $scope.systemDescription)\n        .then (function (index) {\n          SystemIndexingTasks.indexSystem(index, $scope.file, $scope.useXCas)\n            .progress(function (progress) {\n              $scope.progress = progress.loaded / progress.total * 100;\n            })\n            .then(function (result) {\n              $scope.progress = 1.0;\n              modal.dismiss('done');\n              $location.path('/system-task-progress/' + result.data.index);\n            });\n        });\n    };\n  }]);\n\n},{}],34:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('SystemTaskProgressCtrl', [\"$scope\", \"$interval\", \"$route\", \"$location\", \"SystemIndexingTasks\", function ($scope, $interval, $route, $location, SystemIndexingTasks) {\n    $scope.index = $route.current.params.index;\n\n    var getProgress = function () {\n      SystemIndexingTasks.withId($scope.index)\n        .then(function (result) {\n          $scope.systemIndexingTask = result;\n        });\n    };\n\n    var refresh = $interval(function() {\n      getProgress();\n    }, 3000);\n\n    var cancel = function() {\n      if (angular.isDefined(refresh)) {\n        $interval.cancel(refresh);\n        refresh = undefined;\n      }\n    };\n\n    $scope.goToSystem = function () {\n      $location.path('/system/' + $scope.index);\n    };\n\n    getProgress();\n\n    $scope.$on('$destroy', function () {\n      cancel();\n    });\n  }]);\n\n},{}],35:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('SystemCtrl', [\"$routeParams\", \"$location\", \"$scope\", \"system\", \"Type\", \"CasProcessingIndex\", \"$route\", function ($routeParams, $location, $scope, system, Type, CasProcessingIndex, $route) {\n    $scope.systemIndex = $routeParams.systemIndex;\n    $scope.system = system;\n\n    $scope.infoActive = true;\n    $scope.primitivesActive = false;\n    $scope.referencesActive = false;\n    $scope.instancesActive = false;\n    $scope.deleteWarned = false;\n\n    $scope.$watch(function () {\n      return $location.search();\n    }, function (value) {\n      updateFromParams(value);\n    }, true);\n\n    var updateFromParams = function (value) {\n      $scope.infoActive = !!value.info;\n      $scope.primitivesActive = !!value.primitives;\n      $scope.referencesActive = !!value.references;\n      $scope.instancesActive = !!value.instances;\n      if (value.type) {\n        $scope.selectedTypeName = value.type;\n      } else {\n        delete $scope.selectedTypeName;\n      }\n    };\n\n    updateFromParams($routeParams);\n\n    $scope.deleteSystem = function () {\n      if (!$scope.deleteWarned) {\n        $scope.deleteWarned = true;\n      } else {\n        CasProcessingIndex.deleteSystem($scope.systemIndex)\n          .then(function () {\n            $location.path('/type-systems');\n            $route.reload();\n          });\n      }\n    };\n\n    $scope.selectedInfo = function () {\n      if ($scope.selectedTypeName) {\n        clearTabs();\n        $location.search('info', true).replace();\n      }\n    };\n\n    $scope.selectedPrimitives = function () {\n      if ($scope.selectedTypeName) {\n        clearTabs();\n        $location.search('primitives', true).replace();\n      }\n    };\n\n    $scope.selectedReferences = function () {\n      if ($scope.selectedTypeName) {\n        clearTabs();\n        $location.search('references', true).replace();\n      }\n    };\n\n    $scope.selectedInstances = function () {\n      if ($scope.selectedTypeName) {\n        clearTabs();\n        $location.search('instances', true).replace();\n      }\n    };\n\n    var clearTabs = function () {\n      $location.search('info', null).replace();\n      $location.search('primitives', null).replace();\n      $location.search('references', null).replace();\n      $location.search('instances', null).replace();\n    };\n\n    $scope.selectType = function (type) {\n      var name = type.typeName;\n      if ($scope.selectedTypeName !== name) {\n        $scope.selectedTypeName = name;\n        $location.search('type', $scope.selectedTypeName).search('info', true).replace();\n      } else {\n        $scope.clearSelectedType();\n      }\n    };\n\n    $scope.clearSelectedType = function () {\n      delete $scope.selectedTypeName;\n      clearTabs();\n      $location.search('type', null).replace();\n      $location.search('info', true).replace();\n    };\n\n    $scope.$watch('selectedTypeName', function (newValue) {\n      if (newValue) {\n        Type.withName($scope.systemIndex, $scope.selectedTypeName).then(function (result) {\n          $scope.selectedType = result;\n        }, function (reason) {\n          delete $scope.selectedType;\n        });\n      }\n    });\n  }]);\n\n},{}],36:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('SystemsListCtrl', [\"$location\", \"$routeParams\", \"$scope\", \"CasProcessingIndex\", \"nlptabConfig\", \"$route\", function ($location, $routeParams, $scope, CasProcessingIndex, nlptabConfig, $route) {\n    $scope.isSecure = nlptabConfig.isSecure;\n\n    $scope.pagination = {from: 0, size: 10};\n\n    $scope.deleteWarned = false;\n\n    $scope.fetchSystems = function () {\n      CasProcessingIndex.all($scope.pagination).\n      then(function (result) {\n        $scope.pagination.total = result.total;\n        $scope.systems = result.casProcessingIndexes;\n      });\n    };\n\n    $scope.selectSystem = function (systemIndex) {\n      $location.path('/system/' + systemIndex);\n    };\n\n    $scope.deleteSystem = function ($event, system) {\n      $event.stopPropagation();\n      if ($scope.deleteWarned) {\n        CasProcessingIndex.deleteSystem(system)\n          .then(function () {\n            $scope.fetchSystems();\n          });\n      } else {\n        $scope.deleteWarned = true;\n      }\n    };\n\n    $scope.fetchSystems();\n  }]);\n\n},{}],37:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('booleanPrimitiveFeature', function () {\n    return {\n      templateUrl: '../../../partials/systems/boolean-primitive-feature.html',\n      restrict: 'E',\n      scope: {\n        feature: '=',\n        systemIndex: '=',\n        selectedType: '=',\n        values: '='\n      },\n      controller: [\"$scope\", \"FeatureStructure\", function ($scope, FeatureStructure) {\n        FeatureStructure.termsAndMissingForFeature($scope.systemIndex, $scope.selectedType.typeName,\n          'booleanFeatures.' + $scope.feature.name.replace(/\\./g, '_').replace(/:/g, ';'))\n          .then(function (result) {\n            $scope.bool = result;\n            if ($scope.values) {\n              $scope.values.values = result.values.map(function (value) {\n                return value.key;\n              });\n            }\n          });\n      }]\n    };\n  });\n\n},{}],38:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('floatPrimitiveFeature', function () {\n    return {\n      templateUrl: '../../../partials/systems/float-primitive-feature.html',\n      restrict: 'E',\n      scope: {\n        feature: '=',\n        systemIndex: '=',\n        selectedType: '=',\n        values: '='\n      },\n      controller: [\"$scope\", \"FeatureStructure\", function ($scope, FeatureStructure) {\n        FeatureStructure.termsMissingCardinalityAndPercentilesForFeature($scope.systemIndex,\n          $scope.selectedType.typeName, 'floatFeatures.' + $scope.feature.name.replace(/\\./g, '_').replace(/:/g, ';'))\n          .then(function (result) {\n            $scope.float = result;\n          });\n      }]\n    };\n  });\n\n},{}],39:[function(require,module,exports){\n'use strict';\n\nrequire('./boolean-primitive-feature');\nrequire('./float-primitive-feature');\nrequire('./instances-detail');\nrequire('./int-primitive-feature');\nrequire('./reference-features-detail');\nrequire('./string-primitive-feature');\nrequire('./system-types-list');\nrequire('./type-info');\n\n},{\"./boolean-primitive-feature\":37,\"./float-primitive-feature\":38,\"./instances-detail\":40,\"./int-primitive-feature\":41,\"./reference-features-detail\":42,\"./string-primitive-feature\":43,\"./system-types-list\":44,\"./type-info\":45}],40:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('instancesDetail',\n    function () {\n      return {\n        templateUrl: '../../../partials/systems/instances-detail.html',\n        restrict: 'E',\n        controller: [\"$scope\", \"FeatureStructure\", \"Pagination\", function InstancesDetailCtrl($scope, FeatureStructure, Pagination) {\n          $scope.instancesPagination = Pagination.withPageAndItemsPerPage(1, 1);\n\n          $scope.childTypes = [];\n\n          $scope.toggleType = function ($index) {\n            var childType = $scope.childTypes[$index];\n            childType.isSelected = !childType.isSelected;\n            $scope.instancesPagination.reset();\n            loadTypeInstances();\n          };\n\n          $scope.invertTypeSelection = function () {\n            $scope.childTypes = $scope.childTypes.map(function (childType) {\n              childType.isSelected = !childType.isSelected;\n              return childType;\n            });\n            $scope.instancesPagination.reset();\n            loadTypeInstances();\n          };\n\n          /**\n           * Fetches the child types of the selected type.\n           */\n          var fetchChildTypes = function () {\n            $scope.instancesPagination.reset();\n            if ($scope.selectedType) {\n              FeatureStructure.primaryTypesFor($scope.systemIndex, $scope.selectedType.typeName)\n                .then(function (childTypeNames) {\n                  $scope.childTypes = childTypeNames.map(function (childTypeName) {\n                    return {\n                      isSelected: true,\n                      name: childTypeName\n                    };\n                  });\n\n                  loadTypeInstances();\n                });\n            }\n          };\n\n          /**\n           * Fetches the instances of the selected type and its selected children.\n           */\n          var loadTypeInstances = function () {\n            $scope.featureStructureInstance = undefined;\n\n            var deselectedTypes = [];\n            var i;\n            for (i = 0; i < $scope.childTypes.length; i++) {\n              var childType = $scope.childTypes[i];\n              if (!childType.isSelected) {\n                deselectedTypes.push(childType.name);\n              }\n            }\n\n            FeatureStructure.ofTypeWithoutPrimaryTypes($scope.systemIndex, $scope.selectedType.typeName, deselectedTypes,\n              $scope.instancesPagination)\n              .then(function (featureStructures) {\n                if (featureStructures.length > 0) {\n                  $scope.featureStructureInstance = featureStructures[0];\n                }\n              });\n          };\n\n          $scope.$watch('selectedType',\n            /**\n             * Angular watch function, watches for selected type to change and fetches the new children of that type.\n             */\n            function () {\n              fetchChildTypes();\n            }\n          );\n\n          $scope.$watch('instancesPagination.page',\n            /**\n             * Angular watch function, watches for the page to change, loading that instance.\n             */\n            function () {\n              loadTypeInstances();\n            }\n          );\n\n        }]\n      };\n    });\n\n},{}],41:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('intPrimitiveFeature', function () {\n    return {\n      templateUrl: '../../../partials/systems/int-primitive-feature.html',\n      restrict: 'E',\n      scope: {\n        feature: '=',\n        systemIndex: '=',\n        selectedType: '=',\n        values: '='\n      },\n      controller: [\"$scope\", \"FeatureStructure\", function ($scope, FeatureStructure) {\n        FeatureStructure.termsMissingCardinalityAndPercentilesForFeature($scope.systemIndex,\n          $scope.selectedType.typeName, 'intFeatures.' + $scope.feature.name.replace(/\\./g, '_').replace(/:/g, ';'))\n          .then(function (result) {\n            $scope.int = result;\n            if ($scope.values) {\n              $scope.values.values = result.values.map(function (value) {\n                return value.key;\n              });\n            }\n          });\n      }]\n    };\n  });\n\n},{}],42:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .directive('referenceFeaturesDetail', function () {\n        return {\n            templateUrl: '../../../partials/systems/reference-features-detail.html',\n            restrict: 'E'\n        };\n    });\n\n},{}],43:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('stringPrimitiveFeature', function () {\n    return {\n      templateUrl: '../../../partials/systems/string-primitive-feature.html',\n      restrict: 'E',\n      scope: {\n        feature: '=',\n        systemIndex: '=',\n        selectedType: '=',\n        values: '='\n      },\n      controller: [\"$scope\", \"FeatureStructure\", function ($scope, FeatureStructure) {\n        var fetch = function () {\n          FeatureStructure.termsMissingAndCardinalityForFeature($scope.systemIndex, $scope.selectedType.typeName,\n            'stringFeatures.' + $scope.feature.name.replace(/\\./g, '_').replace(/:/g, ';'))\n            .then(function (result) {\n              $scope.string = result;\n              if ($scope.values) {\n                $scope.values.values = result.values.map(function (value) {\n                  return value.key;\n                });\n              }\n            });\n        };\n\n        $scope.$watch('feature', function () {\n          fetch();\n        });\n\n        $scope.$watch('systemIndex', function () {\n          fetch();\n        });\n\n        $scope.$watch('selectedType', function () {\n          fetch();\n        });\n      }]\n    };\n  });\n\n},{}],44:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .directive('systemTypesList', function () {\n        return {\n            templateUrl: '../../../partials/systems/system-types-list.html',\n            restrict: 'E',\n            controller: [\"$scope\", \"$location\", \"Type\", function ($scope, $location, Type) {\n                $scope.pagination = {page: 1, itemsPerPage: 15};\n                $scope.filter = '';\n\n                var ignore = false;\n                $scope.$watch('pagination.page', function (newValue, oldValue) {\n                    if (!ignore) {\n                        if (newValue !== oldValue) {\n                            $scope.fetchTypes();\n                        }\n                    } else {\n                        ignore = false;\n                    }\n                });\n\n                $scope.$watch('filter', function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $scope.fetchTypes();\n                    }\n                });\n\n                $scope.fetchTypes = function () {\n                    var from = ($scope.pagination.page - 1) * $scope.pagination.itemsPerPage;\n                    Type.allInSystem($scope.systemIndex, from, $scope.pagination.itemsPerPage, $scope.filter,\n                        'typeName').then(function (result) {\n                            $scope.pagination.totalItems = result.total;\n                            $scope.types = result.types;\n                        });\n                };\n\n                $scope.fetchTypes();\n            }]\n        };\n    });\n\n},{}],45:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .directive('typeInfo', function () {\n        return {\n            restrict: 'E',\n            templateUrl: '../../../partials/systems/type-info.html',\n            controller: [\"$scope\", \"FeatureStructure\", \"Type\", function ($scope, FeatureStructure, Type) {\n                FeatureStructure.countTotal($scope.systemIndex).then(function (result) {\n                    $scope.totalFeatureStructures = result;\n                });\n\n                $scope.$watch('selectedType.typeName', function (typeName) {\n                    if (typeName) {\n                        FeatureStructure.countOfType($scope.systemIndex, typeName).then(function (result) {\n                            $scope.countOfType = result;\n                        });\n\n                        Type.findChildren($scope.systemIndex, $scope.selectedType.typeName).then(function (children) {\n                            $scope.children = children;\n                        });\n                    }\n                });\n            }]\n        };\n    });\n\n},{}],46:[function(require,module,exports){\n'use strict';\n\nrequire('./controllers/index');\nrequire('./directives/index');\nrequire('./services/system-indexing-tasks');\n\n},{\"./controllers/index\":32,\"./directives/index\":39,\"./services/system-indexing-tasks\":47}],47:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .service('SystemIndexingTasks',\n    /**\n     * SystemIndexingTasks service.\n     * @param $q angular promises service\n     * @param Es angular Es service\n     * @param nlptabConfig nlptab config\n     * @param $http angular http service\n     * @param Upload angular upload service\n     * @constructor\n     */\n    [\"$q\", \"Es\", \"nlptabConfig\", \"$http\", \"Upload\", function SystemIndexingTasks($q, Es, nlptabConfig, $http, Upload) {\n      /**\n       * Returns the source of the document with the id.\n       *\n       * @param {string} id the id\n       * @returns {Promise} promise object for the system index task\n       */\n      this.withId = function (id) {\n        return Es.getSource({\n          index: nlptabConfig.instanceName + 'metadata',\n          type: 'SystemIndexTask',\n          id: id\n        });\n      };\n\n      /**\n       * Runs the first part of indexing, uploading the metadata.\n       * @param {string} systemName\n       * @param {string} systemDescription\n       * @return {string} the new system index created.\n       */\n      this.indexMetadata = function (systemName, systemDescription) {\n        return $http.post(nlptabConfig.esPath + '/_nlptab-systemindexmeta', {\n          systemName: systemName,\n          systemDescription: systemDescription,\n          instance: nlptabConfig.instanceName\n        }).then(function (result) {\n          return result.data.index;\n        });\n      };\n\n      this.indexSystem = function (index, file, useXCas) {\n        return Upload.http({\n          url: nlptabConfig.esPath + '/_nlptab-systemindex?instance=' + nlptabConfig.instanceName + '&index=' + index + '&useXCas=' + useXCas,\n          headers: {\n            'Content-Type': file.type\n          },\n          data: file\n        });\n      };\n    }]);\n\n},{}],48:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisBuilderCtrl', [\"$scope\", \"$location\", \"CasProcessingIndex\", \"AnalysisTasks\", function ($scope, $location, CasProcessingIndex, AnalysisTasks) {\n    $scope.systems = [];\n\n    $scope.firstUnitOfAnalysis = {\n      filters: []\n    };\n    $scope.secondUnitOfAnalysis = {\n      filters: []\n    };\n    $scope.featureValueMappings = [];\n    $scope.onlyCompareMatches = false;\n\n    $scope.description = '';\n\n    $scope.fetchSystems = function () {\n      CasProcessingIndex.all(0, 50)\n        .then(function (result) {\n          $scope.systems = result.casProcessingIndexes;\n        });\n    };\n\n    var firstAvail = function (featureName) {\n      var ind = 0;\n      while ($scope.featureValueMappings[ind] && $scope.featureValueMappings[ind][featureName]) {\n        ind++;\n      }\n      if (!$scope.featureValueMappings[ind]) {\n        $scope.featureValueMappings.push(AnalysisTasks.createFeatureValueMapping());\n      }\n      return $scope.featureValueMappings[ind];\n    };\n\n    $scope.$watch('firstUnitOfAnalysis.selectedType', function () {\n      for (var i = 0; i < $scope.featureValueMappings.length; i++) {\n        $scope.featureValueMappings[i].hypothesisFeature = undefined;\n      }\n    });\n\n    $scope.$watch('secondUnitOfAnalysis.selectedType', function () {\n      for (var i = 0; i < $scope.featureValueMappings.length; i++) {\n        $scope.featureValueMappings[i].referenceFeature = undefined;\n      }\n    });\n\n    var updateEquivalences = function (featureValueMapping) {\n      if (featureValueMapping.hypothesisFeature) {\n        if (featureValueMapping.hypothesisIsCollection) {\n          if (featureValueMapping.referenceIsCollection) {\n            featureValueMapping.equivalence = 'any are in';\n            featureValueMapping.equivalenceOptions = ['any are in', 'none are in', 'all are in', 'equals'];\n          } else {\n            featureValueMapping.equivalence = 'any are equal to';\n            featureValueMapping.equivalenceOptions = ['any are equal to', 'none are equal to'];\n          }\n        } else {\n          if (featureValueMapping.referenceIsCollection) {\n            featureValueMapping.equivalence = 'is in';\n            featureValueMapping.equivalenceOptions = ['is in', 'is not in'];\n          } else {\n            featureValueMapping.equivalence = 'equals';\n            featureValueMapping.equivalenceOptions = ['equals', 'does not equal'];\n          }\n        }\n      }\n    };\n\n    $scope.addHypothesisFeatureValueMapping = function (feature, nestedStructure, isCollection) {\n      var featureValueMapping = firstAvail('hypothesisFeature');\n      featureValueMapping.hypothesisFeature = {feature: feature, nestedStructure: nestedStructure};\n      featureValueMapping.hypothesisIsCollection = isCollection;\n      updateEquivalences(featureValueMapping);\n    };\n\n    $scope.addReferenceFeatureValueMapping = function (feature, nestedStructure, isCollection) {\n      var featureValueMapping = firstAvail('referenceFeature');\n      featureValueMapping.referenceFeature = {feature: feature, nestedStructure: nestedStructure};\n      featureValueMapping.referenceIsCollection = isCollection;\n      updateEquivalences(featureValueMapping);\n    };\n\n    $scope.fetchSystems();\n\n    $scope.isReadyForAnalysis = function () {\n      if (!$scope.firstUnitOfAnalysis.selectedType || !$scope.secondUnitOfAnalysis.selectedType) {\n        return false;\n      }\n      var i;\n      for (i = 0; i < $scope.featureValueMappings.length; i++) {\n        var featureValueMapping = $scope.featureValueMappings[i];\n        if (!featureValueMapping.hypothesisFeature || !featureValueMapping.referenceFeature) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    var removedFeature = function (index) {\n      var featureValueMapping = $scope.featureValueMappings[index];\n      featureValueMapping.valueMappings = [];\n      if (!featureValueMapping.referenceFeature && !featureValueMapping.hypothesisFeature) {\n        $scope.featureValueMappings.splice(index, 1);\n      }\n    };\n\n    $scope.removeReferenceFeature = function (index) {\n      $scope.featureValueMappings[index].referenceFeature = undefined;\n      $scope.featureValueMappings[index].referenceIsCollection = undefined;\n      removedFeature(index);\n    };\n\n    $scope.removeHypothesisFeature = function (index) {\n      $scope.featureValueMappings[index].hypothesisFeature = undefined;\n      $scope.featureValueMappings[index].hypothesisIsCollection = undefined;\n      removedFeature(index);\n    };\n\n    $scope.submitAnalysis = function () {\n      AnalysisTasks.runAnalysis($scope.firstUnitOfAnalysis, $scope.secondUnitOfAnalysis, $scope.featureValueMappings,\n        $scope.description, $scope.onlyCompareMatches)\n        .then(function (result) {\n          $location.path('/analysis-progress/' + result.data.id);\n        });\n    };\n  }]);\n\n},{}],49:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisProgressCtrl', [\"$scope\", \"$interval\", \"$route\", \"$location\", \"AnalysisTasks\", function ($scope, $interval, $route, $location, AnalysisTasks) {\n    $scope.analysisId = $route.current.params.analysisId;\n\n    var getAnalysisProgress = function () {\n      AnalysisTasks.withId($scope.analysisId)\n        .then(function (result) {\n          $scope.analysisTask = result;\n        });\n    };\n\n    var refresh = $interval(function() {\n      getAnalysisProgress();\n    }, 1000);\n\n    var cancel = function() {\n      if (angular.isDefined(refresh)) {\n        $interval.cancel(refresh);\n        refresh = undefined;\n      }\n    };\n\n    $scope.$watch('analysisTask', function() {\n      if ($scope.analysisTask && $scope.analysisTask.finished) {\n        if (!$scope.analysisTask.failed) {\n          $location.path('/analysis-results-explore/' + $scope.analysisId);\n        }\n      }\n    });\n\n    getAnalysisProgress();\n\n    $scope.$on('$destroy', function () {\n      cancel();\n    });\n  }]);\n\n},{}],50:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisResultsExploreCtrl', [\"$q\", \"$scope\", \"$routeParams\", \"matchCounts\", function ($q, $scope, $routeParams, matchCounts) {\n    // Scope properties\n    $scope.examplesOf = $routeParams.examplesOf || 'coOccurrences';\n    $scope.matchCounts = matchCounts;\n  }]);\n\n},{}],51:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisResultsCtrl', [\"$q\", \"$scope\", \"$routeParams\", \"$location\", \"MatchCounts\", \"Pagination\", function ($q, $scope, $routeParams, $location, MatchCounts, Pagination) {\n    $scope.selectedTested = $routeParams.tested;\n    $scope.selectedGold = $routeParams.gold;\n\n    $scope.pagination = Pagination.withPageAndItemsPerPage(1, 15);\n\n    $scope.$watch('pagination.page', function (newValue, oldValue) {\n      if (newValue !== oldValue) {\n        $location.search('page', newValue).replace();\n        $scope.fetchMatchCounts();\n      }\n    });\n\n    $scope.fetchMatchCounts = function () {\n      MatchCounts.withTestedAndGoldStandard($scope.selectedTested, $scope.selectedGold, $scope.pagination)\n        .then(function (result) {\n          $scope.matchCounts = result.matchCounts;\n          $scope.pagination.totalItems = result.total;\n        });\n    };\n\n    $scope.fetchMatchCounts();\n  }]);\n\n},{}],52:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisCtrl', [\"$scope\", \"$routeParams\", \"$location\", \"MatchCounts\", \"nlptabConfig\", \"CasProcessingIndex\", \"$q\", \"$filter\", function ($scope, $routeParams, $location, MatchCounts, nlptabConfig, CasProcessingIndex,\n                                        $q, $filter) {\n    $scope.isSecure = nlptabConfig.isSecure;\n\n    $scope.isReady = false;\n\n    $scope.selectTested = function (tested, then) {\n      $scope.selectedTested = tested.index;\n      $scope.selectedGoldStandard = undefined;\n      $scope.isReady = false;\n      $location.search('reference', $scope.selectedTested).replace();\n      $scope.systems.map(function (systemIndex) {\n        MatchCounts.countTestedAndGold(tested.index, systemIndex.index)\n          .then(function (count) {\n            systemIndex['goldCount'] = count;\n            if (then) {\n              then();\n            }\n          });\n      });\n    };\n\n    $scope.selectGoldStandard = function (goldStandard) {\n      $scope.selectedGoldStandard = goldStandard.index;\n      $location.search('gold', $scope.selectedGoldStandard).replace();\n      $scope.isReady = goldStandard.goldCount > 0;\n    };\n\n    CasProcessingIndex.all()\n      .then(function (result) {\n        return $q.all(result.casProcessingIndexes.map(function (systemIndex) {\n          return MatchCounts.countTested(systemIndex.index)\n            .then(function (count) {\n              systemIndex['count'] = count;\n              return systemIndex;\n            });\n        }));\n      })\n      .then(function (result) {\n        $scope.systems = result;\n        if ($routeParams.reference) {\n          var reference = $filter('filter')($scope.systems, {index: $routeParams.reference}, true);\n          $scope.selectTested(reference, function () {\n            if ($routeParams.gold) {\n              var gold = $filter('filter')($scope.systems, {index: $routeParams.gold}, true);\n              $scope.selectGoldStandard(gold);\n            }\n          })\n        }\n      });\n  }]);\n\n},{}],53:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('FeatureExamplesModalCtrl', [\"$scope\", \"$uibModalInstance\", \"systemIndex\", \"type\", \"feature\", function ($scope, $uibModalInstance, systemIndex, type, feature) {\n    $scope.systemIndex = systemIndex;\n    $scope.type = type;\n    $scope.feature = feature;\n    $scope.done = function () {\n      $uibModalInstance.dismiss('done');\n    };\n  }]);\n\n},{}],54:[function(require,module,exports){\n'use strict';\n\nrequire('./analysis');\nrequire('./analysis-builder');\nrequire('./analysis-progress');\nrequire('./analysis-results');\nrequire('./analysis-results-explore');\nrequire('./feature-examples-modal');\nrequire('./type-selection-modal');\n\n},{\"./analysis\":52,\"./analysis-builder\":48,\"./analysis-progress\":49,\"./analysis-results\":51,\"./analysis-results-explore\":50,\"./feature-examples-modal\":53,\"./type-selection-modal\":55}],55:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .controller('TypeSelectionModalCtrl', [\"$scope\", \"$modalInstance\", \"Type\", \"Pagination\", \"systemIndex\", \"selectedType\", function ($scope, $modalInstance, Type, Pagination, systemIndex, selectedType) {\n    $scope.pagination = Pagination.withPageAndItemsPerPage(1, 20);\n\n    $scope.systemIndex = systemIndex;\n\n    $scope.types = [];\n\n    $scope.selectType = function ($index) {\n      selectedType($scope.types[$index]);\n      $scope.done();\n    };\n\n    var fetchTypes = function () {\n      Type.allInSystem($scope.systemIndex, $scope.pagination.getFrom(), $scope.pagination.getSize())\n        .then(function (result) {\n          $scope.pagination.totalItems = result.total;\n          $scope.types = result.types;\n        });\n    };\n\n    $scope.$watch('pagination.page', function () {\n      fetchTypes();\n    });\n\n    $scope.done = function () {\n      $modalInstance.dismiss('done');\n    };\n  }]);\n\n},{}],56:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('confusionMatrixTable', function () {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/confusion-matrix-table.html',\n      restrict: 'E'\n    };\n  });\n\n},{}],57:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('cooccurringExamplesList', function () {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/cooccurring-examples-list.html',\n      restrict: 'E',\n      controller: [\"$scope\", \"CoOccurrenceMatches\", \"Pagination\", function ($scope, CoOccurrenceMatches, Pagination) {\n        $scope.pagination = Pagination.withPageAndItemsPerPage(1, 1);\n\n        var map = {\n          coOccurrences: 'TruePositive',\n          firstOnly: 'FalsePositive',\n          secondOnly: 'FalseNegative'\n        };\n\n        var fetchAnnotationLocations = function () {\n          CoOccurrenceMatches.withTypeAndId(map[$scope.examplesOf], $scope.matchCounts.analysisId, $scope.pagination)\n            .then(function (result) {\n              $scope.pagination.totalItems = result.totalItems;\n              $scope.coOccurrenceMatches = result.coOccurrenceMatches;\n            });\n        };\n\n        $scope.selectExamplesOf = function (value) {\n          $scope.examplesOf = value;\n          fetchAnnotationLocations();\n        };\n\n        $scope.$watch('pagination.page', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            fetchAnnotationLocations();\n          }\n        });\n\n        fetchAnnotationLocations();\n      }]\n    };\n  });\n\n},{}],58:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('cooccurringExamplesRow', [\"nlptabConfig\", function (nlptabConfig) {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/cooccurring-examples-row.html',\n      restrict: 'A',\n      require: '^cooccurringExamplesList',\n      controller: [\"$scope\", \"FeatureStructure\", function ($scope, FeatureStructure) {\n        $scope.selected = false;\n\n        FeatureStructure.withId($scope.coOccurrenceMatch.firstId, $scope.coOccurrenceMatch.firstSystem)\n          .then(function (result) {\n            $scope.firstFs = result;\n          });\n\n        FeatureStructure.withId($scope.coOccurrenceMatch.secondId, $scope.coOccurrenceMatch.secondSystem)\n          .then(function (result) {\n            $scope.secondFs = result;\n          });\n      }]\n    };\n  }]);\n\n},{}],59:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('featureOn',\n    /**\n     * feature-on element directive, displays a full feature name as \"featureShortName on Type\".\n     *\n     * @returns {{template: string, restrict: string, scope: {featureName: string}, link: featureOn.link}}\n     */\n    function () {\n      return {\n        template: '<span ng-if=\"featureName\">{{featureShortName}} on <type-name name=\"typeName\" unlinked></type-name></span>',\n        restrict: 'E',\n        scope: {\n          featureName: '='\n        },\n        /**\n         * Linking function for featureOn directive.\n         *\n         * @param {$rootScope.Scope} scope\n         */\n        link: function (scope) {\n          scope.$watch('featureName',\n            /**\n             * Watches for updates to feature name.\n             *\n             * @param {string} featureName\n             */\n            function (featureName) {\n              if (featureName) {\n                var split = featureName.indexOf(':');\n                scope.featureShortName = featureName.substring(split + 1, featureName.length);\n                scope.typeName = featureName.substring(0, split);\n              }\n            });\n        }\n      };\n    });\n\n},{}],60:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .directive('featureValueSuggestion', [\"FeatureStructure\", function (FeatureStructure) {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/feature-value-suggestion.html',\n      restrict: 'E',\n      scope: {\n        value: '=',\n        systemIndex: '=',\n        type: '=',\n        feature: '='\n      },\n      link: function (scope) {\n        scope.selected = {};\n        FeatureStructure.termsAndMissingForFeature(scope.systemIndex, scope.type.typeName,\n          FeatureStructure.mapToEsFeature(scope.feature), 100000)\n          .then(function (result) {\n            scope.values = result.values.map(function (bucket) {\n              return bucket.key;\n            });\n          });\n\n        scope.$watch('selected.value', function (value) {\n          scope.value = value;\n        });\n      }\n    };\n  }]);\n\n},{}],61:[function(require,module,exports){\n'use strict';\n\nrequire('./confusion-matrix-table');\nrequire('./cooccurring-examples-list');\nrequire('./cooccurring-examples-row');\nrequire('./feature-on');\nrequire('./feature-value-suggestion');\nrequire('./sets-sorts-by');\nrequire('./unit-of-analysis');\nrequire('./unit-of-analysis-description');\n\n},{\"./confusion-matrix-table\":56,\"./cooccurring-examples-list\":57,\"./cooccurring-examples-row\":58,\"./feature-on\":59,\"./feature-value-suggestion\":60,\"./sets-sorts-by\":62,\"./unit-of-analysis\":64,\"./unit-of-analysis-description\":63}],62:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n    .directive('setsSortBy', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                element.bind('click', function () {\n                    scope.setSortBy(attr.setsSortBy);\n                });\n\n                scope.$watch('sorters', function (val) {\n                    var index = val.indexOf(attr.setsSortBy);\n                    if (index > -1) {\n                        element.addClass('btn-info');\n                        element.removeClass('btn-default');\n                    } else {\n                        element.addClass('btn-default');\n                        element.removeClass('btn-info');\n                    }\n                });\n            }\n        };\n    });\n\n},{}],63:[function(require,module,exports){\n'use strict';\n\n\nangular.module('nlptabApp')\n  .directive('unitOfAnalysisDescription', function () {\n    return {\n      restrict: 'E',\n      scope: {\n        unitOfAnalysis: '=',\n        featureValueMappings: '=',\n        isHypothesis: '='\n      },\n      templateUrl: '../../../partials/type_systems_analysis/unit-of-analysis-description.html',\n      link: function(scope) {\n        scope.mappings = scope.featureValueMappings.map(function (element) {\n          if (scope.isHypothesis) {\n            return element.hypothesisFeature;\n          } else {\n            return element.referenceFeature;\n          }\n        });\n      }\n    };\n  });\n\n},{}],64:[function(require,module,exports){\n'use strict';\n\nvar collections = ['uima.cas.BooleanArray', 'uima.cas.ByteArray', 'uima.cas.ShortArray', 'uima.cas.IntegerArray',\n  'uima.cas.LongArray', 'uima.cas.FloatArray', 'uima.cas.DoubleArray', 'uima.cas.StringArray', 'uima.cas.FloatList',\n  'uima.cas.IntegerList', 'uima.cas.StringList'];\n\n\nangular.module('nlptabApp')\n  .directive('unitOfAnalysis', function () {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/unit-of-analysis.html',\n      restrict: 'E',\n      scope: {\n        unitOfAnalysis: '=',\n        systems: '=',\n        addFeatureValueMapping: '='\n      },\n      controller: [\"$scope\", \"Type\", \"$uibModal\", function ($scope, Type, $uibModal) {\n        $scope.types = [];\n\n        $scope.tree = [];\n\n        $scope.filterOptions = ['equals', 'in'];\n\n        $scope.fetchTypes = function (filter) {\n          if ($scope.unitOfAnalysis.selectedSystem && $scope.unitOfAnalysis.selectedSystem.index) {\n            Type.allInSystem($scope.unitOfAnalysis.selectedSystem.index, 0, 30, filter)\n              .then(function (result) {\n                $scope.types = result.types;\n              });\n          }\n        };\n\n        $scope.openTypeSelection = function () {\n          $uibModal.open({\n            templateUrl: '../../../partials/type_systems_analysis/type-selection-modal.html',\n            controller: 'TypeSelectionModalCtrl',\n            size: 'lg',\n            resolve: {\n              systemIndex: function () {\n                return $scope.unitOfAnalysis.selectedSystem.index;\n              },\n              selectedType: function () {\n                return function (selectedType) {\n                  $scope.unitOfAnalysis.selectedType = selectedType;\n                };\n              }\n            }\n          });\n        };\n\n        $scope.$watch('unitOfAnalysis.selectedSystem', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            delete $scope.unitOfAnalysis.selectedType;\n            $scope.fetchTypes('');\n          }\n        });\n\n        var pushType = function (type, level, index) {\n          Type.subclasses($scope.unitOfAnalysis.systemIndex, type.typeName)\n            .then(function (result) {\n              var i, j;\n              var runningIndex = index;\n              var added = [];\n              for (j = 0; j < type.primitiveFeatures.length; j++) {\n                added.push(type.primitiveFeatures[j].shortName);\n                $scope.tree.splice(runningIndex, 0, {\n                  feature: type.primitiveFeatures[j],\n                  onType: type.typeName,\n                  collection: collections.indexOf(type.primitiveFeatures[j].valueType) !== -1,\n                  level: level,\n                  primitive: true,\n                  class: ['col-md-' + (12 - level), 'col-md-offset-' + level],\n                  subclass: false\n                });\n                runningIndex++;\n              }\n              for (i = 0; i < result.length; i++) {\n                for (j = 0; j < result[i].primitiveFeatures.length; j++) {\n                  if (added.indexOf(result[i].primitiveFeatures[j].shortName) === -1) {\n                    added.push(result[i].primitiveFeatures[j].shortName);\n                    $scope.tree.splice(runningIndex, 0, {\n                      feature: result[i].primitiveFeatures[j],\n                      onType: result[i].typeName,\n                      collection: collections.indexOf(result[i].primitiveFeatures[j].valueType) !== -1,\n                      level: level,\n                      primitive: true,\n                      class: ['col-md-' + (12 - level), 'col-md-offset-' + level],\n                      subclass: true\n                    });\n                    runningIndex++;\n                  }\n                }\n              }\n              for (j = 0; j < type.referenceFeatures.length; j++) {\n                $scope.tree.splice(runningIndex, 0, {\n                  feature: type.referenceFeatures[j],\n                  collection: type.referenceFeatures[j].valueType.indexOf('[]') !== -1 || type.referenceFeatures[j].valueType === 'uima.cas.FSArray',\n                  level: level,\n                  primitive: false,\n                  expanded: false,\n                  sofa: type.referenceFeatures[j].shortName === 'sofa',\n                  class: ['col-md-' + (12 - level), 'col-md-offset-' + level]\n                });\n                runningIndex++;\n              }\n            });\n        };\n\n        $scope.expandItem = function (index) {\n          var item = $scope.tree[index];\n          var valueType = item.feature.valueType;\n          var arrIndex = valueType.indexOf('[]');\n          if (arrIndex !== -1) {\n            valueType = valueType.substring(0, arrIndex);\n          }\n          Type.withName($scope.unitOfAnalysis.selectedSystem.index, valueType)\n            .then(function (result) {\n              item.expanded = true;\n              pushType(result, item.level + 1, index + 1);\n            });\n        };\n\n        $scope.collapseItem = function (index) {\n          var item = $scope.tree[index];\n          item.expanded = false;\n          var i = 0;\n          while ($scope.tree[index + 1 + i] && $scope.tree[index + 1 + i].level === item.level + 1) {\n            i++;\n          }\n          $scope.tree.splice(index + 1, i);\n        };\n\n        var getNestedPath = function (index) {\n          var item = $scope.tree[index];\n          var nestedPath;\n          var level = item.level;\n          var collection = item.collection;\n          if (level !== 0) {\n            nestedPath = [];\n            var ptr = index - 1;\n            while (level !== 0) {\n              var parent = $scope.tree[ptr];\n              if (parent.level === level - 1) {\n                nestedPath.push(parent.feature.name);\n                collection = item.collection || parent.collection;\n                level--;\n              }\n              ptr--;\n            }\n          }\n          return {item: item, nestedPath: nestedPath, collection: collection};\n        };\n\n        $scope.addFeature = function (index) {\n          var __ret = getNestedPath(index);\n          $scope.addFeatureValueMapping(__ret.item.feature, __ret.nestedPath, __ret.collection);\n        };\n\n        $scope.$watch('unitOfAnalysis.selectedType', function (value) {\n          $scope.tree = [];\n          if (value) {\n            pushType(value, 0, 0);\n          }\n        });\n\n        $scope.examples = function (index) {\n          $uibModal.open({\n            templateUrl: '../../../partials/type_systems_analysis/feature-examples-modal.html',\n            controller: 'FeatureExamplesModalCtrl',\n            size: 'lg',\n            resolve: {\n              systemIndex: function () {\n                return $scope.unitOfAnalysis.selectedSystem.index;\n              },\n              type: function () {\n                return $scope.tree[index].onType;\n              },\n              feature: function () {\n                return $scope.tree[index].feature;\n              }\n            }\n          });\n        };\n\n        $scope.addFilter = function (index) {\n          var item = $scope.tree[index];\n          var filter = {\n            feature: item.feature.shortName,\n            value: '',\n            option: 'equals'\n          };\n\n          $scope.unitOfAnalysis.filters.push(filter);\n        };\n\n        $scope.deleteFilter = function (index) {\n          $scope.unitOfAnalysis.filters.splice(index, 1);\n        };\n      }]\n    };\n  });\n\n},{}],65:[function(require,module,exports){\n'use strict';\n\nrequire('./controllers/index');\nrequire('./directives/index');\n\nrequire('./services/analysis-tasks');\nrequire('./services/co-occurrence-matches');\nrequire('./services/match-counts');\n\n},{\"./controllers/index\":54,\"./directives/index\":61,\"./services/analysis-tasks\":66,\"./services/co-occurrence-matches\":67,\"./services/match-counts\":68}],66:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .service('AnalysisTasks', [\"$q\", \"Es\", \"nlptabConfig\", \"$http\", function ($q, Es, nlptabConfig, $http) {\n    this.withId = function (id) {\n      return Es.getSource({\n        index: nlptabConfig.instanceName + 'analysis',\n        type: 'AnalysisTask',\n        id: id\n      });\n    };\n\n    function FeatureValueMapping() {\n      this.valueMappings = [];\n    }\n\n    FeatureValueMapping.prototype.removeValueMapping = function (index) {\n      this.valueMappings.splice(index, 1);\n    };\n\n    FeatureValueMapping.prototype.addValueMapping = function () {\n      this.valueMappings.push({});\n    };\n\n    this.createFeatureValueMapping = function () {\n      return new FeatureValueMapping();\n    };\n\n    this.runAnalysis = function (hypothesisUnitOfAnalysis, referenceUnitOfAnalysis, featureValueMappings, description, hitMiss) {\n      var config = {\n        hypothesisUnitOfAnalysis: {\n          selectedSystem: hypothesisUnitOfAnalysis.selectedSystem.index,\n          selectedType: hypothesisUnitOfAnalysis.selectedType.typeName,\n          filters: hypothesisUnitOfAnalysis.filters\n        },\n        referenceUnitOfAnalysis: {\n          selectedSystem: referenceUnitOfAnalysis.selectedSystem.index,\n          selectedType: referenceUnitOfAnalysis.selectedType.typeName,\n          filters: referenceUnitOfAnalysis.filters\n        },\n        featureValueMappings: featureValueMappings,\n        instance: nlptabConfig.instanceName,\n        description: description,\n        fuzzDistance: 0,\n        hitMiss: hitMiss ? hitMiss ? 'true' : 'false' : 'false'\n      };\n\n      return $http.post(nlptabConfig.esServer + '/_nlptab-analysis', config);\n    };\n  }]);\n\n},{}],67:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .service('CoOccurrenceMatches', [\"$q\", \"Es\", \"nlptabConfig\", function CoOccurrenceMatches($q, Es, nlptabConfig) {\n    var index = nlptabConfig.instanceName + 'analysis';\n    var tpType = 'TruePositive';\n    var fpType = 'FalsePositive';\n    var fnType = 'FalseNegative';\n\n\n    this.withTypeAndId = function (type, analysisId, pagination) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: pagination.getFrom(),\n          size: pagination.getSize(),\n          query: {\n            bool: {\n              must: [\n                {\n                  match: {\n                    analysisId: analysisId\n                  }\n                }\n              ],\n              should: [\n                {\n                  query_string: {\n                    default_field: 'firstId',\n                    query: '*'\n                  }\n                },\n                {\n                  query_string: {\n                    default_field: 'secondId',\n                    query: '*'\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }).then(function (body) {\n        return {\n          totalItems: body.hits.total,\n          coOccurrenceMatches: body.hits.hits.map(function (hit) {\n            return hit._source;\n          })\n        };\n      });\n    };\n  }]);\n\n},{}],68:[function(require,module,exports){\n'use strict';\n\nangular.module('nlptabApp')\n  .service('MatchCounts', [\"$q\", \"Es\", \"nlptabConfig\", function MatchCounts($q, Es, nlptabConfig) {\n    var index = nlptabConfig.instanceName + 'analysis';\n    var type = 'MatchCounts';\n\n    /**\n     * Uses an elasticsearch facet to get all tested systems.\n     *\n     * @returns {Array}\n     */\n    this.allTested = function () {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: 0,\n          size: 0,\n          query: {\n            match_all: {}\n          },\n          aggs: {\n            tested: {\n              terms: {\n                field: 'hypothesisUnitOfAnalysis.systemIndex',\n                size: 10\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.aggregations && body.aggregations.tested && body.aggregations.tested.buckets) {\n          return body.aggregations.tested.buckets.map(function (item) {\n            return item.key;\n          });\n        } else {\n          return $q.reject('Invalid response');\n        }\n      });\n    };\n\n    /**\n     * Uses a faceted elasticsearch search to return all gold standards for a specific tested\n     *\n     * @param {String} tested\n     * @returns {Array}\n     */\n    this.allGoldStandardsForTested = function (tested) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: 0,\n          size: 0,\n          query: {\n            term: {\n              'hypothesisUnitOfAnalysis.systemIndex': tested\n            }\n          },\n          aggs: {\n            gold: {\n              terms: {\n                field: 'referenceUnitOfAnalysis.systemIndex',\n                size: 10\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.aggregations && body.aggregations.gold && body.aggregations.gold.buckets) {\n          return body.aggregations.gold.buckets.map(function (item) {\n            return item.key;\n          });\n        } else {\n          return $q.reject('Invalid response');\n        }\n      });\n    };\n\n    /**\n     * Returns all match counts that have the tested system and the gold standard.\n     *\n     * @param {String} tested\n     * @param {String} goldStandard\n     * @param {Object} pagination\n     * @returns {Array}\n     */\n    this.withTestedAndGoldStandard = function (tested, goldStandard, pagination) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: pagination.getFrom(),\n          size: pagination.getSize(),\n          query: {\n            bool: {\n              must: [\n                {\n                  term: {\n                    'hypothesisUnitOfAnalysis.systemIndex': tested\n                  }\n                },\n                {\n                  term: {\n                    'referenceUnitOfAnalysis.systemIndex': goldStandard\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits) {\n          return {\n            matchCounts: body.hits.hits.map(function (hit) {\n              return angular.extend(hit._source, {\n                _id: hit._id\n              });\n            }),\n            total: body.hits.total\n          };\n        } else {\n          return $q.reject('Invalid response');\n        }\n      });\n    };\n\n    this.withId = function (id) {\n      return Es.get({\n        index: index,\n        type: type,\n        id: id\n      }).then(function (response) {\n        return response._source;\n      });\n    };\n\n    this.countTested = function (tested) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: 0,\n          size: 0,\n          query: {\n            term: {\n              'hypothesisUnitOfAnalysis.systemIndex': tested\n            }\n          }\n        }\n      }).then(function (body) {\n        return body.hits.total;\n      });\n    };\n\n    this.countTestedAndGold = function(tested, goldStandard) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: 0,\n          size: 0,\n          query: {\n            bool: {\n              must: [\n                {\n                  term: {\n                    'hypothesisUnitOfAnalysis.systemIndex': tested\n                  }\n                },\n                {\n                  term: {\n                    'referenceUnitOfAnalysis.systemIndex': goldStandard\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits) {\n          return body.hits.total;\n        } else {\n          return $q.reject('Invalid response');\n        }\n      });\n    }\n  }]);\n\n},{}]},{},[8])\n\n","'use strict';\n\nangular.module('nlptabApp')\n    .controller('DocumentSearchExploreCtrl', function ($scope, $routeParams, $location, $q, sofa, systems) {\n        // scope properties\n        var indexes = systems.casProcessingIndexes.map(function (obj) {\n            return obj.index;\n        });\n        $scope.sofaIdentifier = $routeParams.sofaIdentifier;\n        $scope.sofaText = sofa.text;\n        $scope.textSpan = {\n            begin: +$routeParams.begin,\n            end: +$routeParams.end || $scope.sofaText.length\n        };\n\n        $scope.searchingAnnotatations = false;\n\n        var updateRanges = function () {\n            $scope.highlightedRange = {\n                outer: $scope.textSpan\n            };\n            if ($scope.selectedAnnotationLocation) {\n                $scope.highlightedRange.inner = {\n                    begin: $scope.selectedAnnotationLocation.begin,\n                    end: $scope.selectedAnnotationLocation.end\n                };\n            } else {\n                $scope.highlightedRange.inner = {\n                    begin: $scope.textSpan.begin,\n                    end: $scope.textSpan.begin\n                };\n            }\n        };\n\n        $scope.$watch('textSpan', function () {\n            if ($scope.selectedAnnotationLocation &&\n                $scope.textSpan.begin >= $scope.selectedAnnotationLocation.begin) {\n                delete $scope.selectedAnnotationLocation;\n            }\n            if ($scope.selectedAnnotationLocation &&\n                $scope.textSpan.end <= $scope.selectedAnnotationLocation.end) {\n                delete $scope.selectedAnnotationLocation;\n            }\n            $location.search('begin', $scope.textSpan.begin).replace();\n            $location.search('end', $scope.textSpan.end).replace();\n            updateRanges();\n        }, true);\n\n        $scope.selectTypeInSystem = function (typeInSystem, index) {\n            if ($scope.selectedTypeInSystem === typeInSystem) {\n                $scope.clearSelectedTypeInSystem();\n            } else {\n                $scope.selectedTypeInSystem = typeInSystem;\n                $location.search('tindex', index).replace();\n            }\n        };\n\n        $scope.clearSelectedTypeInSystem = function () {\n            delete $scope.selectedAnnotationLocation;\n            updateRanges();\n            delete $scope.selectedTypeInSystem;\n            $location.search('tindex', null).replace();\n        };\n\n        $scope.selectAnnotationLocation = function (annotationLocation) {\n            $scope.selectedAnnotationLocation = annotationLocation;\n            updateRanges();\n        };\n\n        $scope.clearSelectedText = function () {\n            $scope.textSpan.begin = 0;\n            $scope.textSpan.end = 0;\n        };\n\n        $scope.checkSelectedText = function () {\n            var selection = window.getSelection();\n            var range = selection.getRangeAt(0);\n            $scope.textSpan.begin = range.startOffset;\n            $scope.textSpan.end = range.endOffset;\n            selection.removeAllRanges();\n        };\n\n        updateRanges();\n    });\n","'use strict';\nangular.module('nlptabApp')\n    .controller('DocumentSearchCtrl', function ($scope, $routeParams, $location, Sofa, nlptabConfig) {\n        $scope.pagination = {page: 1, itemsPerPage: 3};\n\n        $scope.queryString = $routeParams.q || '';\n        $scope.fetching = false;\n\n        var escape = new RegExp(/([\\-\\&\\|!\\(\\){}\\[\\]\\^~*?:\\\\\\+])/g);\n        var remove = new RegExp(/([\"\\'])/g);\n\n        var fetchSofas = function () {\n            var removed = $scope.queryString.replace(remove, '');\n            var queryString = removed.replace(escape, '\\\\$1');\n            $location.search('q', $scope.queryString).replace();\n            var from = ($scope.pagination.page - 1) * $scope.pagination.itemsPerPage;\n            $scope.fetching = true;\n            Sofa.containingPhraseInText(nlptabConfig.instanceName + 'search', queryString, from, $scope.pagination.itemsPerPage)\n                .then(function (result) {\n                    $scope.pagination.totalItems = result.total;\n\n                    var ranges = [];\n                    for (var i = 0; i < result.sofas.length; i++) {\n                        var sofa = result.sofas[i];\n                        var idx = sofa.text.toLowerCase().indexOf(removed.toLowerCase());\n                        var end = idx + removed.length;\n                        var range = { inner: { begin: idx, end: idx }, outer: { begin: idx, end: end } };\n                        ranges.push(range);\n                    }\n                    $scope.sofas = result.sofas;\n                    $scope.ranges = ranges;\n                    $scope.fetching = false;\n                });\n        };\n\n        $scope.$watch('queryString', function (newVal, oldVal) {\n            if (newVal !== oldVal) {\n                fetchSofas();\n            }\n        });\n\n        $scope.$watch('pagination.page', function (newVal, oldVal) {\n            if (newVal !== oldVal) {\n                fetchSofas();\n            }\n        });\n\n        fetchSofas($scope.queryString);\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('examplesInSpan', function () {\n    return {\n      templateUrl: '../../../partials/annotation_analysis/examples-in-span.html',\n      restrict: 'E',\n      controller: function ($scope, FeatureStructure) {\n        $scope.pagination = {\n          page: 1,\n          itemsPerPage: 1\n        };\n\n        var fetchAssociatedFeatureStructure = function () {\n          if ($scope.selectedTypeInSystem) {\n            FeatureStructure.withTypeInSystemAtLocation($scope.selectedTypeInSystem.type,\n              $scope.selectedTypeInSystem.systemIndex, $scope.sofaIdentifier, $scope.textSpan.begin,\n              $scope.textSpan.end, $scope.textSpan.begin, $scope.textSpan.end, $scope.pagination.page)\n              .then(function (result) {\n                $scope.pagination.totalItems = result.totalItems;\n\n                $scope.featureStructure = result.featureStructure;\n\n                $scope.selectAnnotationLocation(result.featureStructure.primaryLocation);\n              });\n          }\n        };\n\n\n        $scope.$watch('pagination.page', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            fetchAssociatedFeatureStructure();\n          }\n        });\n\n        $scope.$watch('selectedTypeInSystem', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            $scope.pagination.page = 1;\n            fetchAssociatedFeatureStructure();\n          }\n        });\n\n        fetchAssociatedFeatureStructure();\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('fsTypesInSpanTable', function () {\n    return {\n      templateUrl: '../../../partials/annotation_analysis/fs-types-in-span-table.html',\n      restrict: 'E',\n      controller: function ($scope, $routeParams, $location, FeatureStructure, CasProcessingIndex) {\n        $scope.pagination = {\n          page: 1,\n          itemsPerPage: 8\n        };\n\n        $scope.fetching = false;\n\n        var restorationPage = $routeParams.tpage;\n        var restorationTypeIndex = $routeParams.tindex;\n\n        var fetchAssociatedFsTypes = function () {\n          $scope.fetching = true;\n          CasProcessingIndex.all(0, 20).then(function (result) {\n            var indexes = result.casProcessingIndexes.map(function (currentValue) {\n              return currentValue.index;\n            });\n            FeatureStructure.getTypesInRange(indexes, $scope.sofaIdentifier, $scope.textSpan.begin,\n              $scope.textSpan.end)\n              .then(function (result) {\n                $scope.pagination.totalItems = result.length;\n                $scope.typeInSystems = result;\n                if (restorationPage) {\n                  $scope.pagination.page = restorationPage;\n                  restorationPage = null;\n                }\n                if (restorationTypeIndex) {\n                  $scope.selectTypeInSystem($scope.typeInSystems[restorationTypeIndex],\n                    restorationTypeIndex);\n                  restorationTypeIndex = null;\n                }\n                $scope.fetching = false;\n              });\n          });\n        };\n\n        $scope.$watch('textSpan', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            fetchAssociatedFsTypes();\n          }\n        }, true);\n\n        $scope.$watch('pagination.page', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            $scope.from = ($scope.pagination.page - 1) * $scope.pagination.itemsPerPage;\n            $location.search('tpage', $scope.pagination.page).replace();\n            if ($scope.selectedTypeInSystem) {\n              var index = $scope.typeInSystems.indexOf($scope.selectedTypeInSystem);\n              if (index < $scope.from || index >= $scope.from + $scope.pagination.itemsPerPage) {\n                $scope.clearSelectedTypeInSystem();\n              }\n            }\n          }\n        });\n\n        fetchAssociatedFsTypes();\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n    .directive('spanEditor', function () {\n        return {\n            templateUrl: '../../../partials/annotation_analysis/span-editor.html',\n            restrict: 'E',\n            transclude: true,\n            scope: {\n                min: '=',\n                max: '=',\n                value: '='\n            },\n            link: function postLink(scope) {\n                scope.canDecrement = function () {\n                    return scope.value > scope.min;\n                };\n                scope.decrement = function () {\n                    scope.value--;\n                };\n                scope.canIncrement = function () {\n                    return scope.value < scope.max;\n                };\n                scope.increment = function () {\n                    scope.value++;\n                };\n            }\n        };\n    });\n","'use strict';\n\nrequire('./controllers/document-search');\nrequire('./controllers/document-search-explore');\nrequire('./directives/examples-in-span');\nrequire('./directives/fs-types-in-span-table');\nrequire('./directives/span-editor');\n","'use strict';\n\nrequire('../dist/templateCachePartials');\n\nvar deps = ['ngRoute', 'elasticsearch', 'ui.bootstrap', 'ui.select', 'ngSanitize', 'ngFileUpload', 'nlptabPartials'];\n\nangular.module('nlptabApp', deps)\n  .config(function ($routeProvider, nlptabConfig) {\n    $routeProvider.when('/main', {\n      templateUrl: function () {\n        if (nlptabConfig.isBio) {\n          return '/partials/common/bio-main.html';\n        } else {\n          return '/partials/common/main.html';\n        }\n      },\n      reloadOnSearch: false\n    }).when('/analysis', {\n      templateUrl: '/partials/type_systems_analysis/analysis.html',\n      controller: 'AnalysisCtrl',\n      reloadOnSearch: false\n    }).when('/analysis-results', {\n      templateUrl: '/partials/type_systems_analysis/analysis-results.html',\n      controller: 'AnalysisResultsCtrl',\n      reloadOnSearch: false\n    }).when('/analysis-results-explore/:matchCountsId', {\n      templateUrl: '/partials/type_systems_analysis/analysis-results-explore.html',\n      controller: 'AnalysisResultsExploreCtrl',\n      reloadOnSearch: false,\n      resolve: {\n        matchCounts: function (MatchCounts, $route) {\n          return MatchCounts.withId($route.current.params.matchCountsId);\n        }\n      }\n    }).when('/analysis-progress/:analysisId', {\n      templateUrl: '/partials/type_systems_analysis/analysis-progress.html',\n      controller: 'AnalysisProgressCtrl',\n      reloadOnSearch: false\n    }).when('/analysis-builder', {\n      templateUrl: '/partials/type_systems_analysis/analysis-builder.html',\n      controller: 'AnalysisBuilderCtrl',\n      reloadOnSearch: false\n    }).when('/document-search', {\n      templateUrl: '/partials/annotation_analysis/document-search.html',\n      controller: 'DocumentSearchCtrl',\n      reloadOnSearch: false\n    }).when('/document-search/explore/:sofaIdentifier', {\n      templateUrl: '/partials/annotation_analysis/document-search-explore.html',\n      controller: 'DocumentSearchExploreCtrl',\n      reloadOnSearch: false,\n      resolve: {\n        sofa: function ($route, Sofa) {\n          return Sofa.withSofaIdentifier(nlptabConfig.instanceName + 'search', $route.current.params.sofaIdentifier);\n        },\n        systems: function (CasProcessingIndex) {\n          return CasProcessingIndex.all(0, 40);\n        }\n      }\n    }).when('/type-systems', {\n      templateUrl: '/partials/systems/systems-list.html',\n      controller: 'SystemsListCtrl',\n      reloadOnSearch: false\n    }).when('/system/:systemIndex', {\n      templateUrl: '/partials/systems/system.html',\n      controller: 'SystemCtrl',\n      reloadOnSearch: false,\n      resolve: {\n        system: function ($route, CasProcessingIndex) {\n          return CasProcessingIndex.withIndexName($route.current.params.systemIndex);\n        }\n      }\n    }).when('/system-builder', {\n      templateUrl: '/partials/systems/system-builder.html',\n      controller: 'SystemBuilderCtrl',\n      reloadOnSearch: false\n    }).when('/system-task-progress/:index', {\n      templateUrl: '/partials/systems/system-task-progress.html',\n      controller: 'SystemTaskProgressCtrl',\n      reloadOnSearch: false\n    }).otherwise({\n      redirectTo: '/main'\n    });\n  });\n\nrequire('./annotation_analysis/index');\nrequire('./common/index');\nrequire('./systems/index');\nrequire('./type_system_analysis/index');\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('FsInstanceModalCtrl',\n    /**\n     * Controller for a feature structure instance info modal.\n     *\n     * @param {$rootScope.Scope} $scope angular scope injected.\n     * @param {object} $modalInstance injected modal instance.\n     * @param {FeatureStructure} FeatureStructure injected feature structure service.\n     * @param {string} fsId resolved argument for the\n     * @param {string} systemIndex resolved argument for the system index.\n     */\n    function ($scope, $modalInstance, FeatureStructure, fsId, systemIndex) {\n      /**\n       * Scope property for the system index.\n       *\n       * @type {string} system index\n       */\n      $scope.systemIndex = systemIndex;\n\n      FeatureStructure.withId(fsId, systemIndex).then(function (result) {\n        $scope.featureStructure = result;\n      });\n\n      /**\n       * Scope function for dismissing the modal.\n       */\n      $scope.done = function () {\n        $modalInstance.dismiss('done');\n      };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n    .directive('activityIndicator', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, elem, attrs) {\n                var opts = {\n                    lines: attrs.spinnerLines || 9, // The number of lines to draw\n                    length: attrs.spinnerLength || 4, // The length of each line\n                    width: attrs.spinnerWidth || 2, // The line thickness\n                    radius: attrs.spinnerRadius || 4, // The radius of the inner circle\n                    corners: attrs.spinnerCorners || 1, // Corner roundness (0..1)\n                    rotate: attrs.spinnerRotate || 23, // The rotation offset\n                    direction: attrs.spinnerDirection || 1, // 1: clockwise, -1: counterclockwise\n                    color: attrs.spinnerColor || '#000', // #rgb or #rrggbb or array of colors\n                    speed: attrs.spinnerSpeed || 1, // Rounds per second\n                    trail: attrs.spinnerTrail || 60, // Afterglow percentage\n                    shadow: false, // Whether to render a shadow\n                    hwaccel: false, // Whether to use hardware acceleration\n                    className: 'spinner', // The CSS class to assign to the spinner\n                    zIndex: 2e9, // The z-index (defaults to 2000000000)\n                    top: '50%', // Top position relative to parent\n                    left: '50%' // Left position relative to parent\n                };\n                var spinner = new Spinner(opts).spin();\n                var obj = elem.get(0);\n                obj.style.width = (opts.length + opts.radius) * 2 + '2px';\n                obj.style.height = (opts.length + opts.radius) * 2 + '2px';\n                obj.style.position = 'relative';\n                obj.appendChild(spinner.el);\n            }\n        };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('annotationFromSofa', function () {\n    return {\n      controller: function ($scope, FeatureStructure, Sofa, nlptabConfig) {\n        $scope.$watch('featureStructure._id', function (newValue) {\n          if (newValue) {\n            Sofa.withSofaIdentifier(nlptabConfig.instanceName + 'search', $scope.featureStructure.documentIdentifier)\n              .then(function (sofa) {\n                var minDistance;\n                var documentLocations = $scope.featureStructure.documentLocations;\n                if (!documentLocations) {\n                  return;\n                }\n                for (var i=0; i<documentLocations.length; i++) {\n                  if (!minDistance || minDistance.distance > documentLocations[i].distance) {\n                    minDistance = documentLocations[i];\n                  }\n                }\n\n                var sofaText = sofa.text;\n\n                var substringStart = window.Math.max(0, minDistance.begin - 80);\n                var substringEnd = window.Math.min(sofaText.length, minDistance.end + 80);\n\n                $scope.preText = sofaText.substring(substringStart, minDistance.begin);\n                if (substringStart !== 0) {\n                  $scope.preText = '... ' + $scope.preText;\n                }\n                $scope.annotationText = sofaText.substring(minDistance.begin, minDistance.end);\n                $scope.postText = sofaText.substring(minDistance.end, substringEnd);\n                if (substringEnd !== sofaText.length) {\n                  $scope.postText = $scope.postText + ' ...';\n                }\n              });\n          }\n        });\n      },\n      restrict: 'E',\n      scope: {\n        featureStructure: '='\n      },\n      templateUrl: '/partials/common/annotation-from-sofa.html'\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n    .directive('featureName', function () {\n        return {\n            template: function (element, attrs) {\n                //if (typeof attrs.unlinked !== 'undefined') {\n                    return '<span tooltip=\"{{name}}\">{{shortenedName}}</span>';\n                //} else {\n                 //   return '<a ng-href=\"{{url}}\" tooltip=\"{{name}}\">{{shortenedName}}</a>';\n                //}\n            },\n            restrict: 'E',\n            scope: {\n                name: '=',\n                systemIndex: '='\n            },\n            link: function postLink(scope) {\n                if (scope.name) {\n                    var splits = scope.name.split(';');\n                    scope.shortenedName = splits[1];\n                    var type = splits[0].replace(/_/g, '.');\n                    if (scope.systemIndex) {\n                        scope.url = '#/system/' + scope.systemIndex + '?type=' + type + '&feature=' + scope.shortenedName;\n                    }\n                }\n            }\n        };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('featureValues', function (FeatureStructure) {\n    return {\n      templateUrl: '/partials/common/feature-values.html',\n      restrict: 'E',\n      scope: {\n        systemIndex: '=',\n        type: '=',\n        feature: '='\n      },\n      link: function postLink(scope) {\n        var fetch = function () {\n          FeatureStructure.termsAndMissingForFeature(scope.systemIndex, scope.type,\n            FeatureStructure.mapToEsFeature(scope.feature)).then(function (result) {\n              scope.values = result.values;\n              scope.count = result.count;\n            });\n        };\n\n        fetch();\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n    .directive('fsInstanceId', function () {\n        return {\n            template: '<a ng-if=\"fsId\" ng-click=\"open()\">{{fsId}} <span class=\"glyphicon glyphicon-new-window\"></span></a>' +\n                '<span ng-if=\"!fsId\">null</span>',\n            scope: {\n                fsId: '=',\n                systemIndex: '='\n            },\n            restrict: 'E',\n            controller: function ($scope, $modal) {\n                $scope.open = function () {\n                    if ($scope.fsId) {\n                        $modal.open({\n                            templateUrl: '/partials/common/fs-instance-modal.html',\n                            controller: 'FsInstanceModalCtrl',\n                            size: 'lg',\n                            resolve: {\n                                fsId: function () {\n                                    return $scope.fsId;\n                                },\n                                systemIndex: function () {\n                                    return $scope.systemIndex;\n                                }\n                            }\n                        });\n                    }\n                };\n            }\n        };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('fsInstanceInfo',\n    /**\n     * fs-instance-info element directive, creates an interface for viewing the feature values and\n     *\n     * @returns {{templateUrl: string, restrict: string, scope: {featureStructure: string}, link: fsInstanceInfo.link}}\n     */\n    function () {\n      return {\n        templateUrl: '/partials/common/fs-instance-info.html',\n        restrict: 'E',\n        scope: {\n          featureStructure: '='\n        },\n        /**\n         * Linking function for the fsInstanceInfoDirective.\n         *\n         * @param {$rootScope.Scope} scope\n         */\n        link: function (scope) {\n          /**\n           * Scope function that returns true if the object is empty.\n           *\n           * @param object javascript object\n           * @returns {boolean|*}\n           */\n          scope.isEmpty = function (object) {\n            return angular.equals(object, {});\n          };\n        }\n      };\n    });\n","'use strict';\nangular.module('nlptabApp')\n    .directive('highlightedText', function () {\n        return {\n            restrict: 'E',\n            scope: {\n                range: '=range',\n                text: '=text'\n            },\n            link: function (scope) {\n                var redraw = function (text) {\n                    if (text) {\n                        scope.pre = text.substring(0, scope.range.outer.begin);\n                        scope.preOuter = text.substring(scope.range.outer.begin, scope.range.inner.begin);\n                        scope.highlighted = text.substring(scope.range.inner.begin, scope.range.inner.end);\n                        scope.postOuter = text.substring(scope.range.inner.end, scope.range.outer.end);\n                        scope.post = text.substring(scope.range.outer.end, scope.text.length);\n                    }\n                };\n\n                scope.$watch('text', function (text) {\n                    redraw(text);\n                });\n\n                scope.$watch('range.outer', function () {\n                    redraw(scope.text);\n                });\n\n                scope.$watch('range.inner', function () {\n                    redraw(scope.text);\n                });\n            },\n            template: '<p class=\"document-text\">{{pre}}<span class=\"annotation\">{{preOuter}}</span>' +\n                '<span class=\"annotationInset\">{{highlighted}}</span>' +\n                '<span class=\"annotation\">{{postOuter}}</span>{{post}}</p>'\n        };\n    });\n","'use strict';\n\nrequire('./activity-indicator');\nrequire('./annotation-from-sofa');\nrequire('./feature-name');\nrequire('./feature-values');\nrequire('./fs-instance-id');\nrequire('./fs-instance-info');\nrequire('./highlighted-text');\nrequire('./navbar');\nrequire('./navbar-link');\nrequire('./potential-cui');\nrequire('./system-name');\nrequire('./type-name');\n","'use strict';\n\nangular.module('nlptabApp')\n    .directive('navbarLink', function () {\n        return {\n            restrict: 'A',\n            require: '^navbar',\n            link: function postLink(scope, element, attrs, navbarCtrl) {\n                if (attrs.navbarLink === navbarCtrl.selectedLink) {\n                    element.addClass('active');\n                }\n            }\n        };\n    });\n","'use strict';\nangular.module('nlptabApp')\n    .directive('navbar', function () {\n        return {\n            restrict: 'E',\n            templateUrl: '/partials/common/navbar.html',\n            scope: {\n                selectedLink: '='\n            },\n            controller: function navbarCtrl($scope) {\n                if ($scope.selectedLink) {\n                    this.selectedLink = $scope.selectedLink;\n                }\n            }\n        };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('potentialCui',\n    /**\n     * potential-cui element directive. Links to the UMLS Metathesarus browser if a cui matches a\n     *\n     * @returns {{template: string, restrict: string, scope: {value: string}, controller: potentialCui.controller}}\n     */\n    function () {\n      /**\n       * Pattern for a UMLS CUI.\n       *\n       * @type {RegExp}\n       */\n      var cui = /C[0-9]{7}/;\n\n      return {\n        template: '<span ng-if=\"!isCui\">{{value}}</span><a ng-if=\"isCui\" href=\"https://uts.nlm.nih.gov/metathesaurus.html;#{{value}};0;1;CUI;2015AA;EXACT_MATCH;*;\" target=\"_blank\">{{value}}</a>',\n        restrict: 'E',\n        scope: {\n          value: '='\n        },\n        /**\n         * Linking function for the is-cui directive.\n         *\n         * @param {$rootScope.Scope} scope angular scope\n         */\n        link: function (scope) {\n          /**\n           * Scope property, true if the value is a cui, false otherwise.\n           *\n           * @type {boolean}\n           */\n          scope.isCui = cui.test(scope.value);\n        }\n      };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('systemName', function () {\n    return {\n      template: function (element, attrs) {\n        if (typeof  attrs.unlinked !== 'undefined') {\n          return '<span>{{systemName}}</span>';\n        } else {\n          return '<a ng-href=\"{{url}}\">{{systemName}}</a>';\n        }\n      },\n      restrict: 'E',\n      scope: {\n        systemIndex: '='\n      },\n      controller: function ($scope, CasProcessingIndex) {\n        if ($scope.systemIndex) {\n          $scope.url = '#/system/' + $scope.systemIndex;\n          CasProcessingIndex.getSystemNameForIndex($scope.systemIndex).then(function (result) {\n            $scope.systemName = result;\n          });\n        }\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('typeName', function () {\n    return {\n      template: function (element, attrs) {\n        if (typeof attrs.unlinked !== 'undefined') {\n          return '<span tooltip=\"{{name}}\">{{shortenedName}}</span>';\n        } else {\n          return '<a ng-href=\"{{url}}\" tooltip=\"{{name}}\">{{shortenedName}}</a>';\n        }\n      },\n      restrict: 'E',\n      scope: {\n        name: '=',\n        systemIndex: '='\n      },\n      link: function postLink(scope) {\n        scope.$watch('name', function (name) {\n          if (name) {\n            var splits = name.split('.');\n            scope.shortenedName = splits[splits.length - 1];\n            if (/\\[\\]$/.test(scope.shortenedName)) {\n              scope.shortenedName = scope.shortenedName.replace(/\\[\\]$/, '');\n              scope.shortenedName = 'Array of ' + scope.shortenedName;\n              scope.name = name.replace(/\\[\\]$/, '');\n            }\n            if (scope.systemIndex) {\n              scope.url = '#/system/' + scope.systemIndex + '?type=' + scope.name + '&info';\n            }\n          }\n        });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n    .filter('startAt', function () {\n        return function(input, index) {\n            index = +index;\n            return input && input.slice(index);\n        };\n    });\n","'use strict';\n\nrequire('./controller/fs-instance-modal');\nrequire('./directives/index');\nrequire('./filters/start-at');\nrequire('./services/index');\n","'use strict';\n\nangular.module('nlptabApp')\n  .service('CasProcessingIndex', function CasProcessingIndex(Es, $q, nlptabConfig, $http) {\n    var systemNameCache = {};\n\n    this.getSystemNameForIndex = function (indexName) {\n      var deferred = $q.defer();\n      var systemName = systemNameCache[indexName];\n      if (!systemName) {\n        this.withIndexName(indexName).then(function (casProcessingIndex) {\n          systemName = casProcessingIndex.system;\n          systemNameCache[indexName] = systemName;\n          deferred.resolve(systemName);\n        }, function (error) {\n          deferred.reject(error);\n        });\n      } else {\n        deferred.resolve(systemName);\n      }\n      return deferred.promise;\n    };\n\n    this.withIndexName = function (indexName) {\n      return Es.search({\n        index: nlptabConfig.instanceName + 'metadata',\n        type: 'SystemIndex',\n        body: {\n          size: 1,\n          query: {\n            match: {\n              index: indexName\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits && body.hits.hits.length > 0) {\n          return body.hits.hits[0]._source;\n        } else {\n          return {};\n        }\n      });\n    };\n\n    this.search = function (query, size) {\n      return Es.search({\n        index: nlptabConfig.instanceName + 'metadata',\n        type: 'SystemIndex',\n        body: {\n          from: 0,\n          size: size,\n          query: {\n            multi_match: {\n              query: query,\n              type: 'cross_fields',\n              operator: 'and',\n              fields: ['system', 'description']\n            }\n          }\n        }\n      });\n    };\n\n    this.all = function () {\n      return Es.search({\n        index: nlptabConfig.instanceName + 'metadata',\n        type: 'SystemIndex',\n        body: {\n          from: 0,\n          size: 30,\n          query: {\n            term: {\n              ready: true\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits) {\n          return {total: body.hits.total, casProcessingIndexes: body.hits.hits.map(function (currentValue) {\n            return currentValue._source;\n          })};\n        } else {\n          return {total: 0, casProcessingIndexes: []};\n        }\n      });\n    };\n\n    this.deleteSystem = function (system) {\n      return $http.post(nlptabConfig.esPath + '/_nlptab-deletesystem?instance=' + nlptabConfig.instanceName + '&id=' + system);\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp').\n    service('Es', function Es(esFactory, $location, nlptabConfig) {\n        return esFactory({\n            host: nlptabConfig.esServer\n        });\n    });\n","'use strict';\n\nangular.module('nlptabApp').service('FeatureStructure',\n  /**\n   * @class nlptabApp.common.FeatureStructure\n   * @description service for fetching feature structures from elasticsearch.\n   * @param $q angular promises service.\n   * @param Es elasticsearch service\n   * @constructor\n   */\n  function FeatureStructure($q, Es) {\n    function mapSources(body) {\n      return body.hits.hits.map(function (currentValue) {\n        return angular.extend(currentValue._source, {\n          '_index': currentValue._index,\n          '_id': currentValue._id\n        });\n      });\n    }\n\n    this.withId = function (fsId, systemIndex) {\n      var search = {};\n\n      if (systemIndex) {\n        search.index = systemIndex;\n      }\n\n      search.type = 'FeatureStructure';\n      search.body = {\n        query: {\n          ids: {\n            values: [\n              fsId\n            ]\n          }\n        },\n        size: 1\n      };\n\n      var deferred = $q.defer();\n      Es.search(search).then(function (body) {\n        if (body && body.hits && body.hits.hits && body.hits.hits.length > 0) {\n          deferred.resolve(angular.extend(body.hits.hits[0]._source, {\n            _index: body.hits.hits[0]._index,\n            _id: body.hits.hits[0]._id\n          }));\n        } else {\n          deferred.resolve(null);\n        }\n\n      });\n      return deferred.promise;\n    };\n\n    this.ofType = function (index, type, from, size) {\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: size,\n          from: from,\n          query: {\n            match: {\n              'types': type\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits) {\n          return {total: body.hits.total, featureStructures: mapSources(body)};\n        } else {\n          return $q.reject();\n        }\n      });\n    };\n\n    this.primaryTypesFor = function (systemIndex, type) {\n      return Es.search({\n        index: systemIndex,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            term: {\n              types: {\n                value: type\n              }\n            }\n          },\n          aggs: {\n            typeNames: {\n              terms: {\n                field: 'primaryType',\n                size: 0,\n                order: {\n                  _term: 'asc'\n                }\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.aggregations && body.aggregations.typeNames && body.aggregations.typeNames.buckets) {\n          return body.aggregations.typeNames.buckets.map(function (val) {\n            return val.key;\n          });\n        } else {\n          return $q.reject();\n        }\n      });\n    };\n\n    /**\n     * @param index\n     * @param type\n     * @param primaryTypes\n     * @param {nlptabApp.common.PaginationInstance} pagination\n     * @returns {*}\n     */\n    this.ofTypeWithoutPrimaryTypes = function (index, type, primaryTypes, pagination) {\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: pagination.getSize(),\n          from: pagination.getFrom(),\n          query: {\n            bool: {\n              must: [\n                {\n                  term: {\n                    types: {\n                      value: type\n                    }\n                  }\n                }\n              ],\n              must_not: [\n                {\n                  terms: {\n                    primaryType: primaryTypes\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits) {\n          pagination.totalItems = body.hits.total;\n          return mapSources(body);\n        } else {\n          return $q.reject();\n        }\n      });\n    };\n\n    this.termsNotIn = function (index, type, feature, terms, size) {\n      var isBoolean = feature.indexOf('booleanFeatures') === 0;\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            bool: {\n              must: [\n                {\n                  term: {\n                    types: type\n                  }\n                }\n              ],\n              must_not: [\n                {\n                  terms: {\n                    feature: terms\n                  }\n                }\n              ]\n            }\n          },\n          aggs: {\n            values: {\n              terms: {\n                field: feature,\n                size: angular.isDefined(size) ? size : 10\n              }\n            },\n            missingValues: {\n              missing: {\n                field: feature\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        var buckets = {};\n        if (body && body.aggregations && body.aggregations.values) {\n          buckets.values = body.aggregations.values.buckets;\n          if (isBoolean) {\n            buckets.values = buckets.values.map(function (bucket) {\n              bucket.key = bucket.key === 'T';\n              return bucket;\n            });\n          }\n        }\n        if (body && body.aggregations && body.aggregations.missingValues) {\n          buckets.missing = body.aggregations.missingValues;\n        }\n        if (body && body.hits) {\n          buckets.count = body.hits.total;\n        }\n        return buckets;\n      });\n    };\n\n    this.termsAndMissingForFeature = function (index, type, feature, size) {\n      var isBoolean = feature.indexOf('booleanFeatures') === 0;\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            term: {\n              types: type\n            }\n          },\n          aggs: {\n            values: {\n              terms: {\n                field: feature,\n                size: angular.isDefined(size) ? size : 10\n              }\n            },\n            missingValues: {\n              missing: {\n                field: feature\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        var buckets = {};\n        if (body && body.aggregations && body.aggregations.values) {\n          buckets.values = body.aggregations.values.buckets;\n          if (isBoolean) {\n            buckets.values = buckets.values.map(function (bucket) {\n              bucket.key = bucket.key === 'T';\n              return bucket;\n            });\n          }\n        }\n        if (body && body.aggregations && body.aggregations.missingValues) {\n          buckets.missing = body.aggregations.missingValues;\n        }\n        if (body && body.hits) {\n          buckets.count = body.hits.total;\n        }\n        return buckets;\n      });\n    };\n\n    this.termsMissingAndCardinalityForFeature = function (index, type, feature, size) {\n      return Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            term: {\n              types: type\n            }\n          },\n          aggs: {\n            values: {\n              terms: {\n                field: feature,\n                size: angular.isUndefined(size) ? 10 : size\n              }\n            },\n            missingValues: {\n              missing: {\n                field: feature\n              }\n            },\n            others: {\n              cardinality: {\n                field: feature,\n                precision_threshold: 10000\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        var buckets = {};\n        if (body && body.aggregations && body.aggregations.values) {\n          buckets.values = body.aggregations.values.buckets;\n        }\n        if (body && body.aggregations && body.aggregations.missingValues) {\n          buckets.missing = body.aggregations.missingValues;\n        }\n        if (body && body.aggregations && body.aggregations.others) {\n          buckets.otherUniqueValues = body.aggregations.others;\n        }\n        if (body && body.hits) {\n          buckets.count = body.hits.total;\n        }\n        return buckets;\n      });\n    };\n\n    this.termsMissingCardinalityAndPercentilesForFeature = function (index, type, feature) {\n      var deferred = $q.defer();\n\n      Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        body: {\n          size: 0,\n          query: {\n            term: {\n              types: type\n            }\n          },\n          aggs: {\n            values: {\n              terms: {\n                field: feature\n              }\n            },\n            missingValues: {\n              missing: {\n                field: feature\n              }\n            },\n            others: {\n              cardinality: {\n                field: feature,\n                precision_threshold: 10000\n              }\n            },\n            percentiles: {\n              percentiles: {\n                field: feature\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        var buckets = {};\n        if (body && body.aggregations && body.aggregations.values) {\n          buckets.values = body.aggregations.values.buckets;\n        }\n        if (body && body.aggregations && body.aggregations.missingValues) {\n          buckets.missing = body.aggregations.missingValues;\n        }\n        if (body && body.aggregations && body.aggregations.others) {\n          buckets.otherUniqueValues = body.aggregations.others;\n        }\n        if (body && body.aggregations && body.aggregations.percentiles) {\n          var percentiles = [];\n          for (var percentile in body.aggregations.percentiles.values) {\n            if (body.aggregations.percentiles.values.hasOwnProperty(percentile)) {\n              percentiles.push({\n                percentile: +percentile,\n                count: body.aggregations.percentiles.values[percentile]\n              });\n            }\n          }\n          buckets.percentiles = percentiles;\n        }\n        if (body && body.hits) {\n          buckets.count = body.hits.total;\n        }\n        deferred.resolve(buckets);\n      });\n      return deferred.promise;\n    };\n\n    this.countTotal = function (index) {\n      var deferred = $q.defer();\n      Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        search_type: 'count'\n      }).then(function (body) {\n        if (body && body.hits) {\n          deferred.resolve(body.hits.total);\n        }\n      });\n      return deferred.promise;\n    };\n\n    this.countOfType = function (index, type) {\n      var deferred = $q.defer();\n      Es.search({\n        index: index,\n        type: 'FeatureStructure',\n        search_type: 'count',\n        body: {\n          query: {\n            term: {\n              types: type\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits) {\n          deferred.resolve(body.hits.total);\n        }\n      });\n      return deferred.promise;\n    };\n\n    this.withTypeInSystemAtLocation = function (type, systemIndex, documentIdentifier, beginMin, beginMax, endMin, endMax, page) {\n      var sBody = {\n        size: 1,\n        from: page - 1,\n        query: {\n          bool: {\n            must: [\n              {\n                term: {\n                  types: type\n                }\n              },\n              {\n                term: {\n                  documentIdentifier: documentIdentifier\n                }\n              },\n              {\n                range: {\n                  'primaryLocation.begin': {\n                    gte: beginMin,\n                    lte: beginMax\n                  }\n                }\n              },\n              {\n                range: {\n                  'primaryLocation.end': {\n                    gte: endMin,\n                    lte: endMax\n                  }\n                }\n              }\n            ]\n          }\n        }\n      };\n      sBody.sort = [\n        {'primaryLocation.begin': 'asc'},\n        {'primaryLocation.end': 'asc'}\n      ];\n\n      var deferred = $q.defer();\n      Es.search({\n        index: systemIndex,\n        type: 'FeatureStructure',\n        body: sBody\n      }).then(function (body) {\n        var featureStructure;\n        var totalItems = 0;\n        if (body && body.hits && body.hits.hits && body.hits.hits.length > 0) {\n          var hit = body.hits.hits[0];\n          featureStructure = hit._source;\n          featureStructure._id = hit._id;\n          totalItems = body.hits.total;\n        }\n        deferred.resolve({totalItems: totalItems, featureStructure: featureStructure});\n      });\n\n      return deferred.promise;\n    };\n\n    this.getTypesInRange = function (indexes, documentIdentifier, begin, end) {\n      var sBody = {\n        size: 0,\n        'query': {\n          bool: {\n            must: [\n              {\n                range: {\n                  'primaryLocation.begin': {\n                    gte: begin,\n                    lte: end\n                  }\n                }\n              },\n              {\n                range: {\n                  'primaryLocation.end': {\n                    gte: begin,\n                    lte: end\n                  }\n                }\n              },\n              {\n                term: {\n                  documentIdentifier: documentIdentifier\n                }\n              }\n            ]\n          }\n        },\n        'aggs': {\n          'systemTerms': {\n            'terms': {\n              'field': 'system',\n              'order': {\n                '_term': 'asc'\n              },\n              'size': 0\n            },\n            'aggs': {\n              'typeTerms': {\n                'terms': {\n                  'field': 'types',\n                  'order': {\n                    '_term': 'asc'\n                  },\n                  'size': 0\n                }\n              }\n            }\n          }\n        }\n      };\n      var deferred = $q.defer();\n      Es.search({\n        index: indexes,\n        type: 'FeatureStructure',\n        search_type: 'count',\n        body: sBody\n      }).then(function (body) {\n        var typeInSystems = [];\n        if (body && body.aggregations && body.aggregations.systemTerms && body.aggregations.systemTerms.buckets) {\n          var systemBuckets = body.aggregations.systemTerms.buckets;\n          for (var i = 0; i < systemBuckets.length; i++) {\n            var systemKey = systemBuckets[i].key;\n            if (systemBuckets[i].typeTerms && systemBuckets[i].typeTerms.buckets) {\n              var typeBuckets = systemBuckets[i].typeTerms.buckets;\n              for (var j = 0; j < typeBuckets.length; j++) {\n                typeInSystems.push({\n                  systemIndex: systemKey,\n                  type: typeBuckets[j].key,\n                  count: typeBuckets[j].doc_count\n                });\n              }\n            }\n          }\n        }\n        deferred.resolve(typeInSystems);\n      }, function (error) {\n        deferred.reject();\n      });\n\n      return deferred.promise;\n    };\n\n    this.inSystemWithType = function (systemIndex, type, pagination) {\n      return Es.search({\n        index: systemIndex,\n        type: 'FeatureStructure',\n        body: {\n          size: pagination.getSize(),\n          from: pagination.getFrom(),\n          query: {\n            term: {\n              types: type\n            }\n          }\n        }\n      }).then(function (result) {\n        return {\n          total: result.hits.total,\n          featureStructures: mapSources(result)\n        };\n      });\n    };\n\n    var featureTypeMap = {\n      'uima.cas.Boolean': 'booleanFeatures',\n      'uima.cas.Byte': 'byteFeatures',\n      'uima.cas.Double': 'doubleFeatures',\n      'uima.cas.Float': 'floatFeatures',\n      'uima.cas.Integer': 'intFeatures',\n      'uima.cas.Long': 'longFeatures',\n      'uima.cas.Short': 'shortFeatures',\n      'uima.cas.String': 'stringFeatures',\n      'uima.cas.BooleanArray': 'BooleanArrayFeatures',\n      'uima.cas.ByteArray': 'ByteArrayFeatures',\n      'uima.cas.ShortArray': 'ShortArrayFeatures',\n      'uima.cas.IntegerArray': 'IntegerArrayFeatures',\n      'uima.cas.LongArray': 'LongArrayFeatures',\n      'uima.cas.FloatArray': 'FloatArrayFeatures',\n      'uima.cas.DoubleArray': 'DoubleArrayFeatures',\n      'uima.cas.StringArray': 'StringArrayFeatures',\n      'uima.cas.FloatList': 'FloatListFeatures',\n      'uima.cas.IntegerList': 'IntegerListFeatures',\n      'uima.cas.StringList': 'StringListFeatures'\n    };\n\n    this.mapToEsFeature = function (feature) {\n      return featureTypeMap[feature.valueType] + '.' + feature.name.replace(/\\./g, '_').replace(':', ';');\n    };\n  });\n","'use strict';\n\nrequire('./cas-processing-index');\nrequire('./es');\nrequire('./feature-structure');\nrequire('./index');\nrequire('./pagination');\nrequire('./sofa');\nrequire('./type');\n","'use strict';\n\nangular.module('nlptabApp').service('Pagination',\n  /**\n   * Pagination service.\n   *\n   * @class nlptabApp.common.Pagination\n   *\n   * @constructor\n   */\n  function Pagination() {\n    function PaginationInstance(page, itemsPerPage, totalItems) {\n      this.page = page ? page : 1;\n\n      this.itemsPerPage = itemsPerPage ? itemsPerPage : 10;\n\n      this.totalItems = totalItems ? totalItems : 0;\n    }\n\n    PaginationInstance.prototype.getFrom = function () {\n      return (this.page - 1) * this.itemsPerPage;\n    };\n\n    PaginationInstance.prototype.getSize = function () {\n      return this.itemsPerPage;\n    };\n\n    PaginationInstance.prototype.totalPages = function () {\n      return this.totalItems / this.itemsPerPage;\n    };\n\n    PaginationInstance.prototype.hasLowerPages = function () {\n      return this.page > 1;\n    };\n\n    PaginationInstance.prototype.increment = function () {\n      this.page = this.page + 1;\n    };\n\n    PaginationInstance.prototype.hasHigherPages = function () {\n      return this.page < this.totalPages();\n    };\n\n    PaginationInstance.prototype.decrement = function () {\n      this.page = this.page - 1;\n    };\n\n    PaginationInstance.prototype.reset = function () {\n      this.page = 1;\n      this.totalItems = 0;\n    };\n\n    /**\n     * Constructs a new pagination object.\n     *\n     * @param {number} [page=1] the current page, indexes starting at 1.\n     * @param {number} [itemsPerPage=10] the number of items that are displayed per page.\n     * @param {number} [totalItems=0] the total number of items fetched.\n     * @returns {nlptabApp.common.PaginationInstance}\n     */\n    this.withPageAndItemsPerPage = function (page, itemsPerPage, totalItems) {\n      return new PaginationInstance(page, itemsPerPage, totalItems);\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp').\n    service('Sofa', function Sofa($q, Es) {\n        var mapSources = function (body) {\n            if (body && body.hits && body.hits.hits) {\n                return body.hits.hits.map(function (currentValue) {\n                    return currentValue._source;\n                });\n            } else {\n                return [];\n            }\n        };\n\n        this.containingPhraseInText = function (indexName, queryString, from, size) {\n            var deferred = $q.defer();\n            var search = {\n                index: indexName,\n                type: 'Document',\n                body: {\n                    from: from,\n                    size: size\n                }\n            };\n\n            if (queryString && queryString.length > 0) {\n                search.body.query = {\n                    query_string: {\n                        default_field: 'text',\n                        query: '\"' + queryString + '\"'\n                    }\n                } ;\n            } else {\n                search.body.query = {\n                    match_all : {}\n                };\n            }\n\n            Es.search(search).then(function (body) {\n                var sources = mapSources(body);\n                deferred.resolve({total: body && body.hits && body.hits.total || 0, sofas: sources});\n            });\n            return deferred.promise;\n        };\n\n        this.withSofaIdentifier = function (index, sofaIdentifier) {\n            return Es.getSource({\n                index: index,\n                type: 'Document',\n                id: sofaIdentifier\n            }).then(function (result) {\n                return result;\n            });\n        };\n    });\n","'use strict';\n\nvar NAMES_MAP = {\n  'uima.cas.Boolean': 'booleanFeatures',\n  'uima.cas.Byte': 'byteFeatures',\n  'uima.cas.Short': 'shortFeatures',\n  'uima.cas.Integer': 'intFeatures',\n  'uima.cas.Long': 'longFeatures',\n  'uima.cas.Float': 'floatFeatures',\n  'uima.cas.Double': 'doubleFeatures',\n  'uima.cas.String': 'stringFeatures',\n  'uima.cas.BooleanArray': 'BooleanArrayFeatures',\n  'uima.cas.ByteArray': 'ByteArrayFeatures',\n  'uima.cas.ShortArray': 'ShortArrayFeatures',\n  'uima.cas.IntegerArray': 'IntegerArrayFeatures',\n  'uima.cas.LongArray': 'LongArrayFeatures',\n  'uima.cas.FloatArray': 'FloatArrayFeatures',\n  'uima.cas.DoubleArray': 'DoubleArrayFeatures',\n  'uima.cas.StringArray': 'StringArrayFeatures',\n  'uima.cas.FloatList': 'FloatListFeatures',\n  'uima.cas.IntegerList': 'IntegerListFeatures',\n  'uima.cas.StringList': 'StringListFeatures'\n};\n\nangular.module('nlptabApp')\n  .service('Type',\n    /**\n     * @class nlptabApp.common.Type\n     * @description service for fetching type objects from elasticsearch.\n     * @param $q angular Q service, injected.\n     * @param Es elasticsearch service, injected.\n     */\n    function ($q, Es) {\n      this.allInSystem = function (systemIndex, from, size, filter, source) {\n        var search = {\n          index: systemIndex,\n          type: 'Type',\n          body: {\n            from: from,\n            size: size,\n            query: {},\n            sort: [\n              {\n                'typeShortName.raw': {order: 'asc'}\n              }\n            ]\n          }\n        };\n        if (filter && filter.length > 0) {\n          search.body.query.match = {\n            typeShortName: filter\n          };\n        } else {\n          search.body.query.match_all = {};\n        }\n\n        if (source) {\n          search.body._source = source;\n        }\n\n        return Es.search(search).then(function (result) {\n          if (result && result.hits && result.hits.hits) {\n            var sources = result.hits.hits.map(function (val) {\n              return angular.extend(val._source, {\n                _id: val._id\n              });\n            });\n            return {total: result.hits.total, types: sources};\n          } else {\n            return {total: 0, types: []};\n          }\n        });\n      };\n\n      this.withName = function (systemIndex, typeName) {\n        return Es.search({\n          index: systemIndex,\n          type: 'Type',\n          body: {\n            size: 1,\n            query: {\n              term: {\n                typeName: typeName\n              }\n            }\n          }\n        }).then(function (body) {\n          if (body && body.hits && body.hits.hits && body.hits.hits.length > 0) {\n            return body.hits.hits[0]._source;\n          } else {\n            return $q.reject('not found');\n          }\n        });\n      };\n\n      this.findChildren = function (systemIndex, typeName) {\n        return Es.search({\n          index: systemIndex,\n          type: 'Type',\n          body: {\n            size: 0,\n            query: {\n              term: {\n                'parentTypes.raw': typeName\n              }\n            },\n            aggs: {\n              typeNames: {\n                terms: {\n                  field: 'typeName',\n                  size: 0,\n                  order: {\n                    _term: 'asc'\n                  }\n                }\n              }\n            }\n          }\n        }).then(function (body) {\n          if (body && body.aggregations && body.aggregations.typeNames && body.aggregations.typeNames.buckets) {\n            return body.aggregations.typeNames.buckets.map(function (val) {\n              return val.key;\n            });\n          } else {\n            return $q.reject();\n          }\n        });\n      };\n\n      this.subclasses = function (systemIndex, superclassName) {\n        return Es.search({\n          index: systemIndex,\n          type: 'Type',\n          body: {\n            size: 30,\n            query: {\n              term: {\n                'parentTypes.raw': superclassName\n              }\n            }\n          }\n        }).then(function (body) {\n          if (body && body.hits && body.hits.hits && body.hits.hits.length) {\n            return body.hits.hits.map(function (val) {\n              return val._source;\n            });\n          } else {\n            return [];\n          }\n        });\n      };\n\n      this.mapFeatureName = function (feature) {\n        var path = NAMES_MAP[feature.valueType];\n        return path + '.' + feature.name.replace(/\\./g, '_').replace(':', ';');\n      };\n    });\n","'use strict';\n\nrequire('./system');\nrequire('./system-builder');\nrequire('./system-task-progress');\nrequire('./systems-list');\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('SystemBuilderCtrl', function ($scope, SystemIndexingTasks, $location, $modal) {\n    $scope.systemName = '';\n    $scope.systemDescription = '';\n    $scope.useXCas = false;\n\n    $scope.uploading = false;\n\n\n    $scope.submit = function () {\n      $scope.uploading = true;\n\n      var modal = $modal.open({\n        template: '<div><h3>Uploading File</h3><p><progressbar value=\"progress\"></progressbar></p></div>'\n      });\n\n      SystemIndexingTasks.indexMetadata($scope.systemName, $scope.systemDescription)\n        .then (function (index) {\n          SystemIndexingTasks.indexSystem(index, $scope.file, $scope.useXCas)\n            .progress(function (progress) {\n              $scope.progress = progress.loaded / progress.total * 100;\n            })\n            .then(function (result) {\n              $scope.progress = 1.0;\n              modal.dismiss('done');\n              $location.path('/system-task-progress/' + result.data.index);\n            });\n        });\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('SystemTaskProgressCtrl', function ($scope, $interval, $route, $location, SystemIndexingTasks) {\n    $scope.index = $route.current.params.index;\n\n    var getProgress = function () {\n      SystemIndexingTasks.withId($scope.index)\n        .then(function (result) {\n          $scope.systemIndexingTask = result;\n        });\n    };\n\n    var refresh = $interval(function() {\n      getProgress();\n    }, 3000);\n\n    var cancel = function() {\n      if (angular.isDefined(refresh)) {\n        $interval.cancel(refresh);\n        refresh = undefined;\n      }\n    };\n\n    $scope.goToSystem = function () {\n      $location.path('/system/' + $scope.index);\n    };\n\n    getProgress();\n\n    $scope.$on('$destroy', function () {\n      cancel();\n    });\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('SystemCtrl', function ($routeParams, $location, $scope, system, Type, CasProcessingIndex, $route) {\n    $scope.systemIndex = $routeParams.systemIndex;\n    $scope.system = system;\n\n    $scope.infoActive = true;\n    $scope.primitivesActive = false;\n    $scope.referencesActive = false;\n    $scope.instancesActive = false;\n    $scope.deleteWarned = false;\n\n    $scope.$watch(function () {\n      return $location.search();\n    }, function (value) {\n      updateFromParams(value);\n    }, true);\n\n    var updateFromParams = function (value) {\n      $scope.infoActive = !!value.info;\n      $scope.primitivesActive = !!value.primitives;\n      $scope.referencesActive = !!value.references;\n      $scope.instancesActive = !!value.instances;\n      if (value.type) {\n        $scope.selectedTypeName = value.type;\n      } else {\n        delete $scope.selectedTypeName;\n      }\n    };\n\n    updateFromParams($routeParams);\n\n    $scope.deleteSystem = function () {\n      if (!$scope.deleteWarned) {\n        $scope.deleteWarned = true;\n      } else {\n        CasProcessingIndex.deleteSystem($scope.systemIndex)\n          .then(function () {\n            $location.path('/type-systems');\n            $route.reload();\n          });\n      }\n    };\n\n    $scope.selectedInfo = function () {\n      if ($scope.selectedTypeName) {\n        clearTabs();\n        $location.search('info', true).replace();\n      }\n    };\n\n    $scope.selectedPrimitives = function () {\n      if ($scope.selectedTypeName) {\n        clearTabs();\n        $location.search('primitives', true).replace();\n      }\n    };\n\n    $scope.selectedReferences = function () {\n      if ($scope.selectedTypeName) {\n        clearTabs();\n        $location.search('references', true).replace();\n      }\n    };\n\n    $scope.selectedInstances = function () {\n      if ($scope.selectedTypeName) {\n        clearTabs();\n        $location.search('instances', true).replace();\n      }\n    };\n\n    var clearTabs = function () {\n      $location.search('info', null).replace();\n      $location.search('primitives', null).replace();\n      $location.search('references', null).replace();\n      $location.search('instances', null).replace();\n    };\n\n    $scope.selectType = function (type) {\n      var name = type.typeName;\n      if ($scope.selectedTypeName !== name) {\n        $scope.selectedTypeName = name;\n        $location.search('type', $scope.selectedTypeName).search('info', true).replace();\n      } else {\n        $scope.clearSelectedType();\n      }\n    };\n\n    $scope.clearSelectedType = function () {\n      delete $scope.selectedTypeName;\n      clearTabs();\n      $location.search('type', null).replace();\n      $location.search('info', true).replace();\n    };\n\n    $scope.$watch('selectedTypeName', function (newValue) {\n      if (newValue) {\n        Type.withName($scope.systemIndex, $scope.selectedTypeName).then(function (result) {\n          $scope.selectedType = result;\n        }, function (reason) {\n          delete $scope.selectedType;\n        });\n      }\n    });\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('SystemsListCtrl', function ($location, $routeParams, $scope, CasProcessingIndex, nlptabConfig, $route) {\n    $scope.isSecure = nlptabConfig.isSecure;\n\n    $scope.pagination = {from: 0, size: 10};\n\n    $scope.deleteWarned = false;\n\n    $scope.fetchSystems = function () {\n      CasProcessingIndex.all($scope.pagination).\n      then(function (result) {\n        $scope.pagination.total = result.total;\n        $scope.systems = result.casProcessingIndexes;\n      });\n    };\n\n    $scope.selectSystem = function (systemIndex) {\n      $location.path('/system/' + systemIndex);\n    };\n\n    $scope.deleteSystem = function ($event, system) {\n      $event.stopPropagation();\n      if ($scope.deleteWarned) {\n        CasProcessingIndex.deleteSystem(system)\n          .then(function () {\n            $scope.fetchSystems();\n          });\n      } else {\n        $scope.deleteWarned = true;\n      }\n    };\n\n    $scope.fetchSystems();\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('booleanPrimitiveFeature', function () {\n    return {\n      templateUrl: '../../../partials/systems/boolean-primitive-feature.html',\n      restrict: 'E',\n      scope: {\n        feature: '=',\n        systemIndex: '=',\n        selectedType: '=',\n        values: '='\n      },\n      controller: function ($scope, FeatureStructure) {\n        FeatureStructure.termsAndMissingForFeature($scope.systemIndex, $scope.selectedType.typeName,\n          'booleanFeatures.' + $scope.feature.name.replace(/\\./g, '_').replace(/:/g, ';'))\n          .then(function (result) {\n            $scope.bool = result;\n            if ($scope.values) {\n              $scope.values.values = result.values.map(function (value) {\n                return value.key;\n              });\n            }\n          });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('floatPrimitiveFeature', function () {\n    return {\n      templateUrl: '../../../partials/systems/float-primitive-feature.html',\n      restrict: 'E',\n      scope: {\n        feature: '=',\n        systemIndex: '=',\n        selectedType: '=',\n        values: '='\n      },\n      controller: function ($scope, FeatureStructure) {\n        FeatureStructure.termsMissingCardinalityAndPercentilesForFeature($scope.systemIndex,\n          $scope.selectedType.typeName, 'floatFeatures.' + $scope.feature.name.replace(/\\./g, '_').replace(/:/g, ';'))\n          .then(function (result) {\n            $scope.float = result;\n          });\n      }\n    };\n  });\n","'use strict';\n\nrequire('./boolean-primitive-feature');\nrequire('./float-primitive-feature');\nrequire('./instances-detail');\nrequire('./int-primitive-feature');\nrequire('./reference-features-detail');\nrequire('./string-primitive-feature');\nrequire('./system-types-list');\nrequire('./type-info');\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('instancesDetail',\n    function () {\n      return {\n        templateUrl: '../../../partials/systems/instances-detail.html',\n        restrict: 'E',\n        controller: function InstancesDetailCtrl($scope, FeatureStructure, Pagination) {\n          $scope.instancesPagination = Pagination.withPageAndItemsPerPage(1, 1);\n\n          $scope.childTypes = [];\n\n          $scope.toggleType = function ($index) {\n            var childType = $scope.childTypes[$index];\n            childType.isSelected = !childType.isSelected;\n            $scope.instancesPagination.reset();\n            loadTypeInstances();\n          };\n\n          $scope.invertTypeSelection = function () {\n            $scope.childTypes = $scope.childTypes.map(function (childType) {\n              childType.isSelected = !childType.isSelected;\n              return childType;\n            });\n            $scope.instancesPagination.reset();\n            loadTypeInstances();\n          };\n\n          /**\n           * Fetches the child types of the selected type.\n           */\n          var fetchChildTypes = function () {\n            $scope.instancesPagination.reset();\n            if ($scope.selectedType) {\n              FeatureStructure.primaryTypesFor($scope.systemIndex, $scope.selectedType.typeName)\n                .then(function (childTypeNames) {\n                  $scope.childTypes = childTypeNames.map(function (childTypeName) {\n                    return {\n                      isSelected: true,\n                      name: childTypeName\n                    };\n                  });\n\n                  loadTypeInstances();\n                });\n            }\n          };\n\n          /**\n           * Fetches the instances of the selected type and its selected children.\n           */\n          var loadTypeInstances = function () {\n            $scope.featureStructureInstance = undefined;\n\n            var deselectedTypes = [];\n            var i;\n            for (i = 0; i < $scope.childTypes.length; i++) {\n              var childType = $scope.childTypes[i];\n              if (!childType.isSelected) {\n                deselectedTypes.push(childType.name);\n              }\n            }\n\n            FeatureStructure.ofTypeWithoutPrimaryTypes($scope.systemIndex, $scope.selectedType.typeName, deselectedTypes,\n              $scope.instancesPagination)\n              .then(function (featureStructures) {\n                if (featureStructures.length > 0) {\n                  $scope.featureStructureInstance = featureStructures[0];\n                }\n              });\n          };\n\n          $scope.$watch('selectedType',\n            /**\n             * Angular watch function, watches for selected type to change and fetches the new children of that type.\n             */\n            function () {\n              fetchChildTypes();\n            }\n          );\n\n          $scope.$watch('instancesPagination.page',\n            /**\n             * Angular watch function, watches for the page to change, loading that instance.\n             */\n            function () {\n              loadTypeInstances();\n            }\n          );\n\n        }\n      };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('intPrimitiveFeature', function () {\n    return {\n      templateUrl: '../../../partials/systems/int-primitive-feature.html',\n      restrict: 'E',\n      scope: {\n        feature: '=',\n        systemIndex: '=',\n        selectedType: '=',\n        values: '='\n      },\n      controller: function ($scope, FeatureStructure) {\n        FeatureStructure.termsMissingCardinalityAndPercentilesForFeature($scope.systemIndex,\n          $scope.selectedType.typeName, 'intFeatures.' + $scope.feature.name.replace(/\\./g, '_').replace(/:/g, ';'))\n          .then(function (result) {\n            $scope.int = result;\n            if ($scope.values) {\n              $scope.values.values = result.values.map(function (value) {\n                return value.key;\n              });\n            }\n          });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n    .directive('referenceFeaturesDetail', function () {\n        return {\n            templateUrl: '../../../partials/systems/reference-features-detail.html',\n            restrict: 'E'\n        };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('stringPrimitiveFeature', function () {\n    return {\n      templateUrl: '../../../partials/systems/string-primitive-feature.html',\n      restrict: 'E',\n      scope: {\n        feature: '=',\n        systemIndex: '=',\n        selectedType: '=',\n        values: '='\n      },\n      controller: function ($scope, FeatureStructure) {\n        var fetch = function () {\n          FeatureStructure.termsMissingAndCardinalityForFeature($scope.systemIndex, $scope.selectedType.typeName,\n            'stringFeatures.' + $scope.feature.name.replace(/\\./g, '_').replace(/:/g, ';'))\n            .then(function (result) {\n              $scope.string = result;\n              if ($scope.values) {\n                $scope.values.values = result.values.map(function (value) {\n                  return value.key;\n                });\n              }\n            });\n        };\n\n        $scope.$watch('feature', function () {\n          fetch();\n        });\n\n        $scope.$watch('systemIndex', function () {\n          fetch();\n        });\n\n        $scope.$watch('selectedType', function () {\n          fetch();\n        });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n    .directive('systemTypesList', function () {\n        return {\n            templateUrl: '../../../partials/systems/system-types-list.html',\n            restrict: 'E',\n            controller: function ($scope, $location, Type) {\n                $scope.pagination = {page: 1, itemsPerPage: 15};\n                $scope.filter = '';\n\n                var ignore = false;\n                $scope.$watch('pagination.page', function (newValue, oldValue) {\n                    if (!ignore) {\n                        if (newValue !== oldValue) {\n                            $scope.fetchTypes();\n                        }\n                    } else {\n                        ignore = false;\n                    }\n                });\n\n                $scope.$watch('filter', function (newValue, oldValue) {\n                    if (newValue !== oldValue) {\n                        $scope.fetchTypes();\n                    }\n                });\n\n                $scope.fetchTypes = function () {\n                    var from = ($scope.pagination.page - 1) * $scope.pagination.itemsPerPage;\n                    Type.allInSystem($scope.systemIndex, from, $scope.pagination.itemsPerPage, $scope.filter,\n                        'typeName').then(function (result) {\n                            $scope.pagination.totalItems = result.total;\n                            $scope.types = result.types;\n                        });\n                };\n\n                $scope.fetchTypes();\n            }\n        };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n    .directive('typeInfo', function () {\n        return {\n            restrict: 'E',\n            templateUrl: '../../../partials/systems/type-info.html',\n            controller: function ($scope, FeatureStructure, Type) {\n                FeatureStructure.countTotal($scope.systemIndex).then(function (result) {\n                    $scope.totalFeatureStructures = result;\n                });\n\n                $scope.$watch('selectedType.typeName', function (typeName) {\n                    if (typeName) {\n                        FeatureStructure.countOfType($scope.systemIndex, typeName).then(function (result) {\n                            $scope.countOfType = result;\n                        });\n\n                        Type.findChildren($scope.systemIndex, $scope.selectedType.typeName).then(function (children) {\n                            $scope.children = children;\n                        });\n                    }\n                });\n            }\n        };\n    });\n","'use strict';\n\nrequire('./controllers/index');\nrequire('./directives/index');\nrequire('./services/system-indexing-tasks');\n","'use strict';\n\nangular.module('nlptabApp')\n  .service('SystemIndexingTasks',\n    /**\n     * SystemIndexingTasks service.\n     * @param $q angular promises service\n     * @param Es angular Es service\n     * @param nlptabConfig nlptab config\n     * @param $http angular http service\n     * @param Upload angular upload service\n     * @constructor\n     */\n    function SystemIndexingTasks($q, Es, nlptabConfig, $http, Upload) {\n      /**\n       * Returns the source of the document with the id.\n       *\n       * @param {string} id the id\n       * @returns {Promise} promise object for the system index task\n       */\n      this.withId = function (id) {\n        return Es.getSource({\n          index: nlptabConfig.instanceName + 'metadata',\n          type: 'SystemIndexTask',\n          id: id\n        });\n      };\n\n      /**\n       * Runs the first part of indexing, uploading the metadata.\n       * @param {string} systemName\n       * @param {string} systemDescription\n       * @return {string} the new system index created.\n       */\n      this.indexMetadata = function (systemName, systemDescription) {\n        return $http.post(nlptabConfig.esPath + '/_nlptab-systemindexmeta', {\n          systemName: systemName,\n          systemDescription: systemDescription,\n          instance: nlptabConfig.instanceName\n        }).then(function (result) {\n          return result.data.index;\n        });\n      };\n\n      this.indexSystem = function (index, file, useXCas) {\n        return Upload.http({\n          url: nlptabConfig.esPath + '/_nlptab-systemindex?instance=' + nlptabConfig.instanceName + '&index=' + index + '&useXCas=' + useXCas,\n          headers: {\n            'Content-Type': file.type\n          },\n          data: file\n        });\n      };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisBuilderCtrl', function ($scope, $location, CasProcessingIndex, AnalysisTasks) {\n    $scope.systems = [];\n\n    $scope.firstUnitOfAnalysis = {\n      filters: []\n    };\n    $scope.secondUnitOfAnalysis = {\n      filters: []\n    };\n    $scope.featureValueMappings = [];\n    $scope.onlyCompareMatches = false;\n\n    $scope.description = '';\n\n    $scope.fetchSystems = function () {\n      CasProcessingIndex.all(0, 50)\n        .then(function (result) {\n          $scope.systems = result.casProcessingIndexes;\n        });\n    };\n\n    var firstAvail = function (featureName) {\n      var ind = 0;\n      while ($scope.featureValueMappings[ind] && $scope.featureValueMappings[ind][featureName]) {\n        ind++;\n      }\n      if (!$scope.featureValueMappings[ind]) {\n        $scope.featureValueMappings.push(AnalysisTasks.createFeatureValueMapping());\n      }\n      return $scope.featureValueMappings[ind];\n    };\n\n    $scope.$watch('firstUnitOfAnalysis.selectedType', function () {\n      for (var i = 0; i < $scope.featureValueMappings.length; i++) {\n        $scope.featureValueMappings[i].hypothesisFeature = undefined;\n      }\n    });\n\n    $scope.$watch('secondUnitOfAnalysis.selectedType', function () {\n      for (var i = 0; i < $scope.featureValueMappings.length; i++) {\n        $scope.featureValueMappings[i].referenceFeature = undefined;\n      }\n    });\n\n    var updateEquivalences = function (featureValueMapping) {\n      if (featureValueMapping.hypothesisFeature) {\n        if (featureValueMapping.hypothesisIsCollection) {\n          if (featureValueMapping.referenceIsCollection) {\n            featureValueMapping.equivalence = 'any are in';\n            featureValueMapping.equivalenceOptions = ['any are in', 'none are in', 'all are in', 'equals'];\n          } else {\n            featureValueMapping.equivalence = 'any are equal to';\n            featureValueMapping.equivalenceOptions = ['any are equal to', 'none are equal to'];\n          }\n        } else {\n          if (featureValueMapping.referenceIsCollection) {\n            featureValueMapping.equivalence = 'is in';\n            featureValueMapping.equivalenceOptions = ['is in', 'is not in'];\n          } else {\n            featureValueMapping.equivalence = 'equals';\n            featureValueMapping.equivalenceOptions = ['equals', 'does not equal'];\n          }\n        }\n      }\n    };\n\n    $scope.addHypothesisFeatureValueMapping = function (feature, nestedStructure, isCollection) {\n      var featureValueMapping = firstAvail('hypothesisFeature');\n      featureValueMapping.hypothesisFeature = {feature: feature, nestedStructure: nestedStructure};\n      featureValueMapping.hypothesisIsCollection = isCollection;\n      updateEquivalences(featureValueMapping);\n    };\n\n    $scope.addReferenceFeatureValueMapping = function (feature, nestedStructure, isCollection) {\n      var featureValueMapping = firstAvail('referenceFeature');\n      featureValueMapping.referenceFeature = {feature: feature, nestedStructure: nestedStructure};\n      featureValueMapping.referenceIsCollection = isCollection;\n      updateEquivalences(featureValueMapping);\n    };\n\n    $scope.fetchSystems();\n\n    $scope.isReadyForAnalysis = function () {\n      if (!$scope.firstUnitOfAnalysis.selectedType || !$scope.secondUnitOfAnalysis.selectedType) {\n        return false;\n      }\n      var i;\n      for (i = 0; i < $scope.featureValueMappings.length; i++) {\n        var featureValueMapping = $scope.featureValueMappings[i];\n        if (!featureValueMapping.hypothesisFeature || !featureValueMapping.referenceFeature) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    var removedFeature = function (index) {\n      var featureValueMapping = $scope.featureValueMappings[index];\n      featureValueMapping.valueMappings = [];\n      if (!featureValueMapping.referenceFeature && !featureValueMapping.hypothesisFeature) {\n        $scope.featureValueMappings.splice(index, 1);\n      }\n    };\n\n    $scope.removeReferenceFeature = function (index) {\n      $scope.featureValueMappings[index].referenceFeature = undefined;\n      $scope.featureValueMappings[index].referenceIsCollection = undefined;\n      removedFeature(index);\n    };\n\n    $scope.removeHypothesisFeature = function (index) {\n      $scope.featureValueMappings[index].hypothesisFeature = undefined;\n      $scope.featureValueMappings[index].hypothesisIsCollection = undefined;\n      removedFeature(index);\n    };\n\n    $scope.submitAnalysis = function () {\n      AnalysisTasks.runAnalysis($scope.firstUnitOfAnalysis, $scope.secondUnitOfAnalysis, $scope.featureValueMappings,\n        $scope.description, $scope.onlyCompareMatches)\n        .then(function (result) {\n          $location.path('/analysis-progress/' + result.data.id);\n        });\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisProgressCtrl', function ($scope, $interval, $route, $location, AnalysisTasks) {\n    $scope.analysisId = $route.current.params.analysisId;\n\n    var getAnalysisProgress = function () {\n      AnalysisTasks.withId($scope.analysisId)\n        .then(function (result) {\n          $scope.analysisTask = result;\n        });\n    };\n\n    var refresh = $interval(function() {\n      getAnalysisProgress();\n    }, 1000);\n\n    var cancel = function() {\n      if (angular.isDefined(refresh)) {\n        $interval.cancel(refresh);\n        refresh = undefined;\n      }\n    };\n\n    $scope.$watch('analysisTask', function() {\n      if ($scope.analysisTask && $scope.analysisTask.finished) {\n        if (!$scope.analysisTask.failed) {\n          $location.path('/analysis-results-explore/' + $scope.analysisId);\n        }\n      }\n    });\n\n    getAnalysisProgress();\n\n    $scope.$on('$destroy', function () {\n      cancel();\n    });\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisResultsExploreCtrl', function ($q, $scope, $routeParams, matchCounts) {\n    // Scope properties\n    $scope.examplesOf = $routeParams.examplesOf || 'coOccurrences';\n    $scope.matchCounts = matchCounts;\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisResultsCtrl', function ($q, $scope, $routeParams, $location, MatchCounts, Pagination) {\n    $scope.selectedTested = $routeParams.tested;\n    $scope.selectedGold = $routeParams.gold;\n\n    $scope.pagination = Pagination.withPageAndItemsPerPage(1, 15);\n\n    $scope.$watch('pagination.page', function (newValue, oldValue) {\n      if (newValue !== oldValue) {\n        $location.search('page', newValue).replace();\n        $scope.fetchMatchCounts();\n      }\n    });\n\n    $scope.fetchMatchCounts = function () {\n      MatchCounts.withTestedAndGoldStandard($scope.selectedTested, $scope.selectedGold, $scope.pagination)\n        .then(function (result) {\n          $scope.matchCounts = result.matchCounts;\n          $scope.pagination.totalItems = result.total;\n        });\n    };\n\n    $scope.fetchMatchCounts();\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('AnalysisCtrl', function ($scope, $routeParams, $location, MatchCounts, nlptabConfig, CasProcessingIndex,\n                                        $q, $filter) {\n    $scope.isSecure = nlptabConfig.isSecure;\n\n    $scope.isReady = false;\n\n    $scope.selectTested = function (tested, then) {\n      $scope.selectedTested = tested.index;\n      $scope.selectedGoldStandard = undefined;\n      $scope.isReady = false;\n      $location.search('reference', $scope.selectedTested).replace();\n      $scope.systems.map(function (systemIndex) {\n        MatchCounts.countTestedAndGold(tested.index, systemIndex.index)\n          .then(function (count) {\n            systemIndex['goldCount'] = count;\n            if (then) {\n              then();\n            }\n          });\n      });\n    };\n\n    $scope.selectGoldStandard = function (goldStandard) {\n      $scope.selectedGoldStandard = goldStandard.index;\n      $location.search('gold', $scope.selectedGoldStandard).replace();\n      $scope.isReady = goldStandard.goldCount > 0;\n    };\n\n    CasProcessingIndex.all()\n      .then(function (result) {\n        return $q.all(result.casProcessingIndexes.map(function (systemIndex) {\n          return MatchCounts.countTested(systemIndex.index)\n            .then(function (count) {\n              systemIndex['count'] = count;\n              return systemIndex;\n            });\n        }));\n      })\n      .then(function (result) {\n        $scope.systems = result;\n        if ($routeParams.reference) {\n          var reference = $filter('filter')($scope.systems, {index: $routeParams.reference}, true);\n          $scope.selectTested(reference, function () {\n            if ($routeParams.gold) {\n              var gold = $filter('filter')($scope.systems, {index: $routeParams.gold}, true);\n              $scope.selectGoldStandard(gold);\n            }\n          })\n        }\n      });\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('FeatureExamplesModalCtrl', function ($scope, $uibModalInstance, systemIndex, type, feature) {\n    $scope.systemIndex = systemIndex;\n    $scope.type = type;\n    $scope.feature = feature;\n    $scope.done = function () {\n      $uibModalInstance.dismiss('done');\n    };\n  });\n","'use strict';\n\nrequire('./analysis');\nrequire('./analysis-builder');\nrequire('./analysis-progress');\nrequire('./analysis-results');\nrequire('./analysis-results-explore');\nrequire('./feature-examples-modal');\nrequire('./type-selection-modal');\n","'use strict';\n\nangular.module('nlptabApp')\n  .controller('TypeSelectionModalCtrl', function ($scope, $modalInstance, Type, Pagination, systemIndex, selectedType) {\n    $scope.pagination = Pagination.withPageAndItemsPerPage(1, 20);\n\n    $scope.systemIndex = systemIndex;\n\n    $scope.types = [];\n\n    $scope.selectType = function ($index) {\n      selectedType($scope.types[$index]);\n      $scope.done();\n    };\n\n    var fetchTypes = function () {\n      Type.allInSystem($scope.systemIndex, $scope.pagination.getFrom(), $scope.pagination.getSize())\n        .then(function (result) {\n          $scope.pagination.totalItems = result.total;\n          $scope.types = result.types;\n        });\n    };\n\n    $scope.$watch('pagination.page', function () {\n      fetchTypes();\n    });\n\n    $scope.done = function () {\n      $modalInstance.dismiss('done');\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('confusionMatrixTable', function () {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/confusion-matrix-table.html',\n      restrict: 'E'\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('cooccurringExamplesList', function () {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/cooccurring-examples-list.html',\n      restrict: 'E',\n      controller: function ($scope, CoOccurrenceMatches, Pagination) {\n        $scope.pagination = Pagination.withPageAndItemsPerPage(1, 1);\n\n        var map = {\n          coOccurrences: 'TruePositive',\n          firstOnly: 'FalsePositive',\n          secondOnly: 'FalseNegative'\n        };\n\n        var fetchAnnotationLocations = function () {\n          CoOccurrenceMatches.withTypeAndId(map[$scope.examplesOf], $scope.matchCounts.analysisId, $scope.pagination)\n            .then(function (result) {\n              $scope.pagination.totalItems = result.totalItems;\n              $scope.coOccurrenceMatches = result.coOccurrenceMatches;\n            });\n        };\n\n        $scope.selectExamplesOf = function (value) {\n          $scope.examplesOf = value;\n          fetchAnnotationLocations();\n        };\n\n        $scope.$watch('pagination.page', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            fetchAnnotationLocations();\n          }\n        });\n\n        fetchAnnotationLocations();\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('cooccurringExamplesRow', function (nlptabConfig) {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/cooccurring-examples-row.html',\n      restrict: 'A',\n      require: '^cooccurringExamplesList',\n      controller: function ($scope, FeatureStructure) {\n        $scope.selected = false;\n\n        FeatureStructure.withId($scope.coOccurrenceMatch.firstId, $scope.coOccurrenceMatch.firstSystem)\n          .then(function (result) {\n            $scope.firstFs = result;\n          });\n\n        FeatureStructure.withId($scope.coOccurrenceMatch.secondId, $scope.coOccurrenceMatch.secondSystem)\n          .then(function (result) {\n            $scope.secondFs = result;\n          });\n      }\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('featureOn',\n    /**\n     * feature-on element directive, displays a full feature name as \"featureShortName on Type\".\n     *\n     * @returns {{template: string, restrict: string, scope: {featureName: string}, link: featureOn.link}}\n     */\n    function () {\n      return {\n        template: '<span ng-if=\"featureName\">{{featureShortName}} on <type-name name=\"typeName\" unlinked></type-name></span>',\n        restrict: 'E',\n        scope: {\n          featureName: '='\n        },\n        /**\n         * Linking function for featureOn directive.\n         *\n         * @param {$rootScope.Scope} scope\n         */\n        link: function (scope) {\n          scope.$watch('featureName',\n            /**\n             * Watches for updates to feature name.\n             *\n             * @param {string} featureName\n             */\n            function (featureName) {\n              if (featureName) {\n                var split = featureName.indexOf(':');\n                scope.featureShortName = featureName.substring(split + 1, featureName.length);\n                scope.typeName = featureName.substring(0, split);\n              }\n            });\n        }\n      };\n    });\n","'use strict';\n\nangular.module('nlptabApp')\n  .directive('featureValueSuggestion', function (FeatureStructure) {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/feature-value-suggestion.html',\n      restrict: 'E',\n      scope: {\n        value: '=',\n        systemIndex: '=',\n        type: '=',\n        feature: '='\n      },\n      link: function (scope) {\n        scope.selected = {};\n        FeatureStructure.termsAndMissingForFeature(scope.systemIndex, scope.type.typeName,\n          FeatureStructure.mapToEsFeature(scope.feature), 100000)\n          .then(function (result) {\n            scope.values = result.values.map(function (bucket) {\n              return bucket.key;\n            });\n          });\n\n        scope.$watch('selected.value', function (value) {\n          scope.value = value;\n        });\n      }\n    };\n  });\n","'use strict';\n\nrequire('./confusion-matrix-table');\nrequire('./cooccurring-examples-list');\nrequire('./cooccurring-examples-row');\nrequire('./feature-on');\nrequire('./feature-value-suggestion');\nrequire('./sets-sorts-by');\nrequire('./unit-of-analysis');\nrequire('./unit-of-analysis-description');\n","'use strict';\n\nangular.module('nlptabApp')\n    .directive('setsSortBy', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                element.bind('click', function () {\n                    scope.setSortBy(attr.setsSortBy);\n                });\n\n                scope.$watch('sorters', function (val) {\n                    var index = val.indexOf(attr.setsSortBy);\n                    if (index > -1) {\n                        element.addClass('btn-info');\n                        element.removeClass('btn-default');\n                    } else {\n                        element.addClass('btn-default');\n                        element.removeClass('btn-info');\n                    }\n                });\n            }\n        };\n    });\n","'use strict';\n\n\nangular.module('nlptabApp')\n  .directive('unitOfAnalysisDescription', function () {\n    return {\n      restrict: 'E',\n      scope: {\n        unitOfAnalysis: '=',\n        featureValueMappings: '=',\n        isHypothesis: '='\n      },\n      templateUrl: '../../../partials/type_systems_analysis/unit-of-analysis-description.html',\n      link: function(scope) {\n        scope.mappings = scope.featureValueMappings.map(function (element) {\n          if (scope.isHypothesis) {\n            return element.hypothesisFeature;\n          } else {\n            return element.referenceFeature;\n          }\n        });\n      }\n    };\n  });\n","'use strict';\n\nvar collections = ['uima.cas.BooleanArray', 'uima.cas.ByteArray', 'uima.cas.ShortArray', 'uima.cas.IntegerArray',\n  'uima.cas.LongArray', 'uima.cas.FloatArray', 'uima.cas.DoubleArray', 'uima.cas.StringArray', 'uima.cas.FloatList',\n  'uima.cas.IntegerList', 'uima.cas.StringList'];\n\n\nangular.module('nlptabApp')\n  .directive('unitOfAnalysis', function () {\n    return {\n      templateUrl: '../../../partials/type_systems_analysis/unit-of-analysis.html',\n      restrict: 'E',\n      scope: {\n        unitOfAnalysis: '=',\n        systems: '=',\n        addFeatureValueMapping: '='\n      },\n      controller: function ($scope, Type, $uibModal) {\n        $scope.types = [];\n\n        $scope.tree = [];\n\n        $scope.filterOptions = ['equals', 'in'];\n\n        $scope.fetchTypes = function (filter) {\n          if ($scope.unitOfAnalysis.selectedSystem && $scope.unitOfAnalysis.selectedSystem.index) {\n            Type.allInSystem($scope.unitOfAnalysis.selectedSystem.index, 0, 30, filter)\n              .then(function (result) {\n                $scope.types = result.types;\n              });\n          }\n        };\n\n        $scope.openTypeSelection = function () {\n          $uibModal.open({\n            templateUrl: '../../../partials/type_systems_analysis/type-selection-modal.html',\n            controller: 'TypeSelectionModalCtrl',\n            size: 'lg',\n            resolve: {\n              systemIndex: function () {\n                return $scope.unitOfAnalysis.selectedSystem.index;\n              },\n              selectedType: function () {\n                return function (selectedType) {\n                  $scope.unitOfAnalysis.selectedType = selectedType;\n                };\n              }\n            }\n          });\n        };\n\n        $scope.$watch('unitOfAnalysis.selectedSystem', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            delete $scope.unitOfAnalysis.selectedType;\n            $scope.fetchTypes('');\n          }\n        });\n\n        var pushType = function (type, level, index) {\n          Type.subclasses($scope.unitOfAnalysis.systemIndex, type.typeName)\n            .then(function (result) {\n              var i, j;\n              var runningIndex = index;\n              var added = [];\n              for (j = 0; j < type.primitiveFeatures.length; j++) {\n                added.push(type.primitiveFeatures[j].shortName);\n                $scope.tree.splice(runningIndex, 0, {\n                  feature: type.primitiveFeatures[j],\n                  onType: type.typeName,\n                  collection: collections.indexOf(type.primitiveFeatures[j].valueType) !== -1,\n                  level: level,\n                  primitive: true,\n                  class: ['col-md-' + (12 - level), 'col-md-offset-' + level],\n                  subclass: false\n                });\n                runningIndex++;\n              }\n              for (i = 0; i < result.length; i++) {\n                for (j = 0; j < result[i].primitiveFeatures.length; j++) {\n                  if (added.indexOf(result[i].primitiveFeatures[j].shortName) === -1) {\n                    added.push(result[i].primitiveFeatures[j].shortName);\n                    $scope.tree.splice(runningIndex, 0, {\n                      feature: result[i].primitiveFeatures[j],\n                      onType: result[i].typeName,\n                      collection: collections.indexOf(result[i].primitiveFeatures[j].valueType) !== -1,\n                      level: level,\n                      primitive: true,\n                      class: ['col-md-' + (12 - level), 'col-md-offset-' + level],\n                      subclass: true\n                    });\n                    runningIndex++;\n                  }\n                }\n              }\n              for (j = 0; j < type.referenceFeatures.length; j++) {\n                $scope.tree.splice(runningIndex, 0, {\n                  feature: type.referenceFeatures[j],\n                  collection: type.referenceFeatures[j].valueType.indexOf('[]') !== -1 || type.referenceFeatures[j].valueType === 'uima.cas.FSArray',\n                  level: level,\n                  primitive: false,\n                  expanded: false,\n                  sofa: type.referenceFeatures[j].shortName === 'sofa',\n                  class: ['col-md-' + (12 - level), 'col-md-offset-' + level]\n                });\n                runningIndex++;\n              }\n            });\n        };\n\n        $scope.expandItem = function (index) {\n          var item = $scope.tree[index];\n          var valueType = item.feature.valueType;\n          var arrIndex = valueType.indexOf('[]');\n          if (arrIndex !== -1) {\n            valueType = valueType.substring(0, arrIndex);\n          }\n          Type.withName($scope.unitOfAnalysis.selectedSystem.index, valueType)\n            .then(function (result) {\n              item.expanded = true;\n              pushType(result, item.level + 1, index + 1);\n            });\n        };\n\n        $scope.collapseItem = function (index) {\n          var item = $scope.tree[index];\n          item.expanded = false;\n          var i = 0;\n          while ($scope.tree[index + 1 + i] && $scope.tree[index + 1 + i].level === item.level + 1) {\n            i++;\n          }\n          $scope.tree.splice(index + 1, i);\n        };\n\n        var getNestedPath = function (index) {\n          var item = $scope.tree[index];\n          var nestedPath;\n          var level = item.level;\n          var collection = item.collection;\n          if (level !== 0) {\n            nestedPath = [];\n            var ptr = index - 1;\n            while (level !== 0) {\n              var parent = $scope.tree[ptr];\n              if (parent.level === level - 1) {\n                nestedPath.push(parent.feature.name);\n                collection = item.collection || parent.collection;\n                level--;\n              }\n              ptr--;\n            }\n          }\n          return {item: item, nestedPath: nestedPath, collection: collection};\n        };\n\n        $scope.addFeature = function (index) {\n          var __ret = getNestedPath(index);\n          $scope.addFeatureValueMapping(__ret.item.feature, __ret.nestedPath, __ret.collection);\n        };\n\n        $scope.$watch('unitOfAnalysis.selectedType', function (value) {\n          $scope.tree = [];\n          if (value) {\n            pushType(value, 0, 0);\n          }\n        });\n\n        $scope.examples = function (index) {\n          $uibModal.open({\n            templateUrl: '../../../partials/type_systems_analysis/feature-examples-modal.html',\n            controller: 'FeatureExamplesModalCtrl',\n            size: 'lg',\n            resolve: {\n              systemIndex: function () {\n                return $scope.unitOfAnalysis.selectedSystem.index;\n              },\n              type: function () {\n                return $scope.tree[index].onType;\n              },\n              feature: function () {\n                return $scope.tree[index].feature;\n              }\n            }\n          });\n        };\n\n        $scope.addFilter = function (index) {\n          var item = $scope.tree[index];\n          var filter = {\n            feature: item.feature.shortName,\n            value: '',\n            option: 'equals'\n          };\n\n          $scope.unitOfAnalysis.filters.push(filter);\n        };\n\n        $scope.deleteFilter = function (index) {\n          $scope.unitOfAnalysis.filters.splice(index, 1);\n        };\n      }\n    };\n  });\n","'use strict';\n\nrequire('./controllers/index');\nrequire('./directives/index');\n\nrequire('./services/analysis-tasks');\nrequire('./services/co-occurrence-matches');\nrequire('./services/match-counts');\n","'use strict';\n\nangular.module('nlptabApp')\n  .service('AnalysisTasks', function ($q, Es, nlptabConfig, $http) {\n    this.withId = function (id) {\n      return Es.getSource({\n        index: nlptabConfig.instanceName + 'analysis',\n        type: 'AnalysisTask',\n        id: id\n      });\n    };\n\n    function FeatureValueMapping() {\n      this.valueMappings = [];\n    }\n\n    FeatureValueMapping.prototype.removeValueMapping = function (index) {\n      this.valueMappings.splice(index, 1);\n    };\n\n    FeatureValueMapping.prototype.addValueMapping = function () {\n      this.valueMappings.push({});\n    };\n\n    this.createFeatureValueMapping = function () {\n      return new FeatureValueMapping();\n    };\n\n    this.runAnalysis = function (hypothesisUnitOfAnalysis, referenceUnitOfAnalysis, featureValueMappings, description, hitMiss) {\n      var config = {\n        hypothesisUnitOfAnalysis: {\n          selectedSystem: hypothesisUnitOfAnalysis.selectedSystem.index,\n          selectedType: hypothesisUnitOfAnalysis.selectedType.typeName,\n          filters: hypothesisUnitOfAnalysis.filters\n        },\n        referenceUnitOfAnalysis: {\n          selectedSystem: referenceUnitOfAnalysis.selectedSystem.index,\n          selectedType: referenceUnitOfAnalysis.selectedType.typeName,\n          filters: referenceUnitOfAnalysis.filters\n        },\n        featureValueMappings: featureValueMappings,\n        instance: nlptabConfig.instanceName,\n        description: description,\n        fuzzDistance: 0,\n        hitMiss: hitMiss ? hitMiss ? 'true' : 'false' : 'false'\n      };\n\n      return $http.post(nlptabConfig.esServer + '/_nlptab-analysis', config);\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .service('CoOccurrenceMatches', function CoOccurrenceMatches($q, Es, nlptabConfig) {\n    var index = nlptabConfig.instanceName + 'analysis';\n    var tpType = 'TruePositive';\n    var fpType = 'FalsePositive';\n    var fnType = 'FalseNegative';\n\n\n    this.withTypeAndId = function (type, analysisId, pagination) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: pagination.getFrom(),\n          size: pagination.getSize(),\n          query: {\n            bool: {\n              must: [\n                {\n                  match: {\n                    analysisId: analysisId\n                  }\n                }\n              ],\n              should: [\n                {\n                  query_string: {\n                    default_field: 'firstId',\n                    query: '*'\n                  }\n                },\n                {\n                  query_string: {\n                    default_field: 'secondId',\n                    query: '*'\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }).then(function (body) {\n        return {\n          totalItems: body.hits.total,\n          coOccurrenceMatches: body.hits.hits.map(function (hit) {\n            return hit._source;\n          })\n        };\n      });\n    };\n  });\n","'use strict';\n\nangular.module('nlptabApp')\n  .service('MatchCounts', function MatchCounts($q, Es, nlptabConfig) {\n    var index = nlptabConfig.instanceName + 'analysis';\n    var type = 'MatchCounts';\n\n    /**\n     * Uses an elasticsearch facet to get all tested systems.\n     *\n     * @returns {Array}\n     */\n    this.allTested = function () {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: 0,\n          size: 0,\n          query: {\n            match_all: {}\n          },\n          aggs: {\n            tested: {\n              terms: {\n                field: 'hypothesisUnitOfAnalysis.systemIndex',\n                size: 10\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.aggregations && body.aggregations.tested && body.aggregations.tested.buckets) {\n          return body.aggregations.tested.buckets.map(function (item) {\n            return item.key;\n          });\n        } else {\n          return $q.reject('Invalid response');\n        }\n      });\n    };\n\n    /**\n     * Uses a faceted elasticsearch search to return all gold standards for a specific tested\n     *\n     * @param {String} tested\n     * @returns {Array}\n     */\n    this.allGoldStandardsForTested = function (tested) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: 0,\n          size: 0,\n          query: {\n            term: {\n              'hypothesisUnitOfAnalysis.systemIndex': tested\n            }\n          },\n          aggs: {\n            gold: {\n              terms: {\n                field: 'referenceUnitOfAnalysis.systemIndex',\n                size: 10\n              }\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.aggregations && body.aggregations.gold && body.aggregations.gold.buckets) {\n          return body.aggregations.gold.buckets.map(function (item) {\n            return item.key;\n          });\n        } else {\n          return $q.reject('Invalid response');\n        }\n      });\n    };\n\n    /**\n     * Returns all match counts that have the tested system and the gold standard.\n     *\n     * @param {String} tested\n     * @param {String} goldStandard\n     * @param {Object} pagination\n     * @returns {Array}\n     */\n    this.withTestedAndGoldStandard = function (tested, goldStandard, pagination) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: pagination.getFrom(),\n          size: pagination.getSize(),\n          query: {\n            bool: {\n              must: [\n                {\n                  term: {\n                    'hypothesisUnitOfAnalysis.systemIndex': tested\n                  }\n                },\n                {\n                  term: {\n                    'referenceUnitOfAnalysis.systemIndex': goldStandard\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits && body.hits.hits) {\n          return {\n            matchCounts: body.hits.hits.map(function (hit) {\n              return angular.extend(hit._source, {\n                _id: hit._id\n              });\n            }),\n            total: body.hits.total\n          };\n        } else {\n          return $q.reject('Invalid response');\n        }\n      });\n    };\n\n    this.withId = function (id) {\n      return Es.get({\n        index: index,\n        type: type,\n        id: id\n      }).then(function (response) {\n        return response._source;\n      });\n    };\n\n    this.countTested = function (tested) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: 0,\n          size: 0,\n          query: {\n            term: {\n              'hypothesisUnitOfAnalysis.systemIndex': tested\n            }\n          }\n        }\n      }).then(function (body) {\n        return body.hits.total;\n      });\n    };\n\n    this.countTestedAndGold = function(tested, goldStandard) {\n      return Es.search({\n        index: index,\n        type: type,\n        body: {\n          from: 0,\n          size: 0,\n          query: {\n            bool: {\n              must: [\n                {\n                  term: {\n                    'hypothesisUnitOfAnalysis.systemIndex': tested\n                  }\n                },\n                {\n                  term: {\n                    'referenceUnitOfAnalysis.systemIndex': goldStandard\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }).then(function (body) {\n        if (body && body.hits) {\n          return body.hits.total;\n        } else {\n          return $q.reject('Invalid response');\n        }\n      });\n    }\n  });\n"],"sourceRoot":"/source/"}