'use strict';

angular.module('nlptabApp').controller('ExportTypesCtrl', function ($scope,  CasProcessingIndex, Type, nlptabConfig, $location, $uibModal) {

    $scope.isSecure = nlptabConfig.isSecure;

    $scope.pagination = {from: 0, size: 10};

    $scope.asAmicus = false;

    $scope.fetchSystems = function () {
	CasProcessingIndex.all($scope.pagination).
	    then(function (result) {
		$scope.pagination.total = result.total;
		$scope.systems = result.casProcessingIndexes;
		$scope.fetchTypes();
	    });
    };

    $scope.fetchSystems();

    $scope.fetchTypes = function () {
	$scope.systems.map(function(val){
	    Type.querySystemTypes(val.index, { export: true } ).then(function(result){
		angular.extend(val, { types : result.types });
	    });
	});
    };

    $scope.amicusSystems = function () {
	var ret = '';
	var fromViews = {
	    'clamp' : '_InitialView',
	    'biomedicus' : 'SystemView',
	    'metamap' : '_InitialView',
	    'ctakes' : '_InitialView'
	};

	$scope.systems.map(function(sys){
	    var templ = `
- {
    name: ${sys.system.toLowerCase()},
    dataPath: /home/ubuntu/host_data/${sys.system.toLowerCase()}_out,
    readFromView: ${fromViews[sys.system.toLowerCase()]},
    saveIntoView: ${sys.system}View
  }`;

	    if( sys.types.length > 0 ) {
		ret += templ + "\n";
	    }
	});

	return ret;
    };

    $scope.amicusTypes = function () {
	var ret = '';

	$scope.systems.map(function(sys){
	    sys.types.map(function(typ){
		var templ = `
- !!edu.umn.amicus.config.TranslatorConfig

  name: ${ typ.typeName }
  input: {
    annotationType: ${ typ.typeName },
    puller: edu.umn.amicus.pullers.PassthroughPuller,
    fromView: ${sys.system}View
  }

  outputs:
  - {
    writeView: FilteredView
  }`;

	     	    ret += templ + "\n";
		});
	});
	return ret;
    };


    $scope.exportFile = function () {


	if (!$scope.asAmicus){
	    var ret = '';

	    $scope.systems.map(function(sys){
		sys.types.map(function(typ){
	     	    ret += typ.typeName + "\n";
		});
	    });

	    var objURL = URL.createObjectURL(new Blob([ret], {type: 'text/plain'}));
	    var a = document.createElement("a");
	    document.body.appendChild(a);
	    a.style = "display: none";
	    a.href = objURL;
	    a.download = "export.txt";
	    a.click();
	    window.URL.revokeObjectURL(objURL);
	    a.parentNode.removeChild(a);
	} else {
	    var ret = `# Autogenerated NLP-TAB AMICUS configuration:
# may need to be changed if paths or names are nonstandard.
!!edu.umn.amicus.config.AmicusPipelineConfiguration
pipelineName: NLPTAB-AMICUS

allSystemsUsed:
${$scope.amicusSystems()}

xmiOutPath: /home/ubuntu/host_data/amicus_out

pipelineComponents:
${$scope.amicusTypes()}
`;

	    var objURL = URL.createObjectURL(new Blob([ret], {type: 'text/plain'}));
	    var a = document.createElement("a");
	    document.body.appendChild(a);
	    a.style = "display: none";
	    a.href = objURL;
	    a.download = "export.yml";
	    a.click();
	    window.URL.revokeObjectURL(objURL);
	    a.parentNode.removeChild(a);
	}
    };

});
